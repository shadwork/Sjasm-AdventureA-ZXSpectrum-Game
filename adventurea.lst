0001   0000                                                         DEVICE ZXSPECTRUM48
0002   0000             
0003   0000                                                         include defines.asm
0001+  0000             
0002+  0000             
0003+  0000             	define CLR_BLACK %000000
0004+  0000             	define CLR_BLUE %000001
0005+  0000             	define CLR_RED %000010
0006+  0000             	define CLR_MAGENTA %000011
0007+  0000             	define CLR_GREEN %000100
0008+  0000             	define CLR_CYAN %000101
0009+  0000             	define CLR_WHITE %000111
0010+  0000             
0011+  0000             	define CLR_BRIGHT %1000000
0012+  0000             
0013+  0000               MACRO COLOR ink, paper
0014+  0000~                LD A,(ink + paper<<3) 
0015+  0000               ENDM
0016+  0000             
0004   0000             
0005   0000                                                         define COMMAND_DOWN 0x01
0006   0000                                                         define COMMAND_NORT 0x02
0007   0000                                                         define COMMAND_SOUT 0x03
0008   0000                                                         define COMMAND_EAST 0x04
0009   0000                                                         define COMMAND_WEST 0x05
0010   0000                                                         define COMMAND_GET 0x0D
0011   0000                                                         define COMMAND_PUT 0x0E
0012   0000                                                         define COMMAND_FIRE 0x0F
0013   0000             			                                define COMMAND_BOOT 0x10 
0014   0000             			                                define COMMAND_STAR 0x11 
0015   0000             			                                define COMMAND_KEY 0x12 
0016   0000             			                                define COMMAND_GUN 0x13 
0017   0000                                                         define COMMAND_USED 0x14 
0018   0000                                                         define COMMAND_BAR 0x15    
0019   0000                                                         define COMMAND_COIN 0x16 
0020   0000                                                         define COMMAND_MIRR 0x17
0021   0000                                                         define COMMAND_BROK 0x18
0022   0000                                                         define COMMAND_GLOV 0x19
0023   0000                                                         define COMMAND_ROPE 0x1A
0024   0000                                                         define COMMAND_FLOO 0x1B 
0025   0000                                                         define COMMAND_STAL 0x1C
0026   0000                                                         define COMMAND_ICE 0x1D  
0027   0000                                                         define COMMAND_WATE 0x1E     
0028   0000                                                         define COMMAND_MAN 0x1F                                                                                                                                                                                                                       
0029   0000                                                         define COMMAND_DOOR 0x20 
0030   0000                                                         define COMMAND_OPEN 0x21 
0031   0000                                                         define COMMAND_WIND 0x22 
0032   0000                                                         define COMMAND_SHIP 0x23 
0033   0000                                                         define COMMAND_SECU 0x24
0034   0000                                                         define COMMAND_FLIN 0x25
0035   0000                                                         define COMMAND_STON 0x26
0036   0000                                                         define COMMAND_DRAW 0x27    
0037   0000                                                         define COMMAND_HELP 0x28                                             
0038   0000                                                         define COMMAND_INVE 0x29 
0039   0000                                                         define COMMAND_STOP 0x2A
0040   0000                                                         define COMMAND_YES 0x2B                                            
0041   0000                                                         define COMMAND_NO 0x2C 
0042   0000                                                         define COMMAND_KEYB 0x2D 
0043   0000                                                         define COMMAND_TYPE 0x2E 
0044   0000                                                         define COMMAND_TURN 0x2F  
0045   0000                                                         define COMMAND_HAND 0x30                                                                                        
0046   0000                                                         define COMMAND_KILL 0x31  
0047   0000                                                         define COMMAND_DANC 0x32 
0048   0000                                                         define COMMAND_REMO 0x33     
0049   0000                                                         define COMMAND_HIT 0x34                                             
0050   0000                                                         define COMMAND_BRIB 0x35
0051   0000                                                         define COMMAND_USE 0x36
0052   0000                                                         define COMMAND_PUSH 0x37
0053   0000                                                         define COMMAND_3 0x38
0054   0000                                                         define COMMAND_2 0x39
0055   0000                                                         define COMMAND_1 0x3A
0056   0000                                                         define COMMAND_FIX 0x3B
0057   0000                                                         define COMMAND_4 0x3C
0058   0000                                                         define COMMAND_LOOK 0x3D
0059   0000                                                         define COMMAND_STAN 0x3E
0060   0000                                                         define COMMAND_TREE 0x3F
0061   0000                                                         define COMMAND_CUT 0x40
0062   0000                                                         define COMMAND_WEAR 0x41
0063   0000                                                         define COMMAND_CROS 0x42
0064   0000                                                         define COMMAND_JUMP 0x43
0065   0000                                                         define COMMAND_RAVI 0x44
0066   0000                                                         define COMMAND_UP 0x45
0067   0000                                                         define COMMAND_FUSE 0x46
0068   0000                                                         define COMMAND_REDE 0x47
0069   0000                                                         define COMMAND_MAIN 0x48
0070   0000                                                         define COMMAND_AUX 0x49
0071   0000                                                         define COMMAND_FIEL 0x4A
0072   0000                                                         define COMMAND_ANY 0xFF
0073   0000             
0074   0000                                                         ;define IS_CURRENT_ROOM 0x00
0075   0000                                                         ;define IS_CURRENT_ROOM 0x01
0076   0000                                                         ;define IS_CURRENT_ROOM 0x02
0077   0000                                                         ;define IS_CURRENT_ROOM 0x03
0078   0000             
0079   0000             
0080   0000             	                                        define VAR_FLAG_CANT_DO IX-0x8
0081   0000                                                         define VAR_PROC_PARAM IX-0x7
0082   0000             	                                        define VAR_MORE_PARSING IX-0x6
0083   0000             	                                        define VAR_PROC IX-0x5
0084   0000             	                                        define VAR_CMD_FIRST IX-0x4
0085   0000                                                         define VAR_CMD_SECOND IX-0x3
0086   0000             	                                        define VAR_TEMP IX-0x2
0087   0000             	                                        define VAR_CURRENT_ROOM IX-0x1
0088   0000             	                                        define VAR_START_GAME IX+0x0    
0089   0000                                                         define VAR_ITEMS_COUNT IX+0x1
0090   0000             	                                        define VAR_START_C IX+0x2    
0091   0000                                                         define VAR_LIGHT IX+0x3   
0092   0000                                                         define VAR_START_E IX+0x4                                                                                                                             
0093   0000             
0094   0000                                                         module GAME
0095   0000                                                         org 0x5d40
0096   5D40 00                                                      db 0x00; IX-8 VAR_FLAG_CANT_DO
0097   5D41 00          VAR_PROC_PARAM_ADDR:                         db 0x00; IX-7
0098   5D42 00                                                      db 0x00; IX-6
0099   5D43 00          VAR_PROC_ADDR:                               db 0x00; IX-5
0100   5D44 00          VAR_CMD_FIRST_ADDR:                          db 0x00; IX-4 
0101   5D45 00          VAR_CMD_SECOND_ADDR:                         db 0x00; IX-3
0102   5D46 00          GAME_STATE:                                  db 0x00; IX-2 VAR_TEMP                               
0103   5D47 00          CURRENT_ROOM:                                db 0x00; IX-1 VAR_CURRENT_ROOM
0104   5D48             VARS:                                        ; clear on init 0x1e length = 30
0105   5D48 CD                                                      db 0xCD ; IX+0 VAR_START
0106   5D49 42                                                      db 0x42 ; IX+1 VAR_ITEMS_COUNT
0107   5D4A 6F                                                      db 0x6F ; IX+2 
0108   5D4B CD                                                      db 0xCD ; IX+3 
0109   5D4C 50                                                      db 0x50 ; IX+4
0110   5D4D 72                                                      db 0x72 ; IX+5 
0111   5D4E CD                                                      db 0xCD ; IX+6
0112   5D4F 00                                                      db 0x00 ; IX+7
0113   5D50 55                                                      db 0x55 ; IX+8
0114   5D51 C3                                                      db 0xC3 ; IX+9
0115   5D52 27                                                      db 0x27 ; IX+A
0116   5D53 64                                                      db 0x64 ; IX+B
0117   5D54 E3                                                      db 0xE3 ; IX+C
0118   5D55 F3                                                      db 0xF3 ; IX+D
0119   5D56 D5                                                      db 0xD5 ; IX+E
0120   5D57 C5                                                      db 0xC5 ; IX+F
0121   5D58 DD                                                      db 0xDD ; IX+10
0122   5D59 E5                                                      db 0xE5 ; IX+11
0123   5D5A E5                                                      db 0xE5 ; IX+12
0124   5D5B DD                                                      db 0xDD ; IX+13
0125   5D5C 21                                                      db 0x21 ; IX+14
0126   5D5D 5F                                                      db 0x5F ; IX+15
0127   5D5E 72                                                      db 0x72 ; IX+16
0128   5D5F C9                                                      db 0xC9 ; IX+17
0129   5D60 32                                                      db 0x32 ; IX+18
0130   5D61 0F                                                      db 0x0F ; IX+19
0131   5D62 76                                                      db 0x76 ; IX+1A
0132   5D63 F1                                                      db 0xF1 ; IX+1B
0133   5D64 DD                                                      db 0xDD ; IX+1C
0134   5D65 E1                                                      db 0xE1 ; IX+1D
0135   5D66 C1 D1       VAR_CMD_BUF0:                                dw 0xd1c1
0136   5D68 E1 F5       VAR_CMD_BUF1:                                dw 0xf5e1
0137   5D6A 00 00       VAR_SCORE:                                   dw 0x0000
0138   5D6C 21 48 5D    ENTRY_POINT:                                 LD HL,VARS
0139   5D6F 06 1E                                                   LD B,0x1e
0140   5D71 36 00       CLEAR_VARS:                                LD (HL),0x0
0141   5D73 23                                                      INC HL
0142   5D74 10 FB                                                   DJNZ CLEAR_VARS
0143   5D76 21 00 00                                                LD HL,0x0
0144   5D79 22 6A 5D                                                LD (VAR_SCORE),HL
0145   5D7C CD A9 65                                                CALL GAME_INIT
0146   5D7F 21 9C 6D                                                LD HL,ITEMS_BY_ROOM_TABLE_INIT ;copy from
0147   5D82 11 B9 6D                                                LD DE,ITEMS_BY_ROOM_TABLE ;copy to
0148   5D85 01 1D 00                                                LD BC,0x1d ;copy size
0149   5D88 ED B0                                                   LDIR
0150   5D8A DD 21 48 5D                                             LD IX,VARS
0151   5D8E DD 36 FF 00                                             LD (VAR_CURRENT_ROOM),0x0 ; starting from room 0
0152   5D92 E5                                                      PUSH HL
0153   5D93 18 19                                                   JR ASK_RESTORE_GAME
0154   5D95             TEXT_RESTORE_GAME:                           db "WANT TO RESTORE A GAME?\r",0
0154   5D95 57414E5420544F20524553544F524520412047414D453F0D00
0155   5DAE 21 95 5D    ASK_RESTORE_GAME:                            LD HL,TEXT_RESTORE_GAME 
0156   5DB1 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0157   5DB4 E1                                                      POP HL
0158   5DB5 CD 38 67                                                CALL WAIT_KEY
0159   5DB8 FE 59                                                   CP 'Y'
0160   5DBA CC 6D 65                                                CALL Z,GAME_RESTORED
0161   5DBD CD 9F 67    ENTER_NEW_ROOM:                              CALL INIT_SCREEN
0162   5DC0 AF                                                      XOR A
0163   5DC1 DD BE 00                                                CP (VAR_START_GAME) ; zero here from start
0164   5DC4 28 45                                                   JR Z,PRINT_ROOM
0165   5DC6 DD BE 03                                                CP (VAR_LIGHT)
0166   5DC9 28 03                                                   JR Z,LIGHT_CHECK
0167   5DCB DD 35 03                                                DEC (VAR_LIGHT)
0168   5DCE 3A B9 6D    LIGHT_CHECK:                                 LD A,(ITEMS_BY_ROOM_TABLE) ; starting with 0x05
0169   5DD1 DD BE FF                                                CP (VAR_CURRENT_ROOM)
0170   5DD4 28 35                                                   JR Z,PRINT_ROOM
0171   5DD6 E5                                                      PUSH HL
0172   5DD7 18 20                                                   JR STATE_DARK
0173   5DD9             TEXT_EVERYTHING_DARK:                        db "EVERYTHING IS DARK.I CANT SEE.\r",0
0173   5DD9 45564552595448494E47204953204441524B2E492043414E54205345452E0D00
0174   5DF9 21 D9 5D    STATE_DARK:                                  LD HL,TEXT_EVERYTHING_DARK 
0175   5DFC CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0176   5DFF E1                                                      POP HL
0177   5E00 AF                                                      XOR A
0178   5E01 DD BE 04                                                CP (VAR_START_E)
0179   5E04 28 03                                                   JR Z,LAB_ram_5e09
0180   5E06 DD 35 04                                                DEC (VAR_START_E)
0181   5E09 18 60       LAB_ram_5e09:                                JR PARSE_DEFAULTS
0182   5E0B 11 AD 67    PRINT_ROOM:                                  LD DE,ROOM_DESC_POINTER 
0183   5E0E DD 6E FF                                                LD L,(VAR_CURRENT_ROOM)
0184   5E11 26 00                                                   LD H,0x0
0185   5E13 29                                                      ADD HL,HL
0186   5E14 19                                                      ADD HL,DE
0187   5E15 5E                                                      LD E,(HL) 
0188   5E16 23                                                      INC HL
0189   5E17 56                                                      LD D,(HL)
0190   5E18 EB                                                      EX DE,HL
0191   5E19 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0192   5E1C DD 36 FE 00                                             LD (VAR_TEMP),0x0
0193   5E20 21 B9 6D                                                LD HL,ITEMS_BY_ROOM_TABLE
0194   5E23 0E 00                                                   LD C,0x0 ; from first item
0195   5E25 7E          PRINT_ITEMS:                                 LD A,(HL)
0196   5E26 FE FF                                                   CP 0xff ;end of items
0197   5E28 28 41                                                   JR Z,PARSE_DEFAULTS ; no item left - jump to input
0198   5E2A DD BE FF                                                CP (VAR_CURRENT_ROOM)
0199   5E2D 20 38                                                   JR NZ,NEXT_ROOM_FOR_ITEM
0200   5E2F AF                                                      XOR A ; room is found
0201   5E30 DD BE FE                                                CP (VAR_TEMP) 
0202   5E33 20 1F                                                   JR NZ,PRINT_NEXT_ITEM
0203   5E35 E5                                                      PUSH HL
0204   5E36 18 12                                                   JR PRINT_ASLO_SEE
0205   5E38             TEXT_ALSO_SEE:                               db "I CAN ALSO SEE :\r",0
0205   5E38 492043414E20414C534F20534545203A0D00
0206   5E4A 21 38 5E    PRINT_ASLO_SEE:                              LD HL,TEXT_ALSO_SEE 
0207   5E4D CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0208   5E50 E1                                                      POP HL
0209   5E51 DD 34 FE                                                INC (VAR_TEMP)
0210   5E54 E5          PRINT_NEXT_ITEM:                             PUSH HL
0211   5E55 21 D6 6D                                                LD HL,ITEM_DESC_POINTER 
0212   5E58 06 00                                                   LD B,0x0
0213   5E5A 09                                                      ADD HL,BC
0214   5E5B 09                                                      ADD HL,BC
0215   5E5C 5E                                                      LD E,(HL) 
0216   5E5D 23                                                      INC HL
0217   5E5E 56                                                      LD D,(HL)
0218   5E5F EB                                                      EX DE,HL
0219   5E60 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0220   5E63 CD DF BF                                                CALL SCREEN.PRINT_CR
0221   5E66 E1                                                      POP HL
0222   5E67 23          NEXT_ROOM_FOR_ITEM:                          INC HL
0223   5E68 0C                                                      INC C
0224   5E69 18 BA                                                   JR PRINT_ITEMS
0225   5E6B 21 42 7E    PARSE_DEFAULTS:                              LD HL,DEFAULT_TABLE 
0226   5E6E C3 48 5F                                                JP PARSE_PROC
0227   5E71 C1          CMD_TELL_ME:                                 POP BC
0228   5E72 E1                                                      POP HL
0229   5E73 AF                                                      XOR A
0230   5E74 DD BE 02                                                CP (VAR_START_C)
0231   5E77 28 03                                                   JR Z,LAB_ram_5e7c
0232   5E79 DD 35 02                                                DEC (VAR_START_C)
0233   5E7C DD BE 05    LAB_ram_5e7c:                                CP (IX+0x5)
0234   5E7F 28 03                                                   JR Z,LAB_ram_5e84
0235   5E81 DD 35 05                                                DEC (IX+0x5)
0236   5E84 18 15       LAB_ram_5e84:                                JR LAB_ram_5e9b
0237   5E86             TEXT_TELL_ME:                                db "TELL ME WHAT TO DO \r",0
0237   5E86 54454C4C204D45205748415420544F20444F200D00
0238   5E9B 21 86 5E    LAB_ram_5e9b:                                LD HL,TEXT_TELL_ME 
0239   5E9E CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0240   5EA1 CD E1 60                                                CALL READ_LINE
0241   5EA4 DD 36 F8 00                                             LD (VAR_FLAG_CANT_DO),0x0
0242   5EA8 CD 1B 65    SKIP_SPACES:                                 CALL CMD_DECODE
0243   5EAB 32 44 5D                                                LD (VAR_CMD_FIRST_ADDR),A
0244   5EAE FE FF                                                   CP 0xff
0245   5EB0 20 3A                                                   JR NZ,KNOW_COMMAND
0246   5EB2 7E                                                      LD A,(HL) ; pointed to input buffer
0247   5EB3 FE 0D                                                   CP 0xd ; just first char is enter
0248   5EB5 28 03                                                   JR Z,UNKNOWN_COMMAND
0249   5EB7 B7                                                      OR A
0250   5EB8 20 1F                                                   JR NZ,LOOP_SPACES
0251   5EBA E5          UNKNOWN_COMMAND:                             PUSH HL 
0252   5EBB 18 13                                                   JR LAB_ram_5ed0
0253   5EBD             TEXT_DONT_UNDERSTAND:                        db "I DONT UNDERSTAND\r",0
0253   5EBD 4920444F4E5420554E4445525354414E440D00
0254   5ED0 21 BD 5E    LAB_ram_5ed0:                                LD HL,TEXT_DONT_UNDERSTAND 
0255   5ED3 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0256   5ED6 E1                                                      POP HL
0257   5ED7 18 92                                                   JR PARSE_DEFAULTS
0258   5ED9 7E          LOOP_SPACES:                                 LD A,(HL)                                            
0259   5EDA FE 20                                                   CP ' ' ; is it space ?
0260   5EDC 20 03                                                   JR NZ,CHAR_IS_FOUND
0261   5EDE 23                                                      INC HL
0262   5EDF 18 C7                                                   JR SKIP_SPACES
0263   5EE1 FE 00       CHAR_IS_FOUND:                               CP 0x0
0264   5EE3 28 D5                                                   JR Z,UNKNOWN_COMMAND
0265   5EE5 FE 0D                                                   CP 0xd
0266   5EE7 28 D1                                                   JR Z,UNKNOWN_COMMAND
0267   5EE9 23                                                      INC HL
0268   5EEA 18 ED                                                   JR LOOP_SPACES
0269   5EEC DD 36 FD FF KNOW_COMMAND:                                LD (VAR_CMD_SECOND),0xff
0270   5EF0 7E          SEARCH_SECOND_CMD:                           LD A,(HL)                                            
0271   5EF1 FE 20                                                   CP ' '
0272   5EF3 28 0D                                                   JR Z,CMD_NEXT_WORD
0273   5EF5 FE 00                                                   CP 0x0
0274   5EF7 CA 1D 5F                                                JP Z,CMD_PARCE_COMPLETE
0275   5EFA FE 0D                                                   CP 0xd
0276   5EFC CA 1D 5F                                                JP Z,CMD_PARCE_COMPLETE
0277   5EFF 23                                                      INC HL
0278   5F00 18 EE                                                   JR SEARCH_SECOND_CMD
0279   5F02 23          CMD_NEXT_WORD:                               INC HL
0280   5F03 CD 1B 65                                                CALL CMD_DECODE
0281   5F06 32 45 5D                                                LD (VAR_CMD_SECOND_ADDR),A
0282   5F09 FE FF                                                   CP 0xff
0283   5F0B 20 10                                                   JR NZ,CMD_PARCE_COMPLETE
0284   5F0D 7E          ITERATE_END_LINE:                            LD A,(HL) 
0285   5F0E                                                         
0286   5F0E FE 00                                                   CP 0x0
0287   5F10 28 0B                                                   JR Z,CMD_PARCE_COMPLETE
0288   5F12 FE 0D                                                   CP 0xd
0289   5F14 28 07                                                   JR Z,CMD_PARCE_COMPLETE
0290   5F16 FE 20                                                   CP 0x20
0291   5F18 28 E8                                                   JR Z,CMD_NEXT_WORD
0292   5F1A 23                                                      INC HL
0293   5F1B 18 F0                                                   JR ITERATE_END_LINE
0294   5F1D 16 00       CMD_PARCE_COMPLETE:                          LD D,0x0
0295   5F1F DD 5E FF                                                LD E,(VAR_CURRENT_ROOM)
0296   5F22 21 30 72                                                LD HL,ROOM_NAV_POINTER 
0297   5F25 19                                                      ADD HL,DE
0298   5F26 19                                                      ADD HL,DE
0299   5F27 5E                                                      LD E,(HL)
0300   5F28 23                                                      INC HL
0301   5F29 56                                                      LD D,(HL)
0302   5F2A EB                                                      EX DE,HL
0303   5F2B 7E          NAV_SEARCH_LOOP:                             LD A,(HL)
0304   5F2C FE FF                                                   CP 0xff
0305   5F2E 28 11                                                   JR Z,NAVIGATION_LIST_END
0306   5F30 DD BE FC                                                CP (VAR_CMD_FIRST)
0307   5F33 20 08                                                   JR NZ,NEXT_CMD_IN_ROOM
0308   5F35 23                                                      INC HL
0309   5F36 7E                                                      LD A,(HL)
0310   5F37 DD 77 FF                                                LD (VAR_CURRENT_ROOM),A
0311   5F3A C3 BD 5D                                                JP ENTER_NEW_ROOM
0312   5F3D 23          NEXT_CMD_IN_ROOM:                            INC HL
0313   5F3E 23                                                      INC HL
0314   5F3F 18 EA                                                   JR NAV_SEARCH_LOOP
0315   5F41 21 C4 72    NAVIGATION_LIST_END:                         LD HL,ACTION_TABLE ; command parce here is continued
0316   5F44 DD 36 FA 00                                             LD (VAR_MORE_PARSING),0x0
0317   5F48 7E          PARSE_PROC:                                  LD A,(HL) ; pointed to DEFAULT_TABLE  or ACTION_TABLE = ff from start                      
0318   5F49 B7                                                      OR A
0319   5F4A 20 74                                                   JR NZ,ACTION_FOUND
0320   5F4C DD BE FA                                                CP (VAR_MORE_PARSING) ; need more parsing
0321   5F4F C2 6B 5E                                                JP NZ,PARSE_DEFAULTS 
0322   5F52 DD 7E FC                                                LD A,(VAR_CMD_FIRST) 
0323   5F55 FE 0D                                                   CP 0xd
0324   5F57 38 3C                                                   JR C,PRINT_CANT_GO ; 0xd > first command - all moves under 0xd
0325   5F59 DD 7E F8                                                LD A,(VAR_FLAG_CANT_DO)
0326   5F5C B7                                                      OR A
0327   5F5D 20 15                                                   JR NZ,CANT_DO_YET ; 
0328   5F5F E5                                                      PUSH HL                                             
0329   5F60 18 08                                                   JR PRINT_CANT
0330   5F62             TEXT_I_CANT:                                 db "I CANT\r",0
0330   5F62 492043414E540D00
0331   5F6A 21 62 5F    PRINT_CANT:                                  LD HL,TEXT_I_CANT 
0332   5F6D CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0333   5F70 E1                                                      POP HL
0334   5F71 C3 6B 5E                                                JP PARSE_DEFAULTS
0335   5F74 E5          CANT_DO_YET:                                 PUSH HL                                             
0336   5F75 18 14                                                   JR PRINT_CANT_DO_YET
0337   5F77             TEXT_I_CANT_DO_YET:                          db "I CANT DO THAT YET\r",0
0337   5F77 492043414E5420444F2054484154205945540D00
0338   5F8B 21 77 5F    PRINT_CANT_DO_YET:                           LD HL,TEXT_I_CANT_DO_YET 
0339   5F8E CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0340   5F91 E1                                                      POP HL
0341   5F92 C3 6B 5E                                                JP PARSE_DEFAULTS
0342   5F95 E5          PRINT_CANT_GO:                               PUSH HL  
0343   5F96 18 1D                                                   JR PRINT_CANT_GO_TEXT
0344   5F98             TEXT_I_CANT_GO:                              db "I CANT GO IN THAT DIRECTION\r",0
0344   5F98 492043414E5420474F20494E205448415420444952454354494F4E0D00
0345   5FB5 21 98 5F    PRINT_CANT_GO_TEXT:                          LD HL,TEXT_I_CANT_GO 
0346   5FB8 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0347   5FBB E1                                                      POP HL
0348   5FBC C3 6B 5E                                                JP PARSE_DEFAULTS
0349   5FBF 00                                                      NOP
0350   5FC0 FE FF       ACTION_FOUND:                                CP 0xff
0351   5FC2 28 0C                                                   JR Z,CMD_FIRST_FOUND
0352   5FC4 DD BE FC                                                CP (VAR_CMD_FIRST)
0353   5FC7 28 07                                                   JR Z,CMD_FIRST_FOUND
0354   5FC9 11 06 00    CMD_NEXT_BLOCK:                              LD DE,0x6 ; next block 
0355   5FCC 19                                                      ADD HL,DE
0356   5FCD C3 48 5F                                                JP PARSE_PROC ; next block 
0357   5FD0 23          CMD_FIRST_FOUND:                             INC HL ; 
0358   5FD1 7E                                                      LD A,(HL) 
0359   5FD2 FE FF                                                   CP 0xff
0360   5FD4 28 08                                                   JR Z,CMD_SECOND_FOUND
0361   5FD6 DD BE FD                                                CP (VAR_CMD_SECOND)
0362   5FD9 28 03                                                   JR Z,CMD_SECOND_FOUND
0363   5FDB 2B                                                      DEC HL
0364   5FDC 18 EB                                                   JR CMD_NEXT_BLOCK
0365   5FDE 23          CMD_SECOND_FOUND:                            INC HL
0366   5FDF 4E                                                      LD C,(HL) 
0367   5FE0 23                                                      INC HL
0368   5FE1 46                                                      LD B,(HL) ; first value in BC - VALIDATOR0 or 
0369   5FE2 23                                                      INC HL
0370   5FE3 0A          NEXT_VALIDATOR:                              LD A,(BC) 
0371   5FE4 FE FF                                                   CP 0xff
0372   5FE6 CA AF 60                                                JP Z,VALIDATION_COMPLETE
0373   5FE9 32 43 5D                                                LD (VAR_PROC_ADDR),A ; first is procedure
0374   5FEC 03                                                      INC BC
0375   5FED 0A                                                      LD A,(BC) 
0376   5FEE 32 41 5D                                                LD (VAR_PROC_PARAM_ADDR),A ; second is param
0377   5FF1 E5                                                      PUSH HL ; 
0378   5FF2 21 9D 60                                                LD HL,PROC_POINTER 
0379   5FF5 16 00                                                   LD D,0x0
0380   5FF7 DD 5E FB                                                LD E,(VAR_PROC)
0381   5FFA 19                                                      ADD HL,DE
0382   5FFB 19                                                      ADD HL,DE
0383   5FFC 5E                                                      LD E,(HL) 
0384   5FFD 23                                                      INC HL
0385   5FFE 56                                                      LD D,(HL)
0386   5FFF EB                                                      EX DE,HL
0387   6000 E9                                                      JP (HL) ; jump to pointer PROC06, in BC second element
0388   6001 3A 41 5D    PROC_00:                                     LD A,(VAR_PROC_PARAM_ADDR) ; verify if current room
0389   6004 DD BE FF                                                CP (VAR_CURRENT_ROOM)
0390   6007 28 5A                                                   JR Z,PROC_SUCESS
0391   6009 E1          PROC_FAILED:                                 POP HL
0392   600A 23                                                      INC HL
0393   600B 23                                                      INC HL
0394   600C DD 36 F8 01                                             LD (VAR_FLAG_CANT_DO),1
0395   6010 C3 48 5F                                                JP PARSE_PROC
0396   6013 21 B9 6D    PROC_01:                                     LD HL,ITEMS_BY_ROOM_TABLE ; is item available
0397   6016 16 00                                                   LD D,0x0
0398   6018 DD 5E F9                                                LD E,(VAR_PROC_PARAM)
0399   601B 19                                                      ADD HL,DE
0400   601C 7E                                                      LD A,(HL)
0401   601D DD BE FF                                                CP (VAR_CURRENT_ROOM) ; if item in current room
0402   6020 28 41                                                   JR Z,PROC_SUCESS
0403   6022 FE FD                                                   CP 0xfd ; or item in pocket or wear
0404   6024 30 3D                                                   JR NC,PROC_SUCESS
0405   6026 18 E1                                                   JR PROC_FAILED
0406   6028 ED 5F       PROC_02:                                     LD A,R ; randoms 
0407   602A DD 96 F9                                                SUB (VAR_PROC_PARAM)
0408   602D 38 34                                                   JR C,PROC_SUCESS
0409   602F 18 D8                                                   JR PROC_FAILED
0410   6031 21 B9 6D    PROC_03:                                     LD HL,ITEMS_BY_ROOM_TABLE ; is item in room
0411   6034 16 00                                                   LD D,0x0
0412   6036 DD 5E F9                                                LD E,(VAR_PROC_PARAM)
0413   6039 19                                                      ADD HL,DE
0414   603A 7E                                                      LD A,(HL)
0415   603B DD BE FF                                                CP (VAR_CURRENT_ROOM)
0416   603E 28 C9                                                   JR Z,PROC_FAILED
0417   6040 FE FD                                                   CP 0xfd 
0418   6042 30 C5                                                   JR NC,PROC_FAILED
0419   6044 18 1D                                                   JR PROC_SUCESS
0420   6046 21 B9 6D    PROC_04:                                     LD HL,ITEMS_BY_ROOM_TABLE ; is item weared
0421   6049 16 00                                                   LD D,0x0
0422   604B DD 5E F9                                                LD E,(VAR_PROC_PARAM)
0423   604E 19                                                      ADD HL,DE
0424   604F 7E                                                      LD A,(HL)
0425   6050 FE FD                                                   CP 0xfd
0426   6052 28 0F                                                   JR Z,PROC_SUCESS
0427   6054 18 B3                                                   JR PROC_FAILED
0428   6056 21 48 5D    PROC_05:                                     LD HL,VARS ; two params compare with zero
0429   6059 16 00                                                   LD D,0x0
0430   605B DD 5E F9                                                LD E,(VAR_PROC_PARAM)
0431   605E 19                                                      ADD HL,DE
0432   605F 7E                                                      LD A,(HL)
0433   6060 B7                                                      OR A
0434   6061 28 A6                                                   JR Z,PROC_FAILED
0435   6063 E1          PROC_SUCESS:                                 POP HL
0436   6064 03                                                      INC BC
0437   6065 C3 E3 5F                                                JP NEXT_VALIDATOR
0438   6068 03          PROC_06:                                     INC BC ; three params compare with third param
0439   6069 0A                                                      LD A,(BC) ; third element 6,5,1,5,6,ff
0440   606A 21 48 5D                                                LD HL,VARS
0441   606D 16 00                                                   LD D,0x0
0442   606F DD 5E F9                                                LD E,(VAR_PROC_PARAM)
0443   6072 19                                                      ADD HL,DE
0444   6073 BE                                                      CP (HL) ; compared by IX
0445   6074 20 93                                                   JR NZ,PROC_FAILED ; next is triggered
0446   6076 18 EB                                                   JR PROC_SUCESS
0447   6078 21 48 5D    PROC_07:                                     LD HL,VARS ; is in table zero
0448   607B 16 00                                                   LD D,0x0
0449   607D DD 5E F9                                                LD E,(VAR_PROC_PARAM)
0450   6080 19                                                      ADD HL,DE
0451   6081 7E                                                      LD A,(HL)
0452   6082 B7                                                      OR A
0453   6083 C2 09 60                                                JP NZ,PROC_FAILED
0454   6086 18 DB                                                   JR PROC_SUCESS
0455   6088 21 B9 6D    PROC_08:                                     LD HL,ITEMS_BY_ROOM_TABLE ; is item in inventory of weared
0456   608B 16 00                                                   LD D,0x0
0457   608D DD 5E F9                                                LD E,(VAR_PROC_PARAM)
0458   6090 19                                                      ADD HL,DE
0459   6091 7E                                                      LD A,(HL)
0460   6092 FE FE                                                   CP 0xfe
0461   6094 28 CD                                                   JR Z,PROC_SUCESS
0462   6096 FE FD                                                   CP 0xfd
0463   6098 28 C9                                                   JR Z,PROC_SUCESS
0464   609A C3 09 60                                                JP PROC_FAILED
0465   609D 01 60       PROC_POINTER:                                dw PROC_00
0466   609F 13 60                                                   dw PROC_01
0467   60A1 28 60                                                   dw PROC_02
0468   60A3 31 60                                                   dw PROC_03
0469   60A5 46 60                                                   dw PROC_04
0470   60A7 56 60                                                   dw PROC_05
0471   60A9 68 60                                                   dw PROC_06
0472   60AB 78 60                                                   dw PROC_07
0473   60AD 88 60                                                   dw PROC_08
0474   60AF 4E          VALIDATION_COMPLETE:                         LD C,(HL) ; second param
0475   60B0 23                                                      INC HL
0476   60B1 46                                                      LD B,(HL)
0477   60B2 23                                                      INC HL
0478   60B3 DD 36 FA 01                                             LD (VAR_MORE_PARSING),1
0479   60B7 0A          NEXT_COMMAND:                                LD A,(BC)             
0480   60B8 FE FF                                                   CP 0xff
0481   60BA CA 48 5F                                                JP Z,PARSE_PROC
0482   60BD 32 43 5D                                                LD (VAR_PROC_ADDR),A
0483   60C0 03                                                      INC BC
0484   60C1 0A                                                      LD A,(BC) 
0485   60C2 32 41 5D                                                LD (VAR_PROC_PARAM_ADDR),A
0486   60C5 E5                                                      PUSH HL 
0487   60C6 C5                                                      PUSH BC 
0488   60C7 21 08 61                                                LD HL,CMD_POINTER 
0489   60CA 16 00                                                   LD D,0x0
0490   60CC DD 5E FB                                                LD E,(VAR_PROC)
0491   60CF 19                                                      ADD HL,DE
0492   60D0 19                                                      ADD HL,DE
0493   60D1 5E                                                      LD E,(HL) 
0494   60D2 23                                                      INC HL
0495   60D3 56                                                      LD D,(HL)
0496   60D4 EB                                                      EX DE,HL
0497   60D5 E9                                                      JP (HL)
0498   60D6 21 B9 6D    GET_ROOM_OF_ITEM:                            LD HL,ITEMS_BY_ROOM_TABLE ; room in VAR_PROC_PARAM result in A hl pointed to item
0499   60D9 06 00                                                   LD B,0x0
0500   60DB DD 4E F9                                                LD C,(VAR_PROC_PARAM)
0501   60DE 09                                                      ADD HL,BC
0502   60DF 7E                                                      LD A,(HL)
0503   60E0 C9                                                      RET
0504   60E1 21 E7 60    READ_LINE:                                   LD HL,LINE_BUFFER 
0505   60E4 C3 69 67                                                JP READ_LINE_START
0506   60E7 00          LINE_BUFFER:                                 ds 33
0507   6108 3A 61       CMD_POINTER:                                 dw CMD_INVENTORY
0508   610A D7 61                                                   dw CMD_UNWEAR_ITEM
0509   610C 37 62                                                   dw CMD_GET_ITEM
0510   610E B8 62                                                   dw CMD_DROP_ITEM
0511   6110 EF 62                                                   dw CMD_WEAR_ITEM
0512   6112 45 63                                                   dw CMD_PRINT_ANSWER
0513   6114 58 63                                                   dw CMD_LOOK_AROUND
0514   6116 5D 63                                                   dw CMD_NOTHING
0515   6118 62 63                                                   dw CMD_SET_CURRENT_ROOM
0516   611A 6A 63                                                   dw CMD_VAR_TO_FF
0517   611C 77 63                                                   dw CMD_VAR_CLEAR
0518   611E 88 63                                                   dw CMD_SWAP_ITEM
0519   6120 92 63                                                   dw CMD_END
0520   6122 95 63                                                   dw CMD_OK
0521   6124 A8 63                                                   dw CMD_SAVE
0522   6126 92 64                                                   dw CMD_VAR_SAVE
0523   6128 A6 64                                                   dw CMD_ITEM_DROP_HERE
0524   612A B6 64                                                   dw CMD_REMOVE_ITEM
0525   612C C9 64                                                   dw CMD_SCORE
0526   612E F8 64                                                   dw CMD_GAME
0527   6130 C4 64                                                   dw CMD_LOOP
0528   6132 71 5E                                                   dw CMD_TELL_ME
0529   6134 C4 64                                                   dw CMD_LOOP
0530   6136 C4 64                                                   dw CMD_LOOP
0531   6138 C4 64                                                   dw CMD_LOOP
0532   613A E5          CMD_INVENTORY:                               PUSH HL
0533   613B 18 1F                                                   JR LAB_ram_615c
0534   613D             TEXT_HAVE_WITH_ME:                           db "I HAVE WITH ME THE FOLLOWING:\r",0
0534   613D 4920484156452057495448204D452054484520464F4C4C4F57494E473A0D00
0535   615C 21 3D 61    LAB_ram_615c:                                LD HL,TEXT_HAVE_WITH_ME 
0536   615F CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0537   6162 E1                                                      POP HL
0538   6163 DD 36 FE 00                                             LD (VAR_TEMP),0x0
0539   6167 21 B9 6D                                                LD HL,ITEMS_BY_ROOM_TABLE
0540   616A 0E 00                                                   LD C,0x0
0541   616C 7E          LOOP_INVENTORY:                              LD A,(HL)
0542   616D FE FF                                                   CP 0xff ; ff - end of items
0543   616F 28 42                                                   JR Z,INVENTORY_EMPTY
0544   6171 FE FD                                                   CP 0xfd
0545   6173 38 3A                                                   JR C,NEXT_SCAN_ITEM ; fe - in inventory
0546   6175 DD 36 FE 01                                             LD (VAR_TEMP),0x1
0547   6179 E5                                                      PUSH HL
0548   617A 21 D6 6D                                                LD HL,ITEM_DESC_POINTER 
0549   617D 06 00                                                   LD B,0x0
0550   617F 09                                                      ADD HL,BC
0551   6180 09                                                      ADD HL,BC
0552   6181 5E                                                      LD E,(HL) 
0553   6182 23                                                      INC HL
0554   6183 56                                                      LD D,(HL)
0555   6184 EB                                                      EX DE,HL
0556   6185 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0557   6188 E1                                                      POP HL
0558   6189 7E                                                      LD A,(HL)
0559   618A FE FD                                                   CP 0xfd ; fd - weared item
0560   618C 20 1E                                                   JR NZ,ITEM_NOT_WEARED
0561   618E E5                                                      PUSH HL
0562   618F 21 98 61                                                LD HL,TEXT_WHICH_I_AM_WEARING 
0563   6192 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0564   6195 E1                                                      POP HL
0565   6196 18 14                                                   JR ITEM_NOT_WEARED
0566   6198             TEXT_WHICH_I_AM_WEARING:                     db " WHICH I AM WEARING",0
0566   6198 205748494348204920414D2057454152494E4700
0567   61AC CD DF BF    ITEM_NOT_WEARED:                             CALL SCREEN.PRINT_CR
0568   61AF 23          NEXT_SCAN_ITEM:                              INC HL
0569   61B0 0C                                                      INC C
0570   61B1 18 B9                                                   JR LOOP_INVENTORY
0571   61B3 AF          INVENTORY_EMPTY:                             XOR A
0572   61B4 DD BE FE                                                CP (VAR_TEMP)
0573   61B7 C2 C4 64                                                JP NZ,CMD_LOOP
0574   61BA E5                                                      PUSH HL
0575   61BB 18 10                                                   JR LAB_ram_61cd
0576   61BD             TEXT_NOTHING:                                db "NOTHING AT ALL\r",0
0576   61BD 4E4F5448494E4720415420414C4C0D00
0577   61CD 21 BD 61    LAB_ram_61cd:                                LD HL,TEXT_NOTHING 
0578   61D0 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0579   61D3 E1                                                      POP HL
0580   61D4 C3 C4 64                                                JP CMD_LOOP
0581   61D7 CD D6 60    CMD_UNWEAR_ITEM:                             CALL GET_ROOM_OF_ITEM
0582   61DA FE FD                                                   CP 0xfd
0583   61DC 28 22                                                   JR Z,IS_ITEM_WEARED
0584   61DE E5                                                      PUSH HL
0585   61DF 18 15                                                   JR LAB_ram_61f6
0586   61E1             TEXT_NOT_WEARING:                            db "I AM NOT WEARING IT\r",0
0586   61E1 4920414D204E4F542057454152494E472049540D00
0587   61F6 21 E1 61    LAB_ram_61f6:                                LD HL,TEXT_NOT_WEARING 
0588   61F9 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0589   61FC E1                                                      POP HL
0590   61FD C3 C4 64                                                JP CMD_LOOP
0591   6200 DD 7E 01    IS_ITEM_WEARED:                              LD A,(VAR_ITEMS_COUNT)
0592   6203 FE 06                                                   CP 0x6
0593   6205 20 28                                                   JR NZ,IS_SPACE_ENOUGH
0594   6207 E5                                                      PUSH HL
0595   6208 18 1B                                                   JR LAB_ram_6225
0596   620A             TEXT_HAND_FULL:                              db "I CANT. MY HANDS ARE FULL\r",0
0596   620A 492043414E542E204D592048414E4453204152452046554C4C0D00
0597   6225 21 0A 62    LAB_ram_6225:                                LD HL,TEXT_HAND_FULL 
0598   6228 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0599   622B E1                                                      POP HL
0600   622C C3 C4 64                                                JP CMD_LOOP
0601   622F 36 FE       IS_SPACE_ENOUGH:                             LD (HL),0xfe
0602   6231 DD 34 01                                                INC (VAR_ITEMS_COUNT)
0603   6234 C3 82 63                                                JP CMD_ENDED
0604   6237 DD 7E 01    CMD_GET_ITEM:                                LD A,(VAR_ITEMS_COUNT)
0605   623A FE 06                                                   CP 0x6 ; max items in inventory
0606   623C 20 24                                                   JR NZ,SPACE_IS_ENOUGH
0607   623E E5                                                      PUSH HL
0608   623F 18 17                                                   JR LAB_ram_6258
0609   6241             TEXT_CANT_CARRY:                             db "I CANT CARRY ANY MORE\r",0
0609   6241 492043414E5420434152525920414E59204D4F52450D00
0610   6258 21 41 62    LAB_ram_6258:                                LD HL,TEXT_CANT_CARRY 
0611   625B CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0612   625E E1                                                      POP HL
0613   625F C3 C4 64                                                JP CMD_LOOP
0614   6262 CD D6 60    SPACE_IS_ENOUGH:                             CALL GET_ROOM_OF_ITEM
0615   6265 DD BE FF                                                CP (VAR_CURRENT_ROOM)
0616   6268 20 08                                                   JR NZ,LAB_ram_6272
0617   626A 36 FE                                                   LD (HL),0xfe ; inventory mark
0618   626C DD 34 01                                                INC (VAR_ITEMS_COUNT)
0619   626F C3 82 63                                                JP CMD_ENDED
0620   6272 FE FD       LAB_ram_6272:                                CP 0xfd
0621   6274 28 22                                                   JR Z,LAB_ram_6298
0622   6276 FE FE                                                   CP 0xfe
0623   6278 28 1E                                                   JR Z,LAB_ram_6298
0624   627A 21 83 62                                                LD HL,TEXT_I_DONT_SEE 
0625   627D CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0626   6280 C3 C4 64                                                JP CMD_LOOP
0627   6283             TEXT_I_DONT_SEE:                             db "I DON'T SEE IT HERE\r",0
0627   6283 4920444F4E27542053454520495420484552450D00
0628   6298 E5          LAB_ram_6298:                                PUSH HL
0629   6299 18 13                                                   JR LAB_ram_62ae
0630   629B             TEXT_ALREADY_HAVE:                           db "I ALREADY HAVE IT\r",0
0630   629B 4920414C524541445920484156452049540D00
0631   62AE 21 9B 62    LAB_ram_62ae:                                LD HL,TEXT_ALREADY_HAVE 
0632   62B1 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0633   62B4 E1                                                      POP HL
0634   62B5 C3 C4 64                                                JP CMD_LOOP
0635   62B8 CD D6 60    CMD_DROP_ITEM:                               CALL GET_ROOM_OF_ITEM
0636   62BB DD BE FF                                                CP (VAR_CURRENT_ROOM)
0637   62BE 20 1D                                                   JR NZ,LAB_ram_62dd
0638   62C0 E5          ITEM_IN_INVENTORY_BUT_WEARED:                PUSH HL
0639   62C1 18 10                                                   JR LAB_ram_62d3
0640   62C3             TEXT_I_DONT_HAVE:                            db "I DONT HAVE IT\r",0
0640   62C3 4920444F4E5420484156452049540D00
0641   62D3 21 C3 62    LAB_ram_62d3:                                LD HL,TEXT_I_DONT_HAVE 
0642   62D6 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0643   62D9 E1                                                      POP HL
0644   62DA C3 C4 64                                                JP CMD_LOOP
0645   62DD FE FD       LAB_ram_62dd:                                CP 0xfd
0646   62DF 28 07                                                   JR Z,ITEM_IN_INVENTORY
0647   62E1 FE FE                                                   CP 0xfe
0648   62E3 20 DB                                                   JR NZ,ITEM_IN_INVENTORY_BUT_WEARED
0649   62E5 DD 35 01                                                DEC (VAR_ITEMS_COUNT)
0650   62E8 DD 7E FF    ITEM_IN_INVENTORY:                           LD A,(VAR_CURRENT_ROOM)
0651   62EB 77                                                      LD (HL),A
0652   62EC C3 82 63                                                JP CMD_ENDED
0653   62EF CD D6 60    CMD_WEAR_ITEM:                               CALL GET_ROOM_OF_ITEM
0654   62F2 FE FE                                                   CP 0xfe
0655   62F4 20 08                                                   JR NZ,WEAR_NOT_IN_INVENTORY
0656   62F6 36 FD                                                   LD (HL),0xfd
0657   62F8 DD 35 01                                                DEC (VAR_ITEMS_COUNT)
0658   62FB C3 82 63                                                JP CMD_ENDED
0659   62FE FE FD       WEAR_NOT_IN_INVENTORY:                       CP 0xfd
0660   6300 20 26                                                   JR NZ,WEAR_NOT_WEARED
0661   6302 E5                                                      PUSH HL
0662   6303 18 19                                                   JR LAB_ram_631e
0663   6305             TEXT_ALREADY_WEAR:                           db "I AM ALREADY WEARING IT\r",0
0663   6305 4920414D20414C52454144592057454152494E472049540D00
0664   631E 21 05 63    LAB_ram_631e:                                LD HL,TEXT_ALREADY_WEAR 
0665   6321 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0666   6324 E1                                                      POP HL
0667   6325 C3 C4 64                                                JP CMD_LOOP
0668   6328 E5          WEAR_NOT_WEARED:                             PUSH HL
0669   6329 18 10                                                   JR LAB_ram_633b
0670   632B             TEXT_I_DONT_HAVE_IT:                         db "I DONT HAVE IT\r",0
0670   632B 4920444F4E5420484156452049540D00
0671   633B 21 2B 63    LAB_ram_633b:                                LD HL,TEXT_I_DONT_HAVE_IT 
0672   633E CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0673   6341 E1                                                      POP HL
0674   6342 C3 C4 64                                                JP CMD_LOOP
0675   6345 21 A1 78    CMD_PRINT_ANSWER:                            LD HL,ANSWER_POINTER ; one param - text of action
0676   6348 06 00                                                   LD B,0x0
0677   634A DD 4E F9                                                LD C,(VAR_PROC_PARAM)
0678   634D 09                                                      ADD HL,BC
0679   634E 09                                                      ADD HL,BC
0680   634F 5E                                                      LD E,(HL) 
0681   6350 23                                                      INC HL
0682   6351 56                                                      LD D,(HL)
0683   6352 EB                                                      EX DE,HL
0684   6353 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0685   6356 18 2A                                                   JR CMD_ENDED
0686   6358 C1          CMD_LOOK_AROUND:                             POP BC
0687   6359 E1                                                      POP HL
0688   635A C3 BD 5D                                                JP ENTER_NEW_ROOM
0689   635D C1          CMD_NOTHING:                                 POP BC
0690   635E E1                                                      POP HL
0691   635F C3 6B 5E                                                JP PARSE_DEFAULTS
0692   6362 DD 7E F9    CMD_SET_CURRENT_ROOM:                                    LD A,(VAR_PROC_PARAM)
0693   6365 DD 77 FF                                                LD (VAR_CURRENT_ROOM),A
0694   6368 18 18                                                   JR CMD_ENDED
0695   636A 21 48 5D    CMD_VAR_TO_FF:                                    LD HL,VARS ; set (IX+PARAM0) = 0xff
0696   636D 06 00                                                   LD B,0x0
0697   636F DD 4E F9                                                LD C,(VAR_PROC_PARAM)
0698   6372 09                                                      ADD HL,BC
0699   6373 36 FF                                                   LD (HL),0xff
0700   6375 18 0B                                                   JR CMD_ENDED
0701   6377 21 48 5D    CMD_VAR_CLEAR:                               LD HL,VARS ; set (IX+PARAM0) = 0
0702   637A 06 00                                                   LD B,0x0
0703   637C DD 4E F9                                                LD C,(VAR_PROC_PARAM)
0704   637F 09                                                      ADD HL,BC
0705   6380 36 00                                                   LD (HL),0x0
0706   6382 C1          CMD_ENDED:                                   POP BC
0707   6383 E1                                                      POP HL
0708   6384 03                                                      INC BC
0709   6385 C3 B7 60                                                JP NEXT_COMMAND
0710   6388 CD D6 60    CMD_SWAP_ITEM:                               CALL GET_ROOM_OF_ITEM
0711   638B 23                                                      INC HL ; next item
0712   638C 46                                                      LD B,(HL)
0713   638D 77                                                      LD (HL),A ; room of item here
0714   638E 2B                                                      DEC HL
0715   638F 70                                                      LD (HL),B
0716   6390 18 F0                                                   JR CMD_ENDED
0717   6392 C3 3F 64    CMD_END:                                     JP TRY_AGAIN
0718   6395 E5          CMD_OK:                                      PUSH HL
0719   6396 18 06                                                   JR LAB_ram_639e
0720   6398             TEXT_OK:                                     db "OK..\r",0
0720   6398 4F4B2E2E0D00
0721   639E 21 98 63    LAB_ram_639e:                                LD HL,TEXT_OK 
0722   63A1 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0723   63A4 E1                                                      POP HL
0724   63A5 C3 C4 64                                                JP CMD_LOOP
0725   63A8 E5          CMD_SAVE:                                    PUSH HL
0726   63A9 18 1F                                                   JR LAB_ram_63ca
0727   63AB             TEXT_WANT_SAVE:                              db "DO YOU WANT TO SAVE THE GAME?\r",0
0727   63AB 444F20594F552057414E5420544F2053415645205448452047414D453F0D00
0728   63CA 21 AB 63    LAB_ram_63ca:                                LD HL,TEXT_WANT_SAVE 
0729   63CD CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0730   63D0 E1                                                      POP HL
0731   63D1 CD 38 67                                                CALL WAIT_KEY
0732   63D4 FE 59                                                   CP 0x59
0733   63D6 20 67                                                   JR NZ,TRY_AGAIN
0734   63D8 DD E5                                                   PUSH IX
0735   63DA DD 21 46 5D                                             LD IX,GAME_STATE
0736   63DE 11 2B 00                                                LD DE,0x2b
0737   63E1 E5                                                      PUSH HL
0738   63E2 18 10                                                   JR LAB_ram_63f4
0739   63E4             TEXT_READY_TYPE:                             db "READY CASSETTE\r",0
0739   63E4 52454144592043415353455454450D00
0740   63F4 21 E4 63    LAB_ram_63f4:                                LD HL,TEXT_READY_TYPE 
0741   63F7 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0742   63FA E1                                                      POP HL
0743   63FB CD 38 67                                                CALL WAIT_KEY
0744   63FE 3E FF                                                   LD A,0xff
0745   6400 37                                                      SCF
0746   6401 CD C2 04                                                CALL 0x04c2
0747   6404 DD 21 B9 6D                                             LD IX,ITEMS_BY_ROOM_TABLE
0748   6408 11 1D 00                                                LD DE,0x1d
0749   640B 3E FF                                                   LD A,0xff
0750   640D 37                                                      SCF
0751   640E CD C2 04                                                CALL 0x04c2
0752   6411 DD E1                                                   POP IX
0753   6413 E5                                                      PUSH HL
0754   6414 18 1A                                                   JR LAB_ram_6430
0755   6416             TEXT_CONTINUE:                               db "DO YOU WISH TO CONTINUE?\r",0
0755   6416 444F20594F55205749534820544F20434F4E54494E55453F0D00
0756   6430 21 16 64    LAB_ram_6430:                                LD HL,TEXT_CONTINUE 
0757   6433 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0758   6436 E1                                                      POP HL
0759   6437 CD 38 67                                                CALL WAIT_KEY
0760   643A FE 59                                                   CP 0x59
0761   643C CA C4 64                                                JP Z,CMD_LOOP
0762   643F E5          TRY_AGAIN:                                   PUSH HL
0763   6440 18 1B                                                   JR LAB_ram_645d
0764   6442             TEXT_TRY_AGAIN:                              db "DO YOU WISH TO TRY AGAIN?\r",0
0764   6442 444F20594F55205749534820544F2054525920414741494E3F0D00
0765   645D 21 42 64    LAB_ram_645d:                                LD HL,TEXT_TRY_AGAIN 
0766   6460 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0767   6463 E1                                                      POP HL
0768   6464 E5          CHECK_YES_NO:                                PUSH HL
0769   6465 18 12                                                   JR LAB_ram_6479
0770   6467             TEXT_ANSWER:                                 db "ANSWER YES OR NO\r",0
0770   6467 414E5357455220594553204F52204E4F0D00
0771   6479 21 67 64    LAB_ram_6479:                                LD HL,TEXT_ANSWER 
0772   647C CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0773   647F E1                                                      POP HL
0774   6480 CD 38 67                                                CALL WAIT_KEY
0775   6483 00                                                      NOP
0776   6484 00                                                      NOP
0777   6485 00                                                      NOP
0778   6486 FE 59                                                   CP 0x59
0779   6488 CA 6C 5D                                                JP Z,ENTRY_POINT
0780   648B FE 4E                                                   CP 0x4e
0781   648D CA 00 00                                                JP Z,0x0000
0782   6490 18 D2                                                   JR CHECK_YES_NO
0783   6492 C1          CMD_VAR_SAVE:                                POP BC ; stack pointed to VAR_PROC_PARAM (IX+PARAM0) = PARAM1
0784   6493 03                                                      INC BC
0785   6494 C5                                                      PUSH BC ; now point on next cmd
0786   6495 0A                                                      LD A,(BC) ; actually third params
0787   6496 32 43 5D                                                LD (VAR_PROC_ADDR),A ; placed in VAR_PROC
0788   6499 21 48 5D                                                LD HL,VARS
0789   649C 06 00                                                   LD B,0x0
0790   649E DD 4E F9                                                LD C,(VAR_PROC_PARAM)
0791   64A1 09                                                      ADD HL,BC
0792   64A2 77                                                      LD (HL),A 
0793   64A3 C3 82 63                                                JP CMD_ENDED
0794   64A6 21 B9 6D    CMD_ITEM_DROP_HERE:                          LD HL,ITEMS_BY_ROOM_TABLE
0795   64A9 06 00                                                   LD B,0x0
0796   64AB DD 4E F9                                                LD C,(VAR_PROC_PARAM)
0797   64AE 09                                                      ADD HL,BC
0798   64AF DD 7E FF                                                LD A,(VAR_CURRENT_ROOM)
0799   64B2 77                                                      LD (HL),A
0800   64B3 C3 82 63                                                JP CMD_ENDED
0801   64B6 21 B9 6D    CMD_REMOVE_ITEM:                             LD HL,ITEMS_BY_ROOM_TABLE ; item 
0802   64B9 06 00                                                   LD B,0x0
0803   64BB DD 4E F9                                                LD C,(VAR_PROC_PARAM)
0804   64BE 09                                                      ADD HL,BC
0805   64BF 36 FC                                                   LD (HL),0xfc
0806   64C1 C3 82 63                                                JP CMD_ENDED
0807   64C4 C1          CMD_LOOP:                                    POP BC
0808   64C5 E1                                                      POP HL
0809   64C6 C3 6B 5E                                                JP PARSE_DEFAULTS
0810   64C9 3A 6A 5D    CMD_SCORE:                                   LD A,(VAR_SCORE)
0811   64CC 47                                                      LD B,A
0812   64CD 3A 41 5D                                                LD A,(VAR_PROC_PARAM_ADDR)
0813   64D0 80                                                      ADD A,B
0814   64D1 27                                                      DAA
0815   64D2 32 6A 5D                                                LD (VAR_SCORE),A
0816   64D5 E1                                                      POP HL
0817   64D6 23                                                      INC HL
0818   64D7 E5                                                      PUSH HL
0819   64D8 3A 6B 5D                                                LD A,(VAR_SCORE+1)
0820   64DB 8E                                                      ADC A,(HL)
0821   64DC 27                                                      DAA
0822   64DD 32 6B 5D                                                LD (VAR_SCORE+1),A
0823   64E0 C3 82 63                                                JP CMD_ENDED
0824   64E3             TEXT_SCORE:                                  db "YOU HAVE A SCORE OF ",0
0824   64E3 594F55204841564520412053434F5245204F462000
0825   64F8 21 E3 64    CMD_GAME:                                    LD HL,TEXT_SCORE 
0826   64FB CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0827   64FE 3A 6B 5D                                                LD A,(VAR_SCORE+1)
0828   6501 CD 12 65                                                CALL PRINT_SCORE
0829   6504 3A 6A 5D                                                LD A,(VAR_SCORE)
0830   6507 CD 12 65                                                CALL PRINT_SCORE
0831   650A CD DF BF                                                CALL SCREEN.PRINT_CR
0832   650D C1                                                      POP BC
0833   650E E1                                                      POP HL
0834   650F C3 B7 60                                                JP NEXT_COMMAND
0835   6512 F5          PRINT_SCORE:                                 PUSH AF
0836   6513 1F                                                      RRA
0837   6514 1F                                                      RRA
0838   6515 1F                                                      RRA
0839   6516 1F                                                      RRA
0840   6517 CD D5 BF                                                CALL SCREEN.PRINT_DIGIT
0841   651A F1                                                      POP AF
0842   651B             
0843   651B E5          CMD_DECODE:                                  PUSH HL ; HL pointed to input buffer, command code return in A, ff - command not found HL not changed
0844   651C 21 20 20                                                LD HL,0x2020 ; two spaces
0845   651F 22 66 5D                                                LD (VAR_CMD_BUF0),HL 
0846   6522 22 68 5D                                                LD (VAR_CMD_BUF1),HL 
0847   6525 E1                                                      POP HL
0848   6526 11 66 5D                                                LD DE,VAR_CMD_BUF0 
0849   6529 06 04                                                   LD B,0x4 ; cmd length
0850   652B 7E          CMD_COPY_LOOP:                               LD A,(HL)
0851   652C FE 20                                                   CP 0x20
0852   652E 28 0D                                                   JR Z,LABEL_LINE_DELIM
0853   6530 FE 00                                                   CP 0x0
0854   6532 28 09                                                   JR Z,LABEL_LINE_DELIM
0855   6534 FE 0D                                                   CP 0xd
0856   6536 28 05                                                   JR Z,LABEL_LINE_DELIM
0857   6538 12                                                      LD (DE),A 
0858   6539 23                                                      INC HL
0859   653A 13                                                      INC DE
0860   653B 10 EE                                                   DJNZ CMD_COPY_LOOP
0861   653D E5          LABEL_LINE_DELIM:                            PUSH HL
0862   653E 21 09 70                                                LD HL,COMMAND_LIST 
0863   6541 3E FF                                                   LD A,0xff
0864   6543 F5                                                      PUSH AF
0865   6544 DD 36 FE 00 CMD_NEXT_COMMAND:                            LD (VAR_TEMP),0x0 ; equal
0866   6548 06 04                                                   LD B,0x4
0867   654A 11 66 5D                                                LD DE,VAR_CMD_BUF0 
0868   654D 7E          CMD_CP_LOOP:                                 LD A,(HL) 
0869   654E                                                         
0870   654E FE FF                                                   CP 0xff
0871   6550 28 15                                                   JR Z,CMD_LIST_ENDED
0872   6552 1A                                                      LD A,(DE) 
0873   6553 BE                                                      CP (HL) 
0874   6554 28 04                                                   JR Z,LAB_ram_6564
0875   6556 DD 36 FE 01                                             LD (VAR_TEMP),0x1 ; not equal
0876   655A 23          LAB_ram_6564:                                INC HL
0877   655B 13                                                      INC DE
0878   655C 10 EF                                                   DJNZ CMD_CP_LOOP
0879   655E AF                                                      XOR A
0880   655F DD BE FE                                                CP (VAR_TEMP) 
0881   6562 20 06                                                   JR NZ,CMD_NOT_EQUAL
0882   6564 F1                                                      POP AF
0883   6565 7E                                                      LD A,(HL) 
0884   6566 F5                                                      PUSH AF
0885   6567 F1          CMD_LIST_ENDED:                              POP AF
0886   6568 E1                                                      POP HL
0887   6569 C9                                                      RET ; command code returned in A
0888   656A 23          CMD_NOT_EQUAL:                               INC HL
0889   656B 18 D7                                                   JR CMD_NEXT_COMMAND
0890   656D E5          GAME_RESTORED:                               PUSH HL
0891   656E 18 10                                                   JR LAB_ram_658a
0892   6570             TEXT_READY_CASSETE:                          db "READY CASSETTE\r",0
0892   6570 52454144592043415353455454450D00
0893   6580 21 70 65    LAB_ram_658a:                                LD HL,TEXT_READY_CASSETE 
0894   6583 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0895   6586 E1                                                      POP HL
0896   6587 CD 38 67                                                CALL WAIT_KEY
0897   658A DD E5                                                   PUSH IX
0898   658C DD 21 46 5D                                             LD IX,GAME_STATE
0899   6590 11 29 00                                                LD DE,0x29 ;size of save
0900   6593 3E FF                                                   LD A,0xff
0901   6595 37                                                      SCF
0902   6596 CD 56 05                                                CALL 0x0556
0903   6599 DD 21 B9 6D                                             LD IX,ITEMS_BY_ROOM_TABLE
0904   659D 11 1D 00                                                LD DE,0x1d ;size of game state
0905   65A0 3E FF                                                   LD A,0xff
0906   65A2 37                                                      SCF
0907   65A3 CD 56 05                                                CALL 0x0556
0908   65A6 DD E1                                                   POP IX
0909   65A8 C9                                                      RET
0910   65A9 CD 9F 67    GAME_INIT:                                   CALL INIT_SCREEN
0911   65AC 21 B5 65                                                LD HL,TEXT_WELCOME 
0912   65AF CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0913   65B2 C3 38 67                                                JP WAIT_KEY
0914   65B5             TEXT_WELCOME:                                db "WELCOME TO ADVENTURE 'A'\rTHE PLANET OF DEATH\r\rIN THIS ADVENTURE YOU FIND YOUR"
0914   65B5 57454C434F4D4520544F20414456454E54555245202741270D54484520504C41
0914   65D5 4E4554204F462044454154480D0D494E205448495320414456454E5455524520
0914   65F5 594F552046494E4420594F5552
0915   6602                                                         db "SELF STRANDED ON AN ALIEN PLANET. YOUR AIM IS TO ESCAPE FROM THIS PLANET BY FIND"
0915   6602 53454C4620535452414E444544204F4E20414E20414C49454E20504C414E4554
0915   6622 2E20594F55522041494D20495320544F204553434150452046524F4D20544849
0915   6642 5320504C414E45542042592046494E44
0916   6652                                                         db "ING YOUR, NOW CAPTURED AND DISABLED, SPACE SHIP\rYOU WILL MEET VARIOUS HAZARDS A"
0916   6652 494E4720594F55522C204E4F5720434150545552454420414E44204449534142
0916   6672 4C45442C20535041434520534849500D594F552057494C4C204D454554205641
0916   6692 52494F55532048415A415244532041
0917   66A1                                                         db "ND DANGERS ON YOUR ADVENTURE, SOME NATURAL, SOME NOT, ALL OF WHICH YOU MUST OVER"
0917   66A1 4E442044414E47455253204F4E20594F555220414456454E545552452C20534F
0917   66C1 4D45204E41545552414C2C20534F4D45204E4F542C20414C4C204F4620574849
0917   66E1 434820594F55204D555354204F564552
0918   66F1                                                         db "COME TO SUCCEED\r\rGOOD LUCK, YOU WILL NEED IT!\r\rPRESS ANY KEY TO START\r",0
0918   66F1 434F4D4520544F20535543434545440D0D474F4F44204C55434B2C20594F5520
0918   6711 57494C4C204E454544204954210D0D505245535320414E59204B455920544F20
0918   6731 53544152540D00
0919   6738 AF          WAIT_KEY:                                    XOR A
0920   6739 32 ED BB                                                LD (KEYBOARD.LASTK),A
0921   673C 3A ED BB    WRONG_KEY:                                   LD A,(KEYBOARD.LASTK)
0922   673F B7                                                      OR A
0923   6740 28 FA                                                   JR Z,WRONG_KEY
0924   6742 FE 90                                                   CP 0x90 ;
0925   6744 30 F6                                                   JR NC,WRONG_KEY
0926   6746 FE 0C                                                   CP 0xc ; "Form Feed" - next CR
0927   6748 38 F2                                                   JR C,WRONG_KEY
0928   674A FE 60                                                   CP 0x60 ; "`"
0929   674C D8                                                      RET C
0930   674D D6 20                                                   SUB 0x20 ; lower to caps
0931   674F C9                                                      RET
0932   6750 D5                                                      db 0xD5
0933   6751 57                                                      db 0x57
0934   6752 3E                                                      db 0x3E
0935   6753 7F                                                      db 0x7F
0936   6754 DB                                                      db 0xDB
0937   6755 FE                                                      db 0xFE
0938   6756 1F                                                      db 0x1F
0939   6757 38                                                      db 0x38
0940   6758 0D                                                      db 0x0D
0941   6759 3E                                                      db 0x3E
0942   675A FE                                                      db 0xFE
0943   675B DB                                                      db 0xDB
0944   675C FE                                                      db 0xFE
0945   675D 1F                                                      db 0x1F
0946   675E 38                                                      db 0x38
0947   675F 06                                                      db 0x06
0948   6760 3E                                                      db 0x3E
0949   6761 01                                                      db 0x01
0950   6762 B7                                                      db 0xB7
0951   6763 7A          LAB_ram_6787:                                LD A,D
0952   6764 D1                                                      POP DE
0953   6765 C9                                                      RET
0954   6766 AF                                                      XOR A
0955   6767 18 FA                                                   JR LAB_ram_6787
0956   6769 E5          READ_LINE_START:                             PUSH HL
0957   676A 06 20                                                   LD B,0x20
0958   676C 36 00       INPUT_LINE_LOOP:                             LD (HL),0x0
0959   676E CD 38 67                                                CALL WAIT_KEY
0960   6771 FE 0C                                                   CP 0xc ; delete
0961   6773 20 18                                                   JR NZ,INPUT_CHAR
0962   6775 3E 20                                                   LD A,0x20
0963   6777 B8                                                      CP B
0964   6778 28 F2                                                   JR Z,INPUT_LINE_LOOP
0965   677A 04                                                      INC B
0966   677B 2B                                                      DEC HL
0967   677C 3E 08       INPUT_LINE_FULL:                             LD A,0x8
0968   677E CD E7 BF                                                CALL SCREEN.PRINT_CHAR
0969   6781 3E 20                                                   LD A,0x20
0970   6783 CD E7 BF                                                CALL SCREEN.PRINT_CHAR
0971   6786 3E 08                                                   LD A,0x8
0972   6788 CD E7 BF                                                CALL SCREEN.PRINT_CHAR
0973   678B 18 DF                                                   JR INPUT_LINE_LOOP
0974   678D CD E7 BF    INPUT_CHAR:                                  CALL SCREEN.PRINT_CHAR
0975   6790 FE 0D                                                   CP 0xd
0976   6792 28 09                                                   JR Z,INPUT_END_LINE
0977   6794 04                                                      INC B
0978   6795 05                                                      DEC B
0979   6796 28 E4                                                   JR Z,INPUT_LINE_FULL
0980   6798 05                                                      DEC B
0981   6799 77                                                      LD (HL),A
0982   679A 23                                                      INC HL
0983   679B 18 CF                                                   JR INPUT_LINE_LOOP
0984   679D E1          INPUT_END_LINE:                              POP HL
0985   679E C9                                                      RET
0986   679F E5          INIT_SCREEN:                                 PUSH HL
0987   67A0 D5                                                      PUSH DE
0988   67A1 C5                                                      PUSH BC
0989   67A2 F5                                                      PUSH AF
0990   67A3 3E 04                                                   LD A, CLR_BLACK<<3 | CLR_GREEN
0991   67A5 CD 13 BF                                                CALL SCREEN.CLEAR
0992   67A8 F1                                                      POP AF
0993   67A9 C1                                                      POP BC
0994   67AA D1                                                      POP DE
0995   67AB E1                                                      POP HL
0996   67AC C9                                                      RET
0997   67AD             ROOM_DESC_POINTER:                           include text_rooms.asm
0001+  67AD D9 67                                                   dw PLACE_MOUNTAIN_PLATEA 
0002+  67AF 3E 68                                                   dw PLACE_EDGE_OF_A_DEEP_PIT 
0003+  67B1 75 68                                                   dw PLACE_DAMP_LIMESTONE_CAVE 
0004+  67B3 EB 68                                                   dw PLACE_DENSE_FOREST 
0005+  67B5 4A 69                                                   dw PLACE_BESIDE_A_LAKE 
0006+  67B7 95 69                                                   dw PLACE_STRANGE_HOUSE 
0007+  67B9 C7 69                                                   dw PLACE_OLD_SHED 
0008+  67BB F4 69                                                   dw PLACE_MAZE 
0009+  67BD F4 69                                                   dw PLACE_MAZE 
0010+  67BF F4 69                                                   dw PLACE_MAZE 
0011+  67C1 F4 69                                                   dw PLACE_MAZE 
0012+  67C3 22 6A                                                   dw PLACE_ICE_CAVERN 
0013+  67C5 56 6A                                                   dw PLACE_QUIET_CAVERN 
0014+  67C7 92 6A                                                   dw PLACE_WIND_TUNNEL 
0015+  67C9 ED 6A                                                   dw PLACE_COMPUTER_ROOM 
0016+  67CB 4C 6B                                                   dw PLACE_PASSAGE 
0017+  67CD BF 6B                                                   dw PLACE_LARGE_HANGER 
0018+  67CF 24 6C                                                   dw PLACE_TALL_LIFT 
0019+  67D1 64 6C                                                   dw PLACE_LIFT_CONTROL_ROOM 
0020+  67D3 EF 6C                                                   dw PLACE_PRISON_CELL 
0021+  67D5 06 6D                                                   dw PLACE_SPACE_SHIP 
0022+  67D7 00 00                                                   dw 0x0000
0023+  67D9             PLACE_MOUNTAIN_PLATEA:                       db "I AM ON A MOUNTAIN PLATEAU\rTO THE NORTH THERE IS A STEEP CLIFF\rOBVIOUS EXITS A"
0023+  67D9 4920414D204F4E2041204D4F554E5441494E20504C41544541550D544F205448
0023+  67F9 45204E4F525448205448455245204953204120535445455020434C4946460D4F
0023+  6819 4256494F55532045584954532041
0024+  6827                                                         db "RE DOWN,EAST AND WEST\r",0
0024+  6827 524520444F574E2C4541535420414E4420574553540D00
0025+  683E             PLACE_EDGE_OF_A_DEEP_PIT:                    db "I AM AT THE EDGE OF A DEEP PIT\rOBVIOUS EXITS ARE EAST\r",0
0025+  683E 4920414D204154205448452045444745204F4620412044454550205049540D4F
0025+  685E 4256494F55532045584954532041524520454153540D00
0026+  6875             PLACE_DAMP_LIMESTONE_CAVE:                   db "I AM IN A DAMP LIMESTONE CAVE WITH STALACTITES HANGING DOWN.\rTHE EXIT IS TO THE"
0026+  6875 4920414D20494E20412044414D50204C494D4553544F4E452043415645205749
0026+  6895 5448205354414C414354495445532048414E47494E4720444F574E2E0D544845
0026+  68B5 204558495420495320544F20544845
0027+  68C4                                                         db " WEST\rTHERE IS A PASSAGE TO THE NORTH\r",0
0027+  68C4 20574553540D54484552452049532041205041535341474520544F2054484520
0027+  68E4 4E4F5254480D00
0028+  68EB             PLACE_DENSE_FOREST:                          db "I AM IN A DENSE FOREST\rTHERE IS A ROPE HANGING FROM ONE TREE\rOBVIOUS EXITS ARE"
0028+  68EB 4920414D20494E20412044454E534520464F524553540D544845524520495320
0028+  690B 4120524F50452048414E47494E472046524F4D204F4E4520545245450D4F4256
0028+  692B 494F555320455849545320415245
0029+  6939                                                         db " SOUTH AND WEST\r",0
0029+  6939 20534F55544820414E4420574553540D00
0030+  694A             PLACE_BESIDE_A_LAKE:                         db "I AM BESIDE A LAKE\rEXITS ARE EAST AND NORTH.THERE IS A RAVINE TO THE WEST\r",0
0030+  694A 4920414D204245534944452041204C414B450D45584954532041524520454153
0030+  696A 5420414E44204E4F5254482E5448455245204953204120524156494E4520544F
0030+  698A 2054484520574553540D00
0031+  6995             PLACE_STRANGE_HOUSE:                         db "I AM IN A STRANGE HOUSE\rTHE DOOR IS TO THE NORTH\r",0
0031+  6995 4920414D20494E204120535452414E474520484F5553450D54484520444F4F52
0031+  69B5 20495320544F20544845204E4F5254480D00
0032+  69C7             PLACE_OLD_SHED:                              db "I AM IN AN OLD SHED\rTHE EXIT IS TO THE EAST\r",0
0032+  69C7 4920414D20494E20414E204F4C4420534845440D544845204558495420495320
0032+  69E7 544F2054484520454153540D00
0033+  69F4             PLACE_MAZE:                                  db "I AM IN A MAZE.THERE ARE PASSAGES EVERYWHERE\r",0
0033+  69F4 4920414D20494E2041204D415A452E5448455245204152452050415353414745
0033+  6A14 5320455645525957484552450D00
0034+  6A22             PLACE_ICE_CAVERN:                            db "I AM IN AN ICE CAVERN\rTHERE IS AN EXIT TO THE EAST\r",0
0034+  6A22 4920414D20494E20414E204943452043415645524E0D54484552452049532041
0034+  6A42 4E204558495420544F2054484520454153540D00
0035+  6A56             PLACE_QUIET_CAVERN:                          db "I AM IN A QUIET CAVERN\rTHERE ARE EXITS WEST,EAST AND SOUTH\r",0
0035+  6A56 4920414D20494E20412051554945542043415645524E0D544845524520415245
0035+  6A76 20455849545320574553542C4541535420414E4420534F5554480D00
0036+  6A92             PLACE_WIND_TUNNEL:                           db "I AM IN A WIND TUNNEL\rTHERE IS A CLOSED DOOR AT THE END\rTHERE IS ALSO AN EXIT "
0036+  6A92 4920414D20494E20412057494E442054554E4E454C0D54484552452049532041
0036+  6AB2 20434C4F53454420444F4F522041542054484520454E440D5448455245204953
0036+  6AD2 20414C534F20414E204558495420
0037+  6AE0                                                         db "TO THE WEST\r",0
0037+  6AE0 544F2054484520574553540D00
0038+  6AED             PLACE_COMPUTER_ROOM:                         db "I AM IN A ROOM WITH A COMPUTER IN\rTHE COMPUTER IS WORKING AND HAS A KEYBOARD\rT"
0038+  6AED 4920414D20494E204120524F4F4D2057495448204120434F4D50555445522049
0038+  6B0D 4E0D54484520434F4D505554455220495320574F524B494E4720414E44204841
0038+  6B2D 532041204B4559424F4152440D54
0039+  6B3B                                                         db "HE EXIT IS WEST\r",0
0039+  6B3B 4845204558495420495320574553540D00
0040+  6B4C             PLACE_PASSAGE:                               db "I AM IN A PASSAGE\rTHERE IS A FORCE FIELD TO THE SOUTH : BEWARE OF SECURITY\rTHE"
0040+  6B4C 4920414D20494E204120504153534147450D5448455245204953204120464F52
0040+  6B6C 4345204649454C4420544F2054484520534F555448203A20424557415245204F
0040+  6B8C 462053454355524954590D544845
0041+  6B9A                                                         db "RE ARE EXITS TO NORTH,EAST AND WEST\r",0
0041+  6B9A 52452041524520455849545320544F204E4F5254482C4541535420414E442057
0041+  6BBA 4553540D00
0042+  6BBF             PLACE_LARGE_HANGER:                          db "I AM IN A LARGE HANGER\rTHERE IS A LOCKED DOOR TO THE WEST\rTHERE ARE ALSO EXITS"
0042+  6BBF 4920414D20494E2041204C415247452048414E4745520D544845524520495320
0042+  6BDF 41204C4F434B454420444F4F5220544F2054484520574553540D544845524520
0042+  6BFF 41524520414C534F204558495453
0043+  6C0D                                                         db " EAST,NORTH AND SOUTH\r",0
0043+  6C0D 20454153542C4E4F52544820414E4420534F5554480D00
0044+  6C24             PLACE_TALL_LIFT:                             db "I AM IN A TALL LIFT.THE BUTTONS ARE VERY HIGH\rTHE EXIT IS WEST\r",0
0044+  6C24 4920414D20494E20412054414C4C204C4946542E54484520425554544F4E5320
0044+  6C44 415245205645525920484947480D544845204558495420495320574553540D00
0045+  6C64             PLACE_LIFT_CONTROL_ROOM:                     db "I AM IN THE LIFT CONTROL ROOM\rTHERE ARE THREE SWITCHES ON THE WALL.THEY ARE ALL"
0045+  6C64 4920414D20494E20544845204C49465420434F4E54524F4C20524F4F4D0D5448
0045+  6C84 45524520415245205448524545205357495443484553204F4E20544845205741
0045+  6CA4 4C4C2E544845592041524520414C4C
0046+  6CB3                                                         db " OFF\rA SIGN SAYS : 5,4 NO DUSTY BIN RULES\rTHE EXIT IS EAST\r",0
0046+  6CB3 204F46460D41205349474E2053415953203A20352C34204E4F20445553545920
0046+  6CD3 42494E2052554C45530D544845204558495420495320454153540D00
0047+  6CEF             PLACE_PRISON_CELL:                           db "I AM IN A PRISON CELL\r",0
0047+  6CEF 4920414D20494E204120505249534F4E2043454C4C0D00
0048+  6D06             PLACE_SPACE_SHIP:                            db "I AM IN A SPACE SHIP.THERE IS NO VISIBLE EXIT\rTHERE IS A SMALL OPEN WINDOW IN T"
0048+  6D06 4920414D20494E204120535041434520534849502E5448455245204953204E4F
0048+  6D26 2056495349424C4520455849540D5448455245204953204120534D414C4C204F
0048+  6D46 50454E2057494E444F5720494E2054
0049+  6D55                                                         db "HE SIDE\rTHERE ARE ALSO TWO BUTTONS,ONE MARKED MAIN AND THE OTHER AUX.\r",0
0049+  6D55 484520534944450D54484552452041524520414C534F2054574F20425554544F
0049+  6D75 4E532C4F4E45204D41524B4544204D41494E20414E4420544845204F54484552
0049+  6D95 204155582E0D00
0998   6D9C             ITEMS_BY_ROOM_TABLE_INIT:                             
0999   6D9C 05                                                      db 0x05 ; value = room number, where item is placed
1000   6D9D 11                                                      db 0x11
1001   6D9E 0E                                                      db 0x0E
1002   6D9F 06                                                      db 0x06
1003   6DA0 11                                                      db 0x11
1004   6DA1 FC                                                      db 0xFC
1005   6DA2 FC                                                      db 0xFC
1006   6DA3 0C                                                      db 0x0C
1007   6DA4 FC                                                      db 0xFC
1008   6DA5 0D                                                      db 0x0D
1009   6DA6 FC                                                      db 0xFC
1010   6DA7 05                                                      db 0x05
1011   6DA8 FC                                                      db 0xFC
1012   6DA9 FC                                                      db 0xFC
1013   6DAA 0B                                                      db 0x0B
1014   6DAB FC                                                      db 0xFC
1015   6DAC 0C                                                      db 0x0C
1016   6DAD FC                                                      db 0xFC
1017   6DAE 13                                                      db 0x13
1018   6DAF FC                                                      db 0xFC
1019   6DB0 13                                                      db 0x13
1020   6DB1 FC                                                      db 0xFC
1021   6DB2 10                                                      db 0x10
1022   6DB3 10                                                      db 0x10
1023   6DB4 00                                                      db 0x00
1024   6DB5 01                                                      db 0x01
1025   6DB6 02                                                      db 0x02
1026   6DB7 0F                                                      db 0x0F
1027   6DB8 FF                                                      db 0xFF
1028   6DB9 00          ITEMS_BY_ROOM_TABLE:                         ds 0x1d ; current state of items
1029   6DD6             ITEM_DESC_POINTER:                           include text_items.asm
0001+  6DD6 10 6E                                                   dw OBJECT_A_PAIR_OF_BOOTS 
0002+  6DD8 20 6E                                                   dw OBJECT_A_STARTER_MOTOR 
0003+  6DDA 30 6E                                                   dw OBJECT_A_KEY 
0004+  6DDC 36 6E                                                   dw OBJECT_A_LASER_GUN 
0005+  6DDE 42 6E                                                   dw OBJECT_AN_OUT_OF_ORDER_SIGN 
0006+  6DE0 57 6E                                                   dw OBJECT_A_METAL_BAR 
0007+  6DE2 63 6E                                                   dw OBJECT_A_GOLD_COIN 
0008+  6DE4 6F 6E                                                   dw OBJECT_A_MIRROR 
0009+  6DE6 78 6E                                                   dw OBJECT_BROKEN_GLASS 
0010+  6DE8 85 6E                                                   dw OBJECT_A_PAIR_OF_SLIMY_GLOVES 
0011+  6DEA 9C 6E                                                   dw OBJECT_A_ROPE 
0012+  6DEC A3 6E                                                   dw OBJECT_A_FLOOR_BOARD 
0013+  6DEE B1 6E                                                   dw OBJECT_A_BROKEN_FLOOR_BOARD 
0014+  6DF0 C6 6E                                                   dw OBJECT_STALACTITES 
0015+  6DF2 D2 6E                                                   dw OBJECT_A_BLOCK_OF_ICE 
0016+  6DF4 E1 6E                                                   dw OBJECT_A_POOL_OF_WATER 
0017+  6DF6 F1 6E                                                   dw OBJECT_A_SMALL_GREEN_MAN_SLEEPING 
0018+  6DF8 1A 6F                                                   dw OBJECT_A_SLEEPING_GREEN_MAN 
0019+  6DFA 2F 6F                                                   dw OBJECT_A_LOCKED_DOOR 
0020+  6DFC 3D 6F                                                   dw OBJECT_AN_OPEN_DOOR 
0021+  6DFE 4A 6F                                                   dw OBJECT_A_BARRED_WINDOW 
0022+  6E00 5A 6F                                                   dw OBJECT_A_HOLE_IN_THE_WALL 
0023+  6E02 6D 6F                                                   dw OBJECT_A_SMALL_BUT_POWERFULL_SPACE_SHIP 
0024+  6E04 8E 6F                                                   dw OBJECT_A_SLEEPING_SECURITY_MAN 
0025+  6E06 A6 6F                                                   dw OBJECT_A_PIECE_OF_SHARP_FLINT 
0026+  6E08 BD 6F                                                   dw OBJECT_SOME_STONES 
0027+  6E0A C9 6F                                                   dw OBJECT_A_DRAWING_ON_THE_WALL 
0028+  6E0C DF 6F                                                   dw OBJECT_A_LOUDSPEAKER_WITH_DANCE_MUSIC 
0029+  6E0E 00 00                                                   dw 0x0000
0030+  6E10             OBJECT_A_PAIR_OF_BOOTS:                      db "A PAIR OF BOOTS",0
0030+  6E10 412050414952204F4620424F4F545300
0031+  6E20             OBJECT_A_STARTER_MOTOR:                      db "A STARTER MOTOR",0
0031+  6E20 412053544152544552204D4F544F5200
0032+  6E30             OBJECT_A_KEY:                                db "A KEY",0
0032+  6E30 41204B455900
0033+  6E36             OBJECT_A_LASER_GUN:                          db "A LASER GUN",0
0033+  6E36 41204C415345522047554E00
0034+  6E42             OBJECT_AN_OUT_OF_ORDER_SIGN:                 db "AN OUT OF ORDER SIGN",0
0034+  6E42 414E204F5554204F46204F52444552205349474E00
0035+  6E57             OBJECT_A_METAL_BAR:                          db "A METAL BAR",0
0035+  6E57 41204D4554414C2042415200
0036+  6E63             OBJECT_A_GOLD_COIN:                          db "A GOLD COIN",0
0036+  6E63 4120474F4C4420434F494E00
0037+  6E6F             OBJECT_A_MIRROR:                             db "A MIRROR",0
0037+  6E6F 41204D4952524F5200
0038+  6E78             OBJECT_BROKEN_GLASS:                         db "BROKEN GLASS",0
0038+  6E78 42524F4B454E20474C41535300
0039+  6E85             OBJECT_A_PAIR_OF_SLIMY_GLOVES:               db "A PAIR OF SLIMY GLOVES",0
0039+  6E85 412050414952204F4620534C494D5920474C4F56455300
0040+  6E9C             OBJECT_A_ROPE:                               db "A ROPE",0
0040+  6E9C 4120524F504500
0041+  6EA3             OBJECT_A_FLOOR_BOARD:                        db "A FLOOR BOARD",0
0041+  6EA3 4120464C4F4F5220424F41524400
0042+  6EB1             OBJECT_A_BROKEN_FLOOR_BOARD:                 db "A BROKEN FLOOR BOARD",0
0042+  6EB1 412042524F4B454E20464C4F4F5220424F41524400
0043+  6EC6             OBJECT_STALACTITES:                          db "STALACTITES",0
0043+  6EC6 5354414C4143544954455300
0044+  6ED2             OBJECT_A_BLOCK_OF_ICE:                       db "A BLOCK OF ICE",0
0044+  6ED2 4120424C4F434B204F462049434500
0045+  6EE1             OBJECT_A_POOL_OF_WATER:                      db "A POOL OF WATER",0
0045+  6EE1 4120504F4F4C204F4620574154455200
0046+  6EF1             OBJECT_A_SMALL_GREEN_MAN_SLEEPING:           db "A SMALL GREEN MAN SLEEPING ON THE MIRROR",0
0046+  6EF1 4120534D414C4C20475245454E204D414E20534C454550494E47204F4E205448
0046+  6F11 45204D4952524F5200
0047+  6F1A             OBJECT_A_SLEEPING_GREEN_MAN:                 db "A SLEEPING GREEN MAN",0
0047+  6F1A 4120534C454550494E4720475245454E204D414E00
0048+  6F2F             OBJECT_A_LOCKED_DOOR:                        db "A LOCKED DOOR",0
0048+  6F2F 41204C4F434B454420444F4F5200
0049+  6F3D             OBJECT_AN_OPEN_DOOR:                         db "AN OPEN DOOR",0
0049+  6F3D 414E204F50454E20444F4F5200
0050+  6F4A             OBJECT_A_BARRED_WINDOW:                      db "A BARRED WINDOW",0
0050+  6F4A 41204241525245442057494E444F5700
0051+  6F5A             OBJECT_A_HOLE_IN_THE_WALL:                   db "A HOLE IN THE WALL",0
0051+  6F5A 4120484F4C4520494E205448452057414C4C00
0052+  6F6D             OBJECT_A_SMALL_BUT_POWERFULL_SPACE_SHIP:     db "A SMALL BUT POWERFULL SPACE SHIP",0
0052+  6F6D 4120534D414C4C2042555420504F57455246554C4C2053504143452053484950
0052+  6F8D 00
0053+  6F8E             OBJECT_A_SLEEPING_SECURITY_MAN:              db "A SLEEPING SECURITY MAN",0
0053+  6F8E 4120534C454550494E47205345435552495459204D414E00
0054+  6FA6             OBJECT_A_PIECE_OF_SHARP_FLINT:               db "A PIECE OF SHARP FLINT",0
0054+  6FA6 41205049454345204F4620534841525020464C494E5400
0055+  6FBD             OBJECT_SOME_STONES:                          db "SOME STONES",0
0055+  6FBD 534F4D452053544F4E455300
0056+  6FC9             OBJECT_A_DRAWING_ON_THE_WALL:                db "A DRAWING ON THE WALL",0
0056+  6FC9 412044524157494E47204F4E205448452057414C4C00
0057+  6FDF             OBJECT_A_LOUDSPEAKER_WITH_DANCE_MUSIC:       db "A LOUDSPEAKER WITH DANCE MUSIC COMING OUT",0
0057+  6FDF 41204C4F5544535045414B455220574954482044414E4345204D555349432043
0057+  6FFF 4F4D494E47204F555400
1030   7009             COMMAND_LIST:                                include commands.asm
0001+  7009                                        	
0002+  7009 44 4F 57 4E 											db "DOWN"
0003+  700D 01                                                      db COMMAND_DOWN
0004+  700E 44 20 20 20                                             db "D   "
0005+  7012 01                                                      db COMMAND_DOWN
0006+  7013 4E 4F 52 54                                             db "NORT"
0007+  7017 02                                                      db 0x02
0008+  7018 4E 20 20 20                                             db "N   "
0009+  701C 02                                                      db 0x02
0010+  701D 53 4F 55 54                                             db "SOUT"
0011+  7021 03                                                      db 0x03
0012+  7022 53 20 20 20                                             db "S   "
0013+  7026 03                                                      db 0x03
0014+  7027 45 41 53 54                                             db "EAST"
0015+  702B 04                                                      db 0x04
0016+  702C 45 20 20 20                                             db "E   "
0017+  7030 04                                                      db 0x04
0018+  7031 57 45 53 54                                             db "WEST"
0019+  7035 05                                                      db 0x05
0020+  7036 57 20 20 20                                             db "W   "
0021+  703A 05                                                      db 0x05
0022+  703B 47 45 54 20                                             db "GET "
0023+  703F 0D                                                      db COMMAND_GET
0024+  7040 50 49 43 4B                                             db "PICK"
0025+  7044 0D                                                      db COMMAND_GET
0026+  7045 44 52 4F 50                                             db "DROP"
0027+  7049 0E                                                      db COMMAND_PUT
0028+  704A 50 55 54 20                                             db "PUT "
0029+  704E 0E                                                      db COMMAND_PUT
0030+  704F 46 49 52 45                                             db "FIRE"
0031+  7053 0F                                                      db COMMAND_FIRE
0032+  7054 53 48 4F 4F                                             db "SHOO"
0033+  7058 0F                                                      db COMMAND_FIRE
0034+  7059 42 4F 4F 54                                             db "BOOT"
0035+  705D 10                                                      db COMMAND_BOOT
0036+  705E 53 54 41 52                                             db "STAR"
0037+  7062 11                                                      db COMMAND_STAR
0038+  7063 4D 4F 54 4F                                             db "MOTO"
0039+  7067 11                                                      db COMMAND_STAR
0040+  7068 4B 45 59 20                                             db "KEY "
0041+  706C 12                                                      db COMMAND_KEY
0042+  706D 4C 41 53 45                                             db "LASE"
0043+  7071 13                                                      db COMMAND_GUN
0044+  7072 47 55 4E 20                                             db "GUN "
0045+  7076 13                                                      db COMMAND_GUN
0046+  7077 55 53 45 44                                             db "USED"
0047+  707B 14                                                      db COMMAND_USED
0048+  707C 42 41 52 20                                             db "BAR "
0049+  7080 15                                                      db COMMAND_BAR
0050+  7081 42 41 52 53                                             db "BARS"
0051+  7085 15                                                      db COMMAND_BAR
0052+  7086 47 4F 4C 44                                             db "GOLD"
0053+  708A 16                                                      db COMMAND_COIN
0054+  708B 43 4F 49 4E                                             db "COIN"
0055+  708F 16                                                      db COMMAND_COIN
0056+  7090 4D 49 52 52                                             db "MIRR"
0057+  7094 17                                                      db COMMAND_MIRR
0058+  7095 42 52 4F 4B                                             db "BROK"
0059+  7099 18                                                      db COMMAND_BROK
0060+  709A 47 4C 4F 56                                             db "GLOV"
0061+  709E 19                                                      db COMMAND_GLOV
0062+  709F 52 4F 50 45                                             db "ROPE"
0063+  70A3 1A                                                      db COMMAND_ROPE
0064+  70A4 46 4C 4F 4F                                             db "FLOO"
0065+  70A8 1B                                                      db COMMAND_FLOO
0066+  70A9 42 4F 41 52                                             db "BOAR"
0067+  70AD 1B                                                      db COMMAND_FLOO
0068+  70AE 50 4C 41 4E                                             db "PLAN"
0069+  70B2 1B                                                      db COMMAND_FLOO
0070+  70B3 53 54 41 4C                                             db "STAL"
0071+  70B7 1C                                                      db COMMAND_STAL
0072+  70B8 42 4C 4F 43                                             db "BLOC"
0073+  70BC 1D                                                      db COMMAND_ICE
0074+  70BD 49 43 45 20                                             db "ICE "
0075+  70C1 1D                                                      db COMMAND_ICE
0076+  70C2 50 4F 4F 4C                                             db "POOL"
0077+  70C6 1E                                                      db COMMAND_WATE
0078+  70C7 57 41 54 45                                             db "WATE"
0079+  70CB 1E                                                      db COMMAND_WATE
0080+  70CC 4C 41 4B 45                                             db "LAKE"
0081+  70D0 1E                                                      db COMMAND_WATE
0082+  70D1 53 4C 45 45                                             db "SLEE"
0083+  70D5 1F                                                      db COMMAND_MAN
0084+  70D6 47 52 45 45                                             db "GREE"
0085+  70DA 1F                                                      db COMMAND_MAN
0086+  70DB 4D 41 4E 20                                             db "MAN "
0087+  70DF 1F                                                      db COMMAND_MAN
0088+  70E0 44 4F 4F 52                                             db "DOOR"
0089+  70E4 20                                                      db COMMAND_DOOR
0090+  70E5 4F 50 45 4E                                             db "OPEN"
0091+  70E9 21                                                      db COMMAND_OPEN
0092+  70EA 55 4E 4C 4F                                             db "UNLO"
0093+  70EE 21                                                      db COMMAND_OPEN
0094+  70EF 57 49 4E 44                                             db "WIND"
0095+  70F3 22                                                      db COMMAND_WIND
0096+  70F4 53 4D 41 4C                                             db "SMAL"
0097+  70F8 23                                                      db COMMAND_SHIP
0098+  70F9 53 50 41 43                                             db "SPAC"
0099+  70FD 23                                                      db COMMAND_SHIP
0100+  70FE 53 48 49 50                                             db "SHIP"
0101+  7102 23                                                      db COMMAND_SHIP
0102+  7103 53 45 43 55                                             db "SECU"
0103+  7107 24                                                      db COMMAND_SECU
0104+  7108 46 4C 49 4E                                             db "FLIN"
0105+  710C 25                                                      db COMMAND_FLIN
0106+  710D 53 54 4F 4E                                             db "STON"
0107+  7111 26                                                      db COMMAND_STON
0108+  7112 44 52 41 57                                             db "DRAW"
0109+  7116 27                                                      db COMMAND_DRAW
0110+  7117 48 45 4C 50                                             db "HELP"
0111+  711B 28                                                      db COMMAND_HELP
0112+  711C 49 4E 56 45                                             db "INVE"
0113+  7120 29                                                      db COMMAND_INVE
0114+  7121 49 20 20 20                                             db "I   "
0115+  7125 29                                                      db COMMAND_INVE
0116+  7126 51 55 49 54                                             db "QUIT"
0117+  712A 2A                                                      db COMMAND_STOP
0118+  712B 53 54 4F 50                                             db "STOP"
0119+  712F 2A                                                      db COMMAND_STOP
0120+  7130 41 42 4F 52                                             db "ABOR"
0121+  7134 2A                                                      db COMMAND_STOP
0122+  7135 59 45 53 20                                             db "YES "
0123+  7139 2B                                                      db COMMAND_YES
0124+  713A 59 20 20 20                                             db "Y   "
0125+  713E 2B                                                      db COMMAND_YES
0126+  713F 4E 4F 20 20                                             db "NO  "
0127+  7143 2C                                                      db COMMAND_NO
0128+  7144 43 4F 4D 50                                             db "COMP"
0129+  7148 2D                                                      db COMMAND_KEYB
0130+  7149 4B 45 59 42                                             db "KEYB"
0131+  714D 2D                                                      db COMMAND_KEYB
0132+  714E 54 59 50 45                                             db "TYPE"
0133+  7152 2E                                                      db COMMAND_TYPE
0134+  7153 54 55 52 4E                                             db "TURN"
0135+  7157 2F                                                      db COMMAND_TURN
0136+  7158 48 41 4E 44                                             db "HAND"
0137+  715C 30                                                      db COMMAND_HAND
0138+  715D 4B 49 4C 4C                                             db "KILL"
0139+  7161 31                                                      db COMMAND_KILL
0140+  7162 44 41 4E 43                                             db "DANC"
0141+  7166 32                                                      db COMMAND_DANC
0142+  7167 57 41 4C 54                                             db "WALT"
0143+  716B 32                                                      db COMMAND_DANC
0144+  716C 52 45 4D 4F                                             db "REMO"
0145+  7170 33                                                      db COMMAND_REMO
0146+  7171 4B 49 43 4B                                             db "KICK"
0147+  7175 34                                                      db COMMAND_HIT
0148+  7176 42 52 45 41                                             db "BREA"
0149+  717A 34                                                      db COMMAND_HIT
0150+  717B 48 49 54 20                                             db "HIT "
0151+  717F 34                                                      db COMMAND_HIT
0152+  7180 42 41 4E 47                                             db "BANG"
0153+  7184 34                                                      db COMMAND_HIT
0154+  7185 42 52 49 42                                             db "BRIB"
0155+  7189 35                                                      db COMMAND_BRIB
0156+  718A 55 53 45 20                                             db "USE "
0157+  718E 36                                                      db COMMAND_USE
0158+  718F 57 49 54 48                                             db "WITH"
0159+  7193 36                                                      db COMMAND_USE
0160+  7194 50 55 53 48                                             db "PUSH"
0161+  7198 37                                                      db COMMAND_PUSH
0162+  7199 54 48 52 45                                             db "THRE"
0163+  719D 38                                                      db COMMAND_3
0164+  719E 33 20 20 20                                             db "3   "
0165+  71A2 38                                                      db COMMAND_3
0166+  71A3 54 57 4F 20                                             db "TWO "
0167+  71A7 39                                                      db COMMAND_2
0168+  71A8 32 20 20 20                                             db "2   "
0169+  71AC 39                                                      db COMMAND_2
0170+  71AD 4F 4E 45 20                                             db "ONE "
0171+  71B1 3A                                                      db COMMAND_1
0172+  71B2 31 20 20 20                                             db "1   "
0173+  71B6 3A                                                      db COMMAND_1
0174+  71B7 4D 45 4E 44                                             db "MEND"
0175+  71BB 3B                                                      db COMMAND_FIX
0176+  71BC 46 49 58 20                                             db "FIX "
0177+  71C0 3B                                                      db COMMAND_FIX
0178+  71C1 52 45 50 41                                             db "REPA"
0179+  71C5 3B                                                      db COMMAND_FIX
0180+  71C6 46 4F 55 52                                             db "FOUR"
0181+  71CA 3C                                                      db COMMAND_4
0182+  71CB 34 20 20 20                                             db "4   "
0183+  71CF 3C                                                      db COMMAND_4
0184+  71D0 4C 4F 4F 4B                                             db "LOOK"
0185+  71D4 3D                                                      db COMMAND_LOOK
0186+  71D5 53 54 41 4E                                             db "STAN"
0187+  71D9 3E                                                      db COMMAND_STAN
0188+  71DA 54 52 45 45                                             db "TREE"
0189+  71DE 3F                                                      db COMMAND_TREE
0190+  71DF 43 55 54 20                                             db "CUT "
0191+  71E3 40                                                      db COMMAND_CUT
0192+  71E4 53 41 57 20                                             db "SAW "
0193+  71E8 40                                                      db COMMAND_CUT
0194+  71E9 57 45 41 52                                             db "WEAR"
0195+  71ED 41                                                      db COMMAND_WEAR
0196+  71EE 43 52 4F 53                                             db "CROS"
0197+  71F2 42                                                      db COMMAND_CROS
0198+  71F3 4A 55 4D 50                                             db "JUMP"
0199+  71F7 43                                                      db COMMAND_JUMP
0200+  71F8 52 41 56 49                                             db "RAVI"
0201+  71FC 44                                                      db COMMAND_RAVI
0202+  71FD 55 50 20 20                                             db "UP  "
0203+  7201 45                                                      db COMMAND_UP
0204+  7202 55 20 20 20                                             db "U   "
0205+  7206 45                                                      db COMMAND_UP
0206+  7207 43 4C 49 4D                                             db "CLIM"
0207+  720B 45                                                      db COMMAND_UP
0208+  720C 46 55 53 45                                             db "FUSE"
0209+  7210 46                                                      db COMMAND_FUSE
0210+  7211 52 45 44 45                                             db "REDE"
0211+  7215 47                                                      db COMMAND_REDE
0212+  7216 52 20 20 20                                             db "R   "
0213+  721A 47                                                      db COMMAND_REDE
0214+  721B 4D 41 49 4E                                             db "MAIN"
0215+  721F 48                                                      db COMMAND_MAIN
0216+  7220 41 55 58 20                                             db "AUX "
0217+  7224 49                                                      db COMMAND_AUX
0218+  7225 46 49 45 4C                                             db "FIEL"
0219+  7229 4A                                                      db COMMAND_FIEL
0220+  722A 53 48 49 45                                             db "SHIE"
0221+  722E 4A                                                      db COMMAND_FIEL
0222+  722F FF                                                      db 0xFF
1031   7230             ROOM_NAV_POINTER:                            include navigations.asm
0001+  7230 5A 72                                                   dw ROOM_00_NAV 
0002+  7232 61 72                                                   dw ROOM_01_NAV 
0003+  7234 64 72                                                   dw ROOM_02_NAV 
0004+  7236 69 72                                                   dw ROOM_03_NAV 
0005+  7238 6E 72                                                   dw ROOM_04_NAV 
0006+  723A 73 72                                                   dw ROOM_05_NAV 
0007+  723C 76 72                                                   dw ROOM_06_NAV 
0008+  723E 77 72                                                   dw ROOM_07_NAV 
0009+  7240 82 72                                                   dw ROOM_08_NAV 
0010+  7242 8D 72                                                   dw ROOM_09_NAV 
0011+  7244 98 72                                                   dw ROOM_10_NAV 
0012+  7246 A3 72                                                   dw ROOM_11_NAV 
0013+  7248 A6 72                                                   dw ROOM_12_NAV 
0014+  724A AD 72                                                   dw ROOM_13_NAV 
0015+  724C AE 72                                                   dw ROOM_14_NAV 
0016+  724E B1 72                                                   dw ROOM_15_NAV 
0017+  7250 B6 72                                                   dw ROOM_16_NAV 
0018+  7252 BD 72                                                   dw ROOM_17_NAV 
0019+  7254 C0 72                                                   dw ROOM_18_NAV 
0020+  7256 C3 72                                                   dw ROOM_19_NAV 
0021+  7258 C3 72                                                   dw ROOM_19_NAV 
0022+  725A 01          ROOM_00_NAV:                               db 0x01 ; cmd "DOWN"
0023+  725B 03                                                      db 0x03 ; to room 3
0024+  725C 04                                                      db 0x04 ; cmd "EAST"
0025+  725D 02                                                      db 0x02 ; to room 2
0026+  725E 05                                                      db 0x05 ; "WEST"
0027+  725F 01                                                      db 0x01 ; to room 1
0028+  7260 FF                                                      db 0xFF
0029+  7261 04          ROOM_01_NAV:                               db 0x04 ; cmd "EAST"
0030+  7262 00                                                      db 0x00 ;  to room 0
0031+  7263 FF                                                      db 0xFF
0032+  7264 02          ROOM_02_NAV:                               db 0x02
0033+  7265 07                                                      db 0x07
0034+  7266 05                                                      db 0x05
0035+  7267 00                                                      db 0x00
0036+  7268 FF                                                      db 0xFF
0037+  7269 03          ROOM_03_NAV:                               db 0x03
0038+  726A 04                                                      db 0x04
0039+  726B 05                                                      db 0x05
0040+  726C 00                                                      db 0x00
0041+  726D FF                                                      db 0xFF
0042+  726E 02          ROOM_04_NAV:                               db 0x02
0043+  726F 03                                                      db 0x03
0044+  7270 04                                                      db 0x04
0045+  7271 05                                                      db 0x05
0046+  7272 FF                                                      db 0xFF
0047+  7273 02          ROOM_05_NAV:                               db 0x02
0048+  7274 04                                                      db 0x04
0049+  7275 FF                                                      db 0xFF
0050+  7276 FF          ROOM_06_NAV:                               db 0xFF
0051+  7277 01          ROOM_07_NAV:                               db 0x01
0052+  7278 07                                                      db 0x07
0053+  7279 02                                                      db 0x02
0054+  727A 08                                                      db 0x08
0055+  727B 03                                                      db 0x03
0056+  727C 07                                                      db 0x07
0057+  727D 04                                                      db 0x04
0058+  727E 07                                                      db 0x07
0059+  727F 05                                                      db 0x05
0060+  7280 07                                                      db 0x07
0061+  7281 FF                                                      db 0xFF
0062+  7282 01          ROOM_08_NAV:                               db 0x01
0063+  7283 07                                                      db 0x07
0064+  7284 02                                                      db 0x02
0065+  7285 07                                                      db 0x07
0066+  7286 03                                                      db 0x03
0067+  7287 09                                                      db 0x09
0068+  7288 04                                                      db 0x04
0069+  7289 07                                                      db 0x07
0070+  728A 05                                                      db 0x05
0071+  728B 07                                                      db 0x07
0072+  728C FF                                                      db 0xFF
0073+  728D 01          ROOM_09_NAV:                               db 0x01
0074+  728E 07                                                      db 0x07
0075+  728F 02                                                      db 0x02
0076+  7290 07                                                      db 0x07
0077+  7291 03                                                      db 0x03
0078+  7292 07                                                      db 0x07
0079+  7293 04                                                      db 0x04
0080+  7294 0A                                                      db 0x0A
0081+  7295 05                                                      db 0x05
0082+  7296 07                                                      db 0x07
0083+  7297 FF                                                      db 0xFF
0084+  7298 01          ROOM_10_NAV:                               db 0x01
0085+  7299 07                                                      db 0x07
0086+  729A 02                                                      db 0x02
0087+  729B 02                                                      db 0x02
0088+  729C 03                                                      db 0x03
0089+  729D 07                                                      db 0x07
0090+  729E 04                                                      db 0x04
0091+  729F 07                                                      db 0x07
0092+  72A0 05                                                      db 0x05
0093+  72A1 0B                                                      db 0x0B
0094+  72A2 FF                                                      db 0xFF
0095+  72A3 04          ROOM_11_NAV:                               db 0x04
0096+  72A4 07                                                      db 0x07
0097+  72A5 FF                                                      db 0xFF
0098+  72A6 03          ROOM_12_NAV:                               db 0x03
0099+  72A7 0F                                                      db 0x0F
0100+  72A8 04                                                      db 0x04
0101+  72A9 0D                                                      db 0x0D
0102+  72AA 05                                                      db 0x05
0103+  72AB 13                                                      db 0x13
0104+  72AC FF                                                      db 0xFF
0105+  72AD FF          ROOM_13_NAV:                               db 0xFF
0106+  72AE 05          ROOM_14_NAV:                               db 0x05
0107+  72AF 0D                                                      db 0x0D
0108+  72B0 FF                                                      db 0xFF
0109+  72B1 04          ROOM_15_NAV:                               db 0x04
0110+  72B2 13                                                      db 0x13
0111+  72B3 05                                                      db 0x05
0112+  72B4 13                                                      db 0x13
0113+  72B5 FF                                                      db 0xFF
0114+  72B6 02          ROOM_16_NAV:                               db 0x02
0115+  72B7 0F                                                      db 0x0F
0116+  72B8 03                                                      db 0x03
0117+  72B9 13                                                      db 0x13
0118+  72BA 04                                                      db 0x04
0119+  72BB 11                                                      db 0x11
0120+  72BC FF                                                      db 0xFF
0121+  72BD 05          ROOM_17_NAV:                               db 0x05
0122+  72BE 10                                                      db 0x10
0123+  72BF FF                                                      db 0xFF
0124+  72C0 04          ROOM_18_NAV:                               db 0x04
0125+  72C1 10                                                      db 0x10
0126+  72C2 FF                                                      db 0xFF
0127+  72C3 FF          ROOM_19_NAV:                               db 0xFF
1032   72C4             ACTION_TABLE:                                include actions.asm
0001+  72C4 0D                                                      db COMMAND_GET
0002+  72C5 10                                                      db COMMAND_BOOT
0003+  72C6 B4 75                                                   dw VALID_BOOT_AVAILABLE 
0004+  72C8 73 76                                                   dw ACTION_GET_BOOT
0005+  72CA             
0006+  72CA 0D                                                      db COMMAND_GET
0007+  72CB 11                                                      db COMMAND_STAR
0008+  72CC B7 75                                                   dw VALID_STAR_AVAILABLE 
0009+  72CE 76 76                                                   dw ACTION_GET_STAR
0010+  72D0             
0011+  72D0 0D                                                      db COMMAND_GET
0012+  72D1 12                                                      db COMMAND_KEY
0013+  72D2 BA 75                                                   dw VALID_KEY_AVAILABLE 
0014+  72D4 79 76                                                   dw ACTION_GET_KEY
0015+  72D6             
0016+  72D6 0D                                                      db COMMAND_GET
0017+  72D7 13                                                      db COMMAND_GUN
0018+  72D8 BD 75                                                   dw VALID_GUN_AVAILABLE 
0019+  72DA 7C 76                                                   dw ACTION_GET_GUN
0020+  72DC             
0021+  72DC 0D                                                      db COMMAND_GET
0022+  72DD 15                                                      db COMMAND_BAR
0023+  72DE C0 75                                                   dw VALID_BAR_AVAILABLE 
0024+  72E0 7F 76                                                   dw ACTION_GET_BAR
0025+  72E2             
0026+  72E2 0D                                                      db COMMAND_GET
0027+  72E3 16                                                      db COMMAND_COIN
0028+  72E4 C3 75                                                   dw VALID_COIN_AVAILABLE 
0029+  72E6 82 76                                                   dw ACTION_GET_COIN
0030+  72E8             
0031+  72E8 0D                                                      db COMMAND_GET
0032+  72E9 17                                                      db COMMAND_MIRR
0033+  72EA C6 75                                                   dw VALID_MIRROR_IN_HANGAR 
0034+  72EC 85 76                                                   dw ACTION_GET_MIRR
0035+  72EE             
0036+  72EE 0D                                                      db COMMAND_GET
0037+  72EF 17                                                      db COMMAND_MIRR
0038+  72F0 CB 75                                                   dw VALID_BROKEN_GLASS_AVAILABLE 
0039+  72F2 23 77                                                   dw ACTION_GET_BROKEN_GLASS
0040+  72F4             
0041+  72F4 0D                                                      db COMMAND_GET
0042+  72F5 18                                                      db COMMAND_BROK
0043+  72F6 CB 75                                                   dw VALID_BROKEN_GLASS_AVAILABLE 
0044+  72F8 88 76                                                   dw ACTION_GET_BROKEN_GLASS_CLONE
0045+  72FA             
0046+  72FA 0D                                                      db COMMAND_GET
0047+  72FB 19                                                      db COMMAND_GLOV
0048+  72FC CE 75                                                   dw VALID_GLOV_AVAILABLE 
0049+  72FE 8B 76                                                   dw ACTION_GET_GLOV
0050+  7300             
0051+  7300 0D                                                      db COMMAND_GET
0052+  7301 1A                                                      db COMMAND_ROPE
0053+  7302 D1 75                                                   dw VALID_ROPE_AVAILABLE 
0054+  7304 8E 76                                                   dw ACTION_GET_ROPE
0055+  7306             
0056+  7306 0D                                                      db COMMAND_GET
0057+  7307 1B                                                      db COMMAND_FLOO
0058+  7308 D4 75                                                   dw VALID_FLOO_AVAILABLE 
0059+  730A 91 76                                                   dw ACTION_GET_FLOO
0060+  730C             
0061+  730C 0D                                                      db COMMAND_GET
0062+  730D 1B                                                      db COMMAND_FLOO
0063+  730E D7 75                                                   dw VALID_BROKEN_FLOO_AVAILABLE 
0064+  7310 94 76                                                   dw ACTION_GET_BROK
0065+  7312             
0066+  7312 0D                                                      db COMMAND_GET
0067+  7313 18                                                      db COMMAND_BROK
0068+  7314 D7 75                                                   dw VALID_BROKEN_FLOO_AVAILABLE 
0069+  7316 94 76                                                   dw ACTION_GET_BROK
0070+  7318             
0071+  7318 0D                                                      db COMMAND_GET
0072+  7319 1C                                                      db COMMAND_STAL
0073+  731A DA 75                                                   dw VALID_STAL_AVAILABLE 
0074+  731C 97 76                                                   dw ACTION_GET_STAL
0075+  731E             
0076+  731E 0D                                                      db COMMAND_GET
0077+  731F 1D                                                      db COMMAND_ICE
0078+  7320 DD 75                                                   dw VALID_ICE_AVAILABLE 
0079+  7322 9A 76                                                   dw ACTION_GET_ICE
0080+  7324             
0081+  7324 0D                                                      db COMMAND_GET
0082+  7325 25                                                      db COMMAND_FLIN
0083+  7326 E0 75                                                   dw VALID_FLIN_AVAILABLE 
0084+  7328 A0 76                                                   dw ACTION_GET_FLIN
0085+  732A             
0086+  732A 0D                                                      db COMMAND_GET
0087+  732B 26                                                      db COMMAND_STON
0088+  732C E3 75                                                   dw VALID_STON_AVAILABLE 
0089+  732E A3 76                                                   dw ACTION_GET_STON
0090+  7330             
0091+  7330 29                                                      db COMMAND_INVE
0092+  7331 FF                                                      db COMMAND_ANY
0093+  7332 B3 75                                                   dw VALID_NONE 
0094+  7334 A6 76                                                   dw ACTION_INVENTORY
0095+  7336             
0096+  7336 2A                                                      db COMMAND_STOP
0097+  7337 FF                                                      db COMMAND_ANY
0098+  7338 B3 75                                                   dw VALID_NONE 
0099+  733A A8 76                                                   dw ACTION_STOP
0100+  733C             
0101+  733C 0E                                                      db COMMAND_PUT
0102+  733D 10                                                      db COMMAND_BOOT
0103+  733E B4 75                                                   dw VALID_BOOT_AVAILABLE 
0104+  7340 A9 76                                                   dw ACTION_PUT_BOOT
0105+  7342             
0106+  7342 0E                                                      db COMMAND_PUT
0107+  7343 11                                                      db COMMAND_STAR
0108+  7344 B7 75                                                   dw VALID_STAR_AVAILABLE 
0109+  7346 AC 76                                                   dw ACTION_PUT_STAR
0110+  7348             
0111+  7348 0E                                                      db COMMAND_PUT
0112+  7349 12                                                      db COMMAND_KEY
0113+  734A BA 75                                                   dw VALID_KEY_AVAILABLE 
0114+  734C AF 76                                                   dw ACTION_PUT_KEY
0115+  734E             
0116+  734E 0E                                                      db COMMAND_PUT
0117+  734F 13                                                      db COMMAND_GUN
0118+  7350 BD 75                                                   dw VALID_GUN_AVAILABLE 
0119+  7352 B2 76                                                   dw ACTION_PUT_GUN
0120+  7354             
0121+  7354 0E                                                      db COMMAND_PUT
0122+  7355 15                                                      db COMMAND_BAR
0123+  7356 C0 75                                                   dw VALID_BAR_AVAILABLE 
0124+  7358 B5 76                                                   dw ACTION_PUT_BAR
0125+  735A             
0126+  735A 0E                                                      db COMMAND_PUT
0127+  735B 16                                                      db COMMAND_COIN
0128+  735C C3 75                                                   dw VALID_COIN_AVAILABLE 
0129+  735E B8 76                                                   dw ACTION_PUT_COIN
0130+  7360             
0131+  7360 0E                                                      db COMMAND_PUT
0132+  7361 17                                                      db COMMAND_MIRR
0133+  7362 E6 75                                                   dw VALID_MIRROR_AVAILABLE 
0134+  7364 BB 76                                                   dw ACTION_PUT_MIRR
0135+  7366             
0136+  7366 0E                                                      db COMMAND_PUT
0137+  7367 17                                                      db COMMAND_MIRR
0138+  7368 CB 75                                                   dw VALID_BROKEN_GLASS_AVAILABLE 
0139+  736A BE 76                                                   dw ACTION_PUT_BROKEN_GLASS
0140+  736C             
0141+  736C 0E                                                      db COMMAND_PUT
0142+  736D 18                                                      db COMMAND_BROK
0143+  736E CB 75                                                   dw VALID_BROKEN_GLASS_AVAILABLE 
0144+  7370 BE 76                                                   dw ACTION_PUT_BROKEN_GLASS
0145+  7372             
0146+  7372 0E                                                      db COMMAND_PUT
0147+  7373 19                                                      db COMMAND_GLOV
0148+  7374 CE 75                                                   dw VALID_GLOV_AVAILABLE 
0149+  7376 C1 76                                                   dw ACTION_PUT_GLOV
0150+  7378             
0151+  7378 0E                                                      db COMMAND_PUT
0152+  7379 1A                                                      db COMMAND_ROPE
0153+  737A D1 75                                                   dw VALID_ROPE_AVAILABLE 
0154+  737C C4 76                                                   dw ACTION_PUT_ROPE
0155+  737E             
0156+  737E 0E                                                      db COMMAND_PUT
0157+  737F 1B                                                      db COMMAND_FLOO
0158+  7380 D4 75                                                   dw VALID_FLOO_AVAILABLE 
0159+  7382 C7 76                                                   dw ACTION_PUT_FLOO
0160+  7384             
0161+  7384 0E                                                      db COMMAND_PUT
0162+  7385 1B                                                      db COMMAND_FLOO
0163+  7386 D7 75                                                   dw VALID_BROKEN_FLOO_AVAILABLE 
0164+  7388 CA 76                                                   dw ACTION_PUT_BROKEN_FLOO
0165+  738A             
0166+  738A 0F                                                      db COMMAND_FIRE
0167+  738B 18                                                      db COMMAND_BROK
0168+  738C D7 75                                                   dw VALID_BROKEN_FLOO_AVAILABLE 
0169+  738E CA 76                                                   dw ACTION_PUT_BROKEN_FLOO
0170+  7390             
0171+  7390 0E                                                      db COMMAND_PUT
0172+  7391 1C                                                      db COMMAND_STAL
0173+  7392 DA 75                                                   dw VALID_STAL_AVAILABLE 
0174+  7394 CD 76                                                   dw ACTION_PUT_STAL
0175+  7396             
0176+  7396 0E                                                      db COMMAND_PUT
0177+  7397 1D                                                      db COMMAND_ICE
0178+  7398 DD 75                                                   dw VALID_ICE_AVAILABLE 
0179+  739A D0 76                                                   dw ACTION_PUT_ICE
0180+  739C             
0181+  739C 0E                                                      db COMMAND_PUT
0182+  739D 25                                                      db COMMAND_FLIN
0183+  739E E0 75                                                   dw VALID_FLIN_AVAILABLE 
0184+  73A0 D3 76                                                   dw ACTION_PUT_FLIN
0185+  73A2             
0186+  73A2 0E                                                      db COMMAND_PUT
0187+  73A3 26                                                      db COMMAND_STON
0188+  73A4 E3 75                                                   dw VALID_STON_AVAILABLE 
0189+  73A6 D6 76                                                   dw ACTION_PUT_STON
0190+  73A8             
0191+  73A8 3D                                                      db COMMAND_LOOK
0192+  73A9 27                                                      db COMMAND_DRAW
0193+  73AA E9 75                                                   dw VALID_IS_CAVE
0194+  73AC D9 76                                                   dw ACTION_LOOK_DRAW
0195+  73AE             
0196+  73AE 34                                                      db COMMAND_HIT
0197+  73AF 1C                                                      db COMMAND_STAL
0198+  73B0 E9 75                                                   dw VALID_IS_CAVE
0199+  73B2 DC 76                                                   dw ACTION_HIT_STAL
0200+  73B4             
0201+  73B4 36                                                      db COMMAND_USE
0202+  73B5 1D                                                      db COMMAND_ICE
0203+  73B6 EC 75                                                   dw VALID_USE_ICE
0204+  73B8 DF 76                                                   dw ACTION_USE_ICE
0205+  73BA             
0206+  73BA 40                                                      db COMMAND_CUT
0207+  73BB 1A                                                      db COMMAND_ROPE
0208+  73BC F1 75                                                   dw VALID_CUT_ROPE
0209+  73BE E4 76                                                   dw ACTION_CUT_ROPE
0210+  73C0             
0211+  73C0 36                                                      db COMMAND_USE
0212+  73C1 25                                                      db COMMAND_FLIN
0213+  73C2 F4 75                                                   dw VALID_USE_FLINT
0214+  73C4 E7 76                                                   dw ACTION_USE_FLINT
0215+  73C6             
0216+  73C6 41                                                      db COMMAND_WEAR
0217+  73C7 10                                                      db COMMAND_BOOT
0218+  73C8 B3 75                                                   dw VALID_NONE 
0219+  73CA EC 76                                                   dw ACTIO_WEAR_BOOT 
0220+  73CC             
0221+  73CC 33                                                      db COMMAND_REMO
0222+  73CD 10                                                      db COMMAND_BOOT
0223+  73CE B3 75                                                   dw VALID_NONE 
0224+  73D0 EF 76                                                   dw ACTION_REMOVE_BOOT
0225+  73D2             
0226+  73D2 42                                                      db COMMAND_CROS
0227+  73D3 44                                                      db COMMAND_RAVI
0228+  73D4 F9 75                                                   dw VALID_IS_LAKE
0229+  73D6 F2 76                                                   dw ACTION_DEATH
0230+  73D8             
0231+  73D8 42                                                      db COMMAND_CROS
0232+  73D9 44                                                      db COMMAND_RAVI
0233+  73DA FC 75                                                   dw VALID_IS_SHAD
0234+  73DC F2 76                                                   dw ACTION_DEATH 
0235+  73DE             
0236+  73DE 36                                                      db COMMAND_USE
0237+  73DF 1B                                                      db COMMAND_FLOO
0238+  73E0 FF 75                                                   dw VALID_IS_LAKE_WITH_FLOOR
0239+  73E2 F5 76                                                   dw ACTION_USE_FLOO_IN_LAKE
0240+  73E4             
0241+  73E4 36                                                      db COMMAND_USE
0242+  73E5 1B                                                      db COMMAND_FLOO
0243+  73E6 04 76                                                   dw VALID_IS_SHAD_WITH_FLOOR
0244+  73E8 F8 76                                                   dw ACTION_USE_FLOO_IN_SHED 
0245+  73EA             
0246+  73EA 43                                                      db COMMAND_JUMP
0247+  73EB 44                                                      db COMMAND_RAVI
0248+  73EC FF 75                                                   dw VALID_IS_LAKE_WITH_FLOOR
0249+  73EE FF 76                                                   dw ACTION_DIE_BY_FALL 
0250+  73F0             
0251+  73F0 43                                                      db COMMAND_JUMP
0252+  73F1 44                                                      db COMMAND_RAVI
0253+  73F2 FC 75                                                   dw VALID_IS_SHAD
0254+  73F4 FF 76                                                   dw ACTION_DIE_BY_FALL
0255+  73F6             
0256+  73F6 01                                                      db COMMAND_DOWN
0257+  73F7 FF                                                      db COMMAND_ANY
0258+  73F8 09 76                                                   dw VALID_IS_ICE_CAVERN
0259+  73FA F2 76                                                   dw ACTION_DEATH
0260+  73FC             
0261+  73FC 36                                                      db COMMAND_USE
0262+  73FD 1D                                                      db COMMAND_ICE
0263+  73FE 0C 76                                                   dw VALID_IS_ICE_CAVERN_WITH_ICE_BLOCK
0264+  7400 02 77                                                   dw ACTION_USE_ICE_IN_CAVERN 
0265+  7402             
0266+  7402 0D                                                      db COMMAND_GET
0267+  7403 1F                                                      db COMMAND_MAN
0268+  7404 11 76                                                   dw VALID_IS_MAN_AND_WEARED_GLOVES 
0269+  7406 0C 77                                                   dw ACTION_GET_SLIME_MEN
0270+  7408             
0271+  7408 0D                                                      db COMMAND_GET
0272+  7409 1F                                                      db COMMAND_MAN
0273+  740A 18 76                                                   dw VALID_IS_MAN_AND_GLOVES 
0274+  740C 18 77                                                   dw ACTION_GET_MEN
0275+  740E             
0276+  740E 0D                                                      db COMMAND_GET
0277+  740F 1F                                                      db COMMAND_MAN
0278+  7410 1D 76                                                   dw VALID_IS_MAN_ONLY 
0279+  7412 0C 77                                                   dw ACTION_GET_SLIME_MEN
0280+  7414             
0281+  7414 0E                                                      db COMMAND_PUT
0282+  7415 1F                                                      db COMMAND_MAN
0283+  7416 20 76                                                   dw VALID_IS_MAN_AVAILABLE 
0284+  7418 1D 77                                                   dw ACTION_PUT_MAN
0285+  741A             
0286+  741A 0D                                                      db COMMAND_GET
0287+  741B 17                                                      db COMMAND_MIRR
0288+  741C 23 76                                                   dw VALID_IS_MIRR_WITH_MAN 
0289+  741E 20 77                                                   dw ACTION_GET_MIRR_WITH_MAN
0290+  7420             
0291+  7420 0D                                                      db COMMAND_GET
0292+  7421 18                                                      db COMMAND_BROK
0293+  7422 CB 75                                                   dw VALID_BROKEN_GLASS_AVAILABLE 
0294+  7424 88 76                                                   dw ACTION_GET_BROKEN_GLASS_CLONE
0295+  7426             
0296+  7426 0E                                                      db COMMAND_PUT
0297+  7427 17                                                      db COMMAND_MIRR
0298+  7428 E6 75                                                   dw VALID_MIRROR_AVAILABLE 
0299+  742A 26 77                                                   dw ACTION_DROP_MIRR
0300+  742C             
0301+  742C 0E                                                      db COMMAND_PUT
0302+  742D 18                                                      db COMMAND_BROK
0303+  742E CB 75                                                   dw VALID_BROKEN_GLASS_AVAILABLE 
0304+  7430 29 77                                                   dw ACTION_DROP_BROKEN_GLASS
0305+  7432             
0306+  7432 31                                                      db COMMAND_KILL
0307+  7433 1F                                                      db COMMAND_MAN
0308+  7434 28 76                                                   dw VALID_IS_MAN_AVAILABLE_TO_KILL 
0309+  7436 2C 77                                                   dw ACTION_ASK_HOW
0310+  7438             
0311+  7438 31                                                      db COMMAND_KILL
0312+  7439 1F                                                      db COMMAND_MAN
0313+  743A 20 76                                                   dw VALID_IS_MAN_AVAILABLE 
0314+  743C 2C 77                                                   dw ACTION_ASK_HOW
0315+  743E             
0316+  743E 36                                                      db COMMAND_USE
0317+  743F 13                                                      db COMMAND_GUN
0318+  7440 2B 76                                                   dw VALID_IS_MAN_AND_GUN_AVAILABLE 
0319+  7442 2F 77                                                   dw ACTION_KILL_MAN_MIRROR_BROKEN
0320+  7444             
0321+  7444 36                                                      db COMMAND_USE
0322+  7445 13                                                      db COMMAND_GUN
0323+  7446 30 76                                                   dw VALID_IS_GUN_AVAIL_MAN_POCKETED 
0324+  7448 38 77                                                   dw ACTION_ASK_WHAT_AT
0325+  744A             
0326+  744A 36                                                      db COMMAND_USE
0327+  744B 13                                                      db COMMAND_GUN
0328+  744C 37 76                                                   dw VALID_IS_SLEEPING_MAN_AND_GUN_AVAILABLE 
0329+  744E 3B 77                                                   dw ACTION_JUST_KILL_MAN
0330+  7450             
0331+  7450 2E                                                      db COMMAND_TYPE
0332+  7451 28                                                      db COMMAND_HELP
0333+  7452 3C 76                                                   dw VALID_IS_COMPUTER_ROOM
0334+  7454 40 77                                                   dw ACTION_TYPE_HELP 
0335+  7456             
0336+  7456 0F                                                      db COMMAND_FIRE
0337+  7457 13                                                      db COMMAND_GUN
0338+  7458 3F 76                                                   dw VALID_IS_PASSAGE
0339+  745A 38 77                                                   dw ACTION_ASK_WHAT_AT
0340+  745C             
0341+  745C 4A                                                      db COMMAND_FIEL
0342+  745D FF                                                      db COMMAND_ANY
0343+  745E 42 76                                                   dw VALID_IS_PASSAGE_AND_GUN_AND_7
0344+  7460 43 77                                                   dw ACTION_SHIELD_WEAKENED_0
0345+  7462             
0346+  7462 4A                                                      db COMMAND_FIEL
0347+  7463 FF                                                      db COMMAND_ANY
0348+  7464 49 76                                                   dw VALID_IS_PASSAGE_AND_GUN_AND_7_AND_8 
0349+  7466 48 77                                                   dw ACTION_SHIELD_WEAKENED_1
0350+  7468             
0351+  7468 4A                                                      db COMMAND_FIEL
0352+  7469 FF                                                      db COMMAND_ANY
0353+  746A 52 76                                                   dw VALID_IS_PASSAGE_AND_GUN_AND_8 
0354+  746C 4D 77                                                   dw ACTION_NO_EFFECT 
0355+  746E             
0356+  746E 32                                                      db COMMAND_DANC
0357+  746F FF                                                      db COMMAND_ANY
0358+  7470 59 76                                                   dw VALID_IS_PASSAGE_AND_MIRR_AND_8
0359+  7472 50 77                                                   dw ACTION_ENTER_HANGAR
0360+  7474             
0361+  7474 32                                                      db COMMAND_DANC
0362+  7475 FF                                                      db COMMAND_ANY
0363+  7476 60 76                                                   dw VALID_IS_PASSAGE_ONLY
0364+  7478 56 77                                                   dw ACTION_ENTER_PRISON
0365+  747A             
0366+  747A 21                                                      db COMMAND_OPEN
0367+  747B 20                                                      db COMMAND_DOOR
0368+  747C 63 76                                                   dw VALID_IS_HANGER
0369+  747E 2C 77                                                   dw ACTION_ASK_HOW
0370+  7480             
0371+  7480 36                                                      db COMMAND_USE
0372+  7481 12                                                      db COMMAND_KEY
0373+  7482 66 76                                                   dw VALID_IS_HANGER_AND_KEY
0374+  7484 5B 77                                                   dw ACTION_ENTER_LIFT_CONTROL_ROOM 
0375+  7486             
0376+  7486 31                                                      db COMMAND_KILL
0377+  7487 24                                                      db COMMAND_SECU
0378+  7488 6B 76                                                   dw VALID_IS_HANGER_AND_GUN
0379+  748A 5E 77                                                   dw ACTION_KILL_SECU 
0380+  748C             
0381+  748C 3D                                                      db COMMAND_LOOK
0382+  748D 45                                                      db COMMAND_UP
0383+  748E 70 76                                                   dw VALID_IS_PRISON_CELL
0384+  7490 61 77                                                   dw ACTION_LOOK_UP 
0385+  7492             
0386+  7492 34                                                      db COMMAND_HIT
0387+  7493 15                                                      db COMMAND_BAR
0388+  7494 70 76                                                   dw VALID_IS_PRISON_CELL
0389+  7496 64 77                                                   dw ACTION_HIT_BAR
0390+  7498             
0391+  7498 45                                                      db COMMAND_UP
0392+  7499 FF                                                      db COMMAND_ANY
0393+  749A 69 77                                                   dw VALID_IS_PRISON_CELL_AND_HOLE
0394+  749C 0C 78                                                   dw ACTION_UP_IN_PRISON
0395+  749E             
0396+  749E 35                                                      db COMMAND_BRIB
0397+  749F 24                                                      db COMMAND_SECU
0398+  74A0 6E 77                                                   dw VALID_IS_PRISON_CELL_FOR_BRIBE
0399+  74A2 11 78                                                   dw ACTION_BRIB_SECU
0400+  74A4                                                         
0401+  74A4 36                                                      db COMMAND_USE
0402+  74A5 16                                                      db COMMAND_COIN
0403+  74A6 71 77                                                   dw VALID_IS_PRISON_AND_COIN
0404+  74A8 14 78                                                   dw ACTION_USE_COIN
0405+  74AA             
0406+  74AA 20                                                      db COMMAND_DOOR
0407+  74AB FF                                                      db COMMAND_ANY
0408+  74AC 76 77                                                   dw VALID_IS_PRISON_AND_OPEN_DOOR
0409+  74AE 19 78                                                   dw ACTION_DOOR
0410+  74B0             
0411+  74B0 3D                                                      db COMMAND_LOOK
0412+  74B1 1E                                                      db COMMAND_WATE
0413+  74B2 7B 77                                                   dw VALID_IS_LAKE_AND_COIN
0414+  74B4 1E 78                                                   dw ACTION_LOOK_WATE 
0415+  74B6             
0416+  74B6 0D                                                      db COMMAND_GET
0417+  74B7 16                                                      db COMMAND_COIN
0418+  74B8 7B 77                                                   dw VALID_IS_LAKE_AND_COIN
0419+  74BA 21 78                                                   dw ACTION_CANT_REACH
0420+  74BC             
0421+  74BC 1E                                                      db COMMAND_WATE
0422+  74BD FF                                                      db COMMAND_ANY
0423+  74BE 80 77                                                   dw VALID_IS_LAKE_AND_BOOT_WEARED
0424+  74C0 27 78                                                   dw ACTION_WATER_WITH_WEARED_BOOT
0425+  74C2             
0426+  74C2 1E                                                      db COMMAND_WATE
0427+  74C3 FF                                                      db COMMAND_ANY
0428+  74C4 89 77                                                   dw VALID_IS_LAKE_AND_BOOT_NOT_WEARED
0429+  74C6 24 78                                                   dw ACTION_WATER_WITHOUT_WEARED_BOOT 
0430+  74C8             
0431+  74C8 1E                                                      db COMMAND_WATE
0432+  74C9 FF                                                      db COMMAND_ANY
0433+  74CA 7B 77                                                   dw VALID_IS_LAKE_AND_COIN
0434+  74CC 2C 78                                                   dw ACTION_WATER_TOO_COLD
0435+  74CE                                                         
0436+  74CE 21                                                      db COMMAND_OPEN
0437+  74CF 20                                                      db COMMAND_DOOR
0438+  74D0 90 77                                                   dw VALID_IS_WIND_TUNNEL
0439+  74D2 2F 78                                                   dw ACTION_NAV_TO_COMP_ROOM
0440+  74D4                                                         
0441+  74D4 37                                                      db COMMAND_PUSH
0442+  74D5 38                                                      db COMMAND_3
0443+  74D6 93 77                                                   dw VALID_IS_LIFT_CONTROL_AND_9_A
0444+  74D8 32 78                                                   dw ACTION_PUSH_3_FIRST
0445+  74DA                                                         
0446+  74DA 37                                                      db COMMAND_PUSH
0447+  74DB 38                                                      db COMMAND_3
0448+  74DC 9A 77                                                   dw VALID_IS_LIFT_CONTROL_AND_A
0449+  74DE 36 78                                                   dw ACTION_FUSE_BLOWN 
0450+  74E0             
0451+  74E0 37                                                      db COMMAND_PUSH
0452+  74E1 39                                                      db COMMAND_2
0453+  74E2 9F 77                                                   dw VALID_IS_LIFT_CONTROL_AND_A_9_1
0454+  74E4 3D 78                                                   dw ACTION_PUSH_2_FIRST
0455+  74E6             
0456+  74E6 37                                                      db COMMAND_PUSH
0457+  74E7 39                                                      db COMMAND_2
0458+  74E8 9A 77                                                   dw VALID_IS_LIFT_CONTROL_AND_A
0459+  74EA 36 78                                                   dw ACTION_FUSE_BLOWN
0460+  74EC                                                         
0461+  74EC 37                                                      db COMMAND_PUSH
0462+  74ED 3A                                                      db COMMAND_1
0463+  74EE A7 77                                                   dw VALID_IS_LIFT_CONTROL_AND_A_9_2
0464+  74F0 41 78                                                   dw ACTION_LIFT_ACTIVATE 
0465+  74F2             
0466+  74F2 37                                                      db COMMAND_PUSH
0467+  74F3 3A                                                      db COMMAND_1
0468+  74F4 9A 77                                                   dw VALID_IS_LIFT_CONTROL_AND_A
0469+  74F6 36 78                                                   dw ACTION_FUSE_BLOWN 
0470+  74F8             
0471+  74F8 3B                                                      db COMMAND_FIX
0472+  74F9 46                                                      db COMMAND_FUSE
0473+  74FA AF 77                                                   dw VALID_IS_LIFT_CONTROL_AND_A_FIX
0474+  74FC 47 78                                                   dw ACTION_SHOW_WHAT_WITH 
0475+  74FE             
0476+  74FE 36                                                      db COMMAND_USE
0477+  74FF 15                                                      db COMMAND_BAR
0478+  7500 B4 77                                                   dw VALID_IS_LIFT_CONTROL_AND_A_BAR
0479+  7502 4A 78                                                   dw ACTION_USE_BAR 
0480+  7504             
0481+  7504 3D                                                      db COMMAND_LOOK
0482+  7505 FF                                                      db COMMAND_ANY
0483+  7506 BB 77                                                   dw VALID_IS_ICE_CAVERN_LOOK
0484+  7508 4F 78                                                   dw ACTION_LOOK_IN_CAVERN 
0485+  750A             
0486+  750A 28                                                      db COMMAND_HELP
0487+  750B FF                                                      db COMMAND_ANY
0488+  750C BE 77                                                   dw VALID_IS_LIFT_FOR_HELP
0489+  750E 52 78                                                   dw ACTION_HELP_ABOUT_KEEP_OFF 
0490+  7510             
0491+  7510 28                                                      db COMMAND_HELP
0492+  7511 FF                                                      db COMMAND_ANY
0493+  7512 C1 77                                                   dw VALID_IS_PASSAGE_FOR_HELP
0494+  7514 55 78                                                   dw ACTION_HELP_ABOUT_VANITY_WALTZ 
0495+  7516             
0496+  7516 28                                                      db COMMAND_HELP
0497+  7517 FF                                                      db COMMAND_ANY
0498+  7518 C4 77                                                   dw VALID_IS_COMP_ROOM_FOR_HELP
0499+  751A 58 78                                                   dw ACTION_HELP_TRY_HELP 
0500+  751C             
0501+  751C 28                                                      db COMMAND_HELP
0502+  751D FF                                                      db COMMAND_ANY
0503+  751E C7 77                                                   dw VALID_IS_MAZE1_FOR_HELP
0504+  7520 5B 78                                                   dw ACTION_HELP_ABOUT_COMPASS 
0505+  7522             
0506+  7522 28                                                      db COMMAND_HELP
0507+  7523 FF                                                      db COMMAND_ANY
0508+  7524 CA 77                                                   dw VALID_IS_MAZE2_FOR_HELP
0509+  7526 5B 78                                                   dw ACTION_HELP_ABOUT_COMPASS 
0510+  7528             
0511+  7528 28                                                      db COMMAND_HELP
0512+  7529 FF                                                      db COMMAND_ANY
0513+  752A CD 77                                                   dw VALID_IS_MAZE3_FOR_HELP
0514+  752C 5B 78                                                   dw ACTION_HELP_ABOUT_COMPASS 
0515+  752E             
0516+  752E 28                                                      db COMMAND_HELP
0517+  752F FF                                                      db COMMAND_ANY
0518+  7530 D0 77                                                   dw VALID_IS_MAZE4_FOR_HELP
0519+  7532 5B 78                                                   dw ACTION_HELP_ABOUT_COMPASS 
0520+  7534             
0521+  7534 28                                                      db COMMAND_HELP
0522+  7535 FF                                                      db COMMAND_ANY
0523+  7536 D3 77                                                   dw VALID_IS_SPACESHIP_AND_C
0524+  7538 52 78                                                   dw ACTION_HELP_ABOUT_KEEP_OFF 
0525+  753A             
0526+  753A 3D                                                      db COMMAND_LOOK
0527+  753B 45                                                      db COMMAND_UP
0528+  753C D8 77                                                   dw VALID_IS_QUIET_CAVERN_AND_B 
0529+  753E 5E 78                                                   dw ACTION_MSG_I_SEE_ROPE
0530+  7540             
0531+  7540 05                                                      db COMMAND_WEST
0532+  7541 FF                                                      db COMMAND_ANY
0533+  7542 DD 77                                                   dw VALID_IS_TUNNEL_FOR_WEST
0534+  7544 61 78                                                   dw ACTION_NAV_CAVERN_AND_2_SET 
0535+  7546             
0536+  7546 02                                                      db COMMAND_NORT
0537+  7547 FF                                                      db COMMAND_ANY
0538+  7548 C1 77                                                   dw VALID_IS_PASSAGE_FOR_HELP
0539+  754A 61 78                                                   dw ACTION_NAV_CAVERN_AND_2_SET 
0540+  754C             
0541+  754C 41                                                      db COMMAND_WEAR
0542+  754D 19                                                      db COMMAND_GLOV
0543+  754E B3 75                                                   dw VALID_NONE 
0544+  7550 67 78                                                   dw ACTION_WEAR_GLOV
0545+  7552                                                         
0546+  7552 33                                                      db COMMAND_REMO
0547+  7553 19                                                      db COMMAND_GLOV
0548+  7554 B3 75                                                   dw VALID_NONE 
0549+  7556 6A 78                                                   dw ACTION_REMO_GLOV
0550+  7558             
0551+  7558 47                                                      db COMMAND_REDE
0552+  7559 FF                                                      db COMMAND_ANY
0553+  755A B3 75                                                   dw VALID_NONE 
0554+  755C 6D 78                                                   dw ACTION_REDESCRIBE 
0555+  755E             
0556+  755E 01                                                      db COMMAND_DOWN
0557+  755F FF                                                      db COMMAND_ANY
0558+  7560 E0 77                                                   dw VALID_IS_EDGE_OF_PIT
0559+  7562 6E 78                                                   dw ACTION_ASK_HOW_DOWN 
0560+  7564             
0561+  7564 36                                                      db COMMAND_USE
0562+  7565 1A                                                      db COMMAND_ROPE
0563+  7566 E3 77                                                   dw VALID_IS_PIT_AND_ROPE
0564+  7568 71 78                                                   dw ACTION_USE_ROPE
0565+  756A             
0566+  756A 43                                                      db COMMAND_JUMP
0567+  756B FF                                                      db COMMAND_ANY
0568+  756C E0 77                                                   dw VALID_IS_EDGE_OF_PIT
0569+  756E 78 78                                                   dw ACTION_SHOW_ITS_TOO_DEEP 
0570+  7570             
0571+  7570 45                                                      db COMMAND_UP
0572+  7571 1A                                                      db COMMAND_ROPE
0573+  7572 E8 77                                                   dw VALID_IS_CAVERN_AND_B
0574+  7574 7B 78                                                   dw ACTION_NAV_TO_PIT 
0575+  7576             
0576+  7576 23                                                      db COMMAND_SHIP
0577+  7577 FF                                                      db COMMAND_ANY
0578+  7578 ED 77                                                   dw VALID_IS_SHIP_AVAILABLE 
0579+  757A 7E 78                                                   dw ACTION_NAV_TO_SHIP
0580+  757C             
0581+  757C 37                                                      db COMMAND_PUSH
0582+  757D 48                                                      db COMMAND_MAIN
0583+  757E F0 77                                                   dw VALID_IS_SHIP_AND_STARTER
0584+  7580 81 78                                                   dw ACTION_SHIP_BLOW_UP 
0585+  7582             
0586+  7582 37                                                      db COMMAND_PUSH
0587+  7583 49                                                      db COMMAND_AUX
0588+  7584 F0 77                                                   dw VALID_IS_SHIP_AND_STARTER
0589+  7586 84 78                                                   dw ACTION_SHIP_NAV_TO_LIFT
0590+  7588             
0591+  7588 37                                                      db COMMAND_PUSH
0592+  7589 38                                                      db COMMAND_3
0593+  758A F5 77                                                   dw VALID_IS_SPACE_SHIP_AND_C
0594+  758C 89 78                                                   dw ACTION_KILL_BY_GUARD_ALARMED 
0595+  758E             
0596+  758E 37                                                      db COMMAND_PUSH
0597+  758F 39                                                      db COMMAND_2
0598+  7590 F5 77                                                   dw VALID_IS_SPACE_SHIP_AND_C
0599+  7592 89 78                                                   dw ACTION_KILL_BY_GUARD_ALARMED 
0600+  7594             
0601+  7594 37                                                      db COMMAND_PUSH
0602+  7595 3C                                                      db COMMAND_4
0603+  7596 FA 77                                                   dw VALID_IS_SPACE_SHIP_AND_C_AND_9_3
0604+  7598 8C 78                                                   dw ACTION_GAME_WIN 
0605+  759A             
0606+  759A 37                                                      db COMMAND_PUSH
0607+  759B 3A                                                      db COMMAND_1
0608+  759C 02 78                                                   dw VALID_IS_SPACE_SHIP_AND_C_AND_9_3_BOOT
0609+  759E 94 78                                                   dw ACTION_GAME_WIN_BOOTS 
0610+  75A0             
0611+  75A0 37                                                      db COMMAND_PUSH
0612+  75A1 3A                                                      db COMMAND_1
0613+  75A2 FA 77                                                   dw VALID_IS_SPACE_SHIP_AND_C_AND_9_3
0614+  75A4 8F 78                                                   dw ACTION_DEATH_BY_ELECTRICITY 
0615+  75A6             
0616+  75A6 28                                                      db COMMAND_HELP
0617+  75A7 FF                                                      db COMMAND_ANY
0618+  75A8 B3 75                                                   dw VALID_NONE 
0619+  75AA 9B 78                                                   dw ACTION_HELP 
0620+  75AC             
0621+  75AC 3D                                                      db COMMAND_LOOK
0622+  75AD FF                                                      db COMMAND_ANY
0623+  75AE B3 75                                                   dw VALID_NONE 
0624+  75B0 9E 78                                                   dw ACTION_LOOK 
0625+  75B2             
0626+  75B2 00                                                      db 0x00
0627+  75B3 FF          VALID_NONE:                               db 0xFF
0628+  75B4 01          VALID_BOOT_AVAILABLE:                              db 0x01 ; PROC_01
0629+  75B5 00                                                      db 0x00 ; with zero
0630+  75B6 FF                                                      db 0xFF
0631+  75B7 01          VALID_STAR_AVAILABLE:                               db 0x01
0632+  75B8 01                                                      db 0x01
0633+  75B9 FF                                                      db 0xFF
0634+  75BA 01          VALID_KEY_AVAILABLE:                               db 0x01
0635+  75BB 02                                                      db 0x02
0636+  75BC FF                                                      db 0xFF
0637+  75BD 01          VALID_GUN_AVAILABLE:                               db 0x01
0638+  75BE 03                                                      db 0x03
0639+  75BF FF                                                      db 0xFF
0640+  75C0 01          VALID_BAR_AVAILABLE:                               db 0x01
0641+  75C1 05                                                      db 0x05
0642+  75C2 FF                                                      db 0xFF
0643+  75C3 01          VALID_COIN_AVAILABLE:                               db 0x01
0644+  75C4 06                                                      db 0x06
0645+  75C5 FF                                                      db 0xFF
0646+  75C6 01          VALID_MIRROR_IN_HANGAR:                               db 0x01 ; is item avail
0647+  75C7 07                                                      db 0x07 ; OBJECT_A_MIRROR
0648+  75C8 03                                                      db 0x03 ; is item in room
0649+  75C9 10                                                      db 0x10 ; PLACE_LARGE_HANGER
0650+  75CA FF                                                      db 0xFF
0651+  75CB 01          VALID_BROKEN_GLASS_AVAILABLE:                               db 0x01 ; is item avail
0652+  75CC 08                                                      db 0x08 ; OBJECT_BROKEN_GLASS
0653+  75CD FF                                                      db 0xFF
0654+  75CE 01          VALID_GLOV_AVAILABLE:                               db 0x01
0655+  75CF 09                                                      db 0x09
0656+  75D0 FF                                                      db 0xFF
0657+  75D1 01          VALID_ROPE_AVAILABLE:                               db 0x01
0658+  75D2 0A                                                      db 0x0A
0659+  75D3 FF                                                      db 0xFF
0660+  75D4 01          VALID_FLOO_AVAILABLE:                               db 0x01
0661+  75D5 0B                                                      db 0x0B
0662+  75D6 FF                                                      db 0xFF
0663+  75D7 01          VALID_BROKEN_FLOO_AVAILABLE:                               db 0x01 ; is item avail
0664+  75D8 0C                                                      db 0x0C ; OBJECT_A_BROKEN_FLOOR_BOARD
0665+  75D9 FF                                                      db 0xFF
0666+  75DA 01          VALID_STAL_AVAILABLE:                               db 0x01
0667+  75DB 0D                                                      db 0x0D
0668+  75DC FF                                                      db 0xFF
0669+  75DD 01          VALID_ICE_AVAILABLE:                               db 0x01
0670+  75DE 0E                                                      db 0x0E
0671+  75DF FF                                                      db 0xFF
0672+  75E0 01          VALID_FLIN_AVAILABLE:                               db 0x01
0673+  75E1 18                                                      db 0x18
0674+  75E2 FF                                                      db 0xFF
0675+  75E3 01          VALID_STON_AVAILABLE:                               db 0x01 ; is item avail
0676+  75E4 19                                                      db 0x19 ; OBJECT_SOME_STONES
0677+  75E5 FF                                                      db 0xFF
0678+  75E6 01          VALID_MIRROR_AVAILABLE:                               db 0x01
0679+  75E7 07                                                      db 0x07
0680+  75E8 FF                                                      db 0xFF
0681+  75E9 00          VALID_IS_CAVE:                               db 0x00 ; is room == 2 
0682+  75EA 02                                                      db 0x02 ; PLACE_DAMP_LIMESTONE_CAVE
0683+  75EB FF                                                      db 0xFF
0684+  75EC 00          VALID_USE_ICE:                               db 0x00 ; is room == 2 
0685+  75ED 02                                                      db 0x02 ; PLACE_DAMP_LIMESTONE_CAVE
0686+  75EE 01                                                      db 0x01 ; is item avail
0687+  75EF 0E                                                      db 0x0E ; OBJECT_A_BLOCK_OF_ICE
0688+  75F0 FF                                                      db 0xFF
0689+  75F1 00          VALID_CUT_ROPE:                              db 0x00
0690+  75F2 03                                                      db 0x03
0691+  75F3 FF                                                      db 0xFF
0692+  75F4 00          VALID_USE_FLINT:                             db 0x00 ; is room == 3 
0693+  75F5 03                                                      db 0x03
0694+  75F6 01                                                      db 0x01 ; is item avail
0695+  75F7 18                                                      db 0x18 ; OBJECT_A_PIECE_OF_SHARP_FLINT
0696+  75F8 FF                                                      db 0xFF
0697+  75F9 00          VALID_IS_LAKE:                               db 0x00 ; is room == 4 
0698+  75FA 04                                                      db 0x04 ; PLACE_BESIDE_A_LAKE
0699+  75FB FF                                                      db 0xFF
0700+  75FC 00          VALID_IS_SHAD:                               db 0x00 ; is room == 6 
0701+  75FD 06                                                      db 0x06 ; PLACE_OLD_SHED
0702+  75FE FF                                                      db 0xFF
0703+  75FF 00          VALID_IS_LAKE_WITH_FLOOR:                               db 0x00 ; is room == 4
0704+  7600 04                                                      db 0x04 ; PLACE_BESIDE_A_LAKE
0705+  7601 01                                                      db 0x01 ; is item avail
0706+  7602 0B                                                      db 0x0B ; OBJECT_A_FLOOR_BOARD
0707+  7603 FF                                                      db 0xFF
0708+  7604 00          VALID_IS_SHAD_WITH_FLOOR:                    db 0x00 ; is room == 6
0709+  7605 06                                                      db 0x06 ; PLACE_OLD_SHED
0710+  7606 01                                                      db 0x01 ; is item avail
0711+  7607 0B                                                      db 0x0B ; OBJECT_A_FLOOR_BOARD
0712+  7608 FF                                                      db 0xFF
0713+  7609 00          VALID_IS_ICE_CAVERN:                         db 0x00 ; is room == 0x0B 
0714+  760A 0B                                                      db 0x0B ; PLACE_ICE_CAVERN
0715+  760B FF                                                      db 0xFF
0716+  760C 00          VALID_IS_ICE_CAVERN_WITH_ICE_BLOCK:          db 0x00 ; is room == 0x0B 
0717+  760D 0B                                                      db 0x0B ; PLACE_ICE_CAVERN
0718+  760E 08                                                      db 0x08 ; is item in inventory of weared
0719+  760F 0E                                                      db 0x0E ; OBJECT_A_BLOCK_OF_ICE
0720+  7610 FF                                                      db 0xFF
0721+  7611 01          VALID_IS_MAN_AND_WEARED_GLOVES:              db 0x01 ; is item avail
0722+  7612 10                                                      db 0x10 ; OBJECT_A_SMALL_GREEN_MAN_SLEEPING
0723+  7613 01                                                      db 0x01 ; is item avail 
0724+  7614 09                                                      db 0x09 ; OBJECT_A_PAIR_OF_SLIMY_GLOVES
0725+  7615 04                                                      db 0x04 ; is weared
0726+  7616 09                                                      db 0x09 ; OBJECT_A_PAIR_OF_SLIMY_GLOVES
0727+  7617 FF                                                      db 0xFF
0728+  7618 01          VALID_IS_MAN_AND_GLOVES:                     db 0x01 ; is item avail
0729+  7619 10                                                      db 0x10 ; OBJECT_A_SMALL_GREEN_MAN_SLEEPING
0730+  761A 01                                                      db 0x01 ; is item avail
0731+  761B 09                                                      db 0x09 ; OBJECT_A_PAIR_OF_SLIMY_GLOVES
0732+  761C FF                                                      db 0xFF
0733+  761D 01          VALID_IS_MAN_ONLY:                           db 0x01 ; is item avail
0734+  761E 10                                                      db 0x10 ; OBJECT_A_SMALL_GREEN_MAN_SLEEPING
0735+  761F FF                                                      db 0xFF
0736+  7620 01          VALID_IS_MAN_AVAILABLE:                      db 0x01 ; is item avail
0737+  7621 11                                                      db 0x11 ; OBJECT_A_SLEEPING_GREEN_MAN
0738+  7622 FF                                                      db 0xFF
0739+  7623 01          VALID_IS_MIRR_WITH_MAN:                               db 0x01 ; is item avail
0740+  7624 07                                                      db 0x07 ; OBJECT_A_MIRROR
0741+  7625 03                                                      db 0x03 ; item in room, but not in inventory or weared
0742+  7626 10                                                      db 0x10 ; OBJECT_A_SMALL_GREEN_MAN_SLEEPING
0743+  7627 FF                                                      db 0xFF ; 
0744+  7628 01          VALID_IS_MAN_AVAILABLE_TO_KILL:              db 0x01 ; is item avail
0745+  7629 10                                                      db 0x10 ; OBJECT_A_SMALL_GREEN_MAN_SLEEPING
0746+  762A FF                                                      db 0xFF
0747+  762B 01          VALID_IS_MAN_AND_GUN_AVAILABLE:              db 0x01 ; is item avail
0748+  762C 10                                                      db 0x10 ; OBJECT_A_SMALL_GREEN_MAN_SLEEPING
0749+  762D 01                                                      db 0x01 ; is item avail
0750+  762E 03                                                      db 0x03 ; OBJECT_A_LASER_GUN
0751+  762F FF                                                      db 0xFF
0752+  7630 01          VALID_IS_GUN_AVAIL_MAN_POCKETED:             db 0x01 ; is item avail
0753+  7631 11                                                      db 0x11 ; OBJECT_A_SLEEPING_GREEN_MAN
0754+  7632 01                                                      db 0x01 ; is item avail
0755+  7633 03                                                      db 0x03 ; OBJECT_A_LASER_GUN
0756+  7634 08                                                      db 0x08 ; is object weared or in pocket
0757+  7635 11                                                      db 0x11 ; OBJECT_A_SLEEPING_GREEN_MAN
0758+  7636 FF                                                      db 0xFF
0759+  7637 01          VALID_IS_SLEEPING_MAN_AND_GUN_AVAILABLE:                               db 0x01 ; is item avail
0760+  7638 11                                                      db 0x11 ; OBJECT_A_SLEEPING_GREEN_MAN
0761+  7639 01                                                      db 0x01 ; is item avail
0762+  763A 03                                                      db 0x03 ; OBJECT_A_LASER_GUN
0763+  763B FF                                                      db 0xFF
0764+  763C 00          VALID_IS_COMPUTER_ROOM:                      db 0x00 ; is current room 0e
0765+  763D 0E                                                      db 0x0E ; PLACE_COMPUTER_ROOM
0766+  763E FF                                                      db 0xFF
0767+  763F 00          VALID_IS_PASSAGE:                            db 0x00 ; is current room 0f
0768+  7640 0F                                                      db 0x0F ; PLACE_PASSAGE
0769+  7641 FF                                                      db 0xFF
0770+  7642 00          VALID_IS_PASSAGE_AND_GUN_AND_7:              db 0x00 ; is current room 0f
0771+  7643 0F                                                      db 0x0F ; PLACE_PASSAGE
0772+  7644 07                                                      db 0x07 ; (IX+7) = 0
0773+  7645 07                                                      db 0x07
0774+  7646 01                                                      db 0x01 ; is item avail
0775+  7647 03                                                      db 0x03 ; OBJECT_A_LASER_GUN
0776+  7648 FF                                                      db 0xFF
0777+  7649 05          VALID_IS_PASSAGE_AND_GUN_AND_7_AND_8:        db 0x05 ; (IX+7) !=0
0778+  764A 07                                                      db 0x07
0779+  764B 07                                                      db 0x07 ; (IX+8) ==0
0780+  764C 08                                                      db 0x08
0781+  764D 00                                                      db 0x00 ; is current room 0f
0782+  764E 0F                                                      db 0x0F ; PLACE_PASSAGE
0783+  764F 01                                                      db 0x01 ; is item avail
0784+  7650 03                                                      db 0x03 ; OBJECT_A_LASER_GUN
0785+  7651 FF                                                      db 0xFF
0786+  7652 05          VALID_IS_PASSAGE_AND_GUN_AND_8:              db 0x05 ; (IX+8) !=0
0787+  7653 08                                                      db 0x08 ; 
0788+  7654 00                                                      db 0x00 ; is current room 0f 
0789+  7655 0F                                                      db 0x0F ; PLACE_PASSAGE
0790+  7656 01                                                      db 0x01 ; is item avail
0791+  7657 03                                                      db 0x03 ; OBJECT_A_LASER_GUN
0792+  7658 FF                                                      db 0xFF
0793+  7659 00          VALID_IS_PASSAGE_AND_MIRR_AND_8:             db 0x00 ; is current room 0f 
0794+  765A 0F                                                      db 0x0F ; PLACE_PASSAGE
0795+  765B 08                                                      db 0x08 ; is wear or in pocket
0796+  765C 07                                                      db 0x07 ; OBJECT_A_MIRROR
0797+  765D 05                                                      db 0x05 ; (IX+8) !=0
0798+  765E 08                                                      db 0x08
0799+  765F FF                                                      db 0xFF
0800+  7660 00          VALID_IS_PASSAGE_ONLY:                       db 0x00 ; is current room 0f 
0801+  7661 0F                                                      db 0x0F ; PLACE_PASSAGE
0802+  7662 FF                                                      db 0xFF
0803+  7663 00          VALID_IS_HANGER:                            db 0x00 ; is current room 10 
0804+  7664 10                                                      db 0x10 ; PLACE_LARGE_HANGER
0805+  7665 FF                                                      db 0xFF
0806+  7666 00          VALID_IS_HANGER_AND_KEY:                               db 0x00 ; is current room 10
0807+  7667 10                                                      db 0x10 ; PLACE_LARGE_HANGER
0808+  7668 01                                                      db 0x01 ; is item avail
0809+  7669 02                                                      db 0x02 ; OBJECT_A_KEY
0810+  766A FF                                                      db 0xFF
0811+  766B 00          VALID_IS_HANGER_AND_GUN:                               db 0x00 ; is current room 10
0812+  766C 10                                                      db 0x10 ; PLACE_LARGE_HANGER
0813+  766D 01                                                      db 0x01 ; is item avail
0814+  766E 03                                                      db 0x03 ; OBJECT_A_LASER_GUN
0815+  766F FF                                                      db 0xFF
0816+  7670 00          VALID_IS_PRISON_CELL:                        db 0x00 ; is current room 13
0817+  7671 13                                                      db 0x13 ; PLACE_PRISON_CELL
0818+  7672 FF                                                      db 0xFF
0819+  7673 02          ACTION_GET_BOOT:                             db 0x02 ; cmd CMD_GET_ITEM
0820+  7674 00                                                      db 0x00 ; item 0 - OBJECT_A_PAIR_OF_BOOTS
0821+  7675 0D                                                      db 0x0D ; CMD_OK
0822+  7676 02          ACTION_GET_STAR:                               db 0x02
0823+  7677 01                                                      db 0x01
0824+  7678 0D                                                      db 0x0D
0825+  7679 02          ACTION_GET_KEY:                               db 0x02
0826+  767A 02                                                      db 0x02
0827+  767B 0D                                                      db 0x0D
0828+  767C 02          ACTION_GET_GUN:                               db 0x02
0829+  767D 03                                                      db 0x03
0830+  767E 0D                                                      db 0x0D
0831+  767F 02          ACTION_GET_BAR:                               db 0x02
0832+  7680 05                                                      db 0x05
0833+  7681 0D                                                      db 0x0D
0834+  7682 02          ACTION_GET_COIN:                               db 0x02
0835+  7683 06                                                      db 0x06
0836+  7684 0D                                                      db 0x0D
0837+  7685 02          ACTION_GET_MIRR:                             db 0x02 ; CMD_GET_ITEM
0838+  7686 07                                                      db 0x07 ; OBJECT_A_MIRROR
0839+  7687 0D                                                      db 0x0D
0840+  7688 02          ACTION_GET_BROKEN_GLASS_CLONE:                               db 0x02
0841+  7689 08                                                      db 0x08
0842+  768A 0D                                                      db 0x0D
0843+  768B 02          ACTION_GET_GLOV:                               db 0x02
0844+  768C 09                                                      db 0x09
0845+  768D 0D                                                      db 0x0D
0846+  768E 02          ACTION_GET_ROPE:                               db 0x02
0847+  768F 0A                                                      db 0x0A
0848+  7690 0D                                                      db 0x0D
0849+  7691 02          ACTION_GET_FLOO:                               db 0x02 ; CMD_GET_ITEM
0850+  7692 0B                                                      db 0x0B ; OBJECT_A_FLOOR_BOARD
0851+  7693 0D                                                      db 0x0D
0852+  7694 02          ACTION_GET_BROK:                               db 0x02
0853+  7695 0C                                                      db 0x0C
0854+  7696 0D                                                      db 0x0D
0855+  7697 02          ACTION_GET_STAL:                               db 0x02
0856+  7698 0D                                                      db 0x0D
0857+  7699 0D                                                      db 0x0D
0858+  769A 02          ACTION_GET_ICE:                               db 0x02
0859+  769B 0E                                                      db 0x0E
0860+  769C 0F                                                      db 0x0F
0861+  769D 02                                                      db 0x02
0862+  769E 09                                                      db 0x09
0863+  769F 0D                                                      db 0x0D
0864+  76A0 02          ACTION_GET_FLIN:                               db 0x02
0865+  76A1 18                                                      db 0x18
0866+  76A2 0D                                                      db 0x0D
0867+  76A3 02          ACTION_GET_STON:                               db 0x02
0868+  76A4 19                                                      db 0x19
0869+  76A5 0D                                                      db 0x0D
0870+  76A6 00          ACTION_INVENTORY:                               db 0x00
0871+  76A7 07                                                      db 0x07
0872+  76A8 0E          ACTION_STOP:                               db 0x0E
0873+  76A9 03          ACTION_PUT_BOOT:                               db 0x03
0874+  76AA 00                                                      db 0x00
0875+  76AB 0D                                                      db 0x0D
0876+  76AC 03          ACTION_PUT_STAR:                               db 0x03
0877+  76AD 01                                                      db 0x01
0878+  76AE 0D                                                      db 0x0D
0879+  76AF 03          ACTION_PUT_KEY:                               db 0x03
0880+  76B0 02                                                      db 0x02
0881+  76B1 0D                                                      db 0x0D
0882+  76B2 03          ACTION_PUT_GUN:                               db 0x03
0883+  76B3 03                                                      db 0x03
0884+  76B4 0D                                                      db 0x0D
0885+  76B5 03          ACTION_PUT_BAR:                               db 0x03
0886+  76B6 05                                                      db 0x05
0887+  76B7 0D                                                      db 0x0D
0888+  76B8 03          ACTION_PUT_COIN:                               db 0x03
0889+  76B9 06                                                      db 0x06
0890+  76BA 0D                                                      db 0x0D
0891+  76BB 03          ACTION_PUT_MIRR:                               db 0x03
0892+  76BC 07                                                      db 0x07
0893+  76BD 0D                                                      db 0x0D
0894+  76BE 03          ACTION_PUT_BROKEN_GLASS:                               db 0x03
0895+  76BF 08                                                      db 0x08
0896+  76C0 0D                                                      db 0x0D
0897+  76C1 03          ACTION_PUT_GLOV:                               db 0x03
0898+  76C2 09                                                      db 0x09
0899+  76C3 0D                                                      db 0x0D
0900+  76C4 03          ACTION_PUT_ROPE:                               db 0x03
0901+  76C5 0A                                                      db 0x0A
0902+  76C6 0D                                                      db 0x0D
0903+  76C7 03          ACTION_PUT_FLOO:                               db 0x03
0904+  76C8 0B                                                      db 0x0B
0905+  76C9 0D                                                      db 0x0D
0906+  76CA 03          ACTION_PUT_BROKEN_FLOO:                      db 0x03 ; 
0907+  76CB 0C                                                      db 0x0C
0908+  76CC 0D                                                      db 0x0D
0909+  76CD 03          ACTION_PUT_STAL:                               db 0x03
0910+  76CE 0D                                                      db 0x0D
0911+  76CF 0D                                                      db 0x0D
0912+  76D0 03          ACTION_PUT_ICE:                               db 0x03
0913+  76D1 0E                                                      db 0x0E
0914+  76D2 0D                                                      db 0x0D
0915+  76D3 03          ACTION_PUT_FLIN:                               db 0x03
0916+  76D4 18                                                      db 0x18
0917+  76D5 0D                                                      db 0x0D
0918+  76D6 03          ACTION_PUT_STON:                               db 0x03
0919+  76D7 19                                                      db 0x19
0920+  76D8 0D                                                      db 0x0D
0921+  76D9 05          ACTION_LOOK_DRAW:                               db 0x05
0922+  76DA 00                                                      db 0x00
0923+  76DB 07                                                      db 0x07
0924+  76DC 05          ACTION_HIT_STAL:                               db 0x05
0925+  76DD 01                                                      db 0x01
0926+  76DE 07                                                      db 0x07
0927+  76DF 10          ACTION_USE_ICE:                               db 0x10
0928+  76E0 0D                                                      db 0x0D
0929+  76E1 05                                                      db 0x05
0930+  76E2 02                                                      db 0x02
0931+  76E3 07                                                      db 0x07
0932+  76E4 05          ACTION_CUT_ROPE:                               db 0x05
0933+  76E5 03                                                      db 0x03
0934+  76E6 07                                                      db 0x07
0935+  76E7 10          ACTION_USE_FLINT:                               db 0x10
0936+  76E8 0A                                                      db 0x0A
0937+  76E9 05                                                      db 0x05
0938+  76EA 02                                                      db 0x02
0939+  76EB 07                                                      db 0x07
0940+  76EC 04          ACTIO_WEAR_BOOT:                               db 0x04
0941+  76ED 00                                                      db 0x00
0942+  76EE 0D                                                      db 0x0D
0943+  76EF 01          ACTION_REMOVE_BOOT:                               db 0x01
0944+  76F0 00                                                      db 0x00
0945+  76F1 0D                                                      db 0x0D
0946+  76F2 05          ACTION_DEATH:                                db 0x05 ; CMD_PRINT_ANSWER
0947+  76F3 03                                                      db 0x03 ; HOW
0948+  76F4 07                                                      db 0x07 ; CMD_NOTHING
0949+  76F5 08          ACTION_USE_FLOO_IN_LAKE:                     db 0x08 ; 
0950+  76F6 06                                                      db 0x06
0951+  76F7 06                                                      db 0x06
0952+  76F8 08          ACTION_USE_FLOO_IN_SHED:                     db 0x08
0953+  76F9 04                                                      db 0x04
0954+  76FA 11                                                      db 0x11
0955+  76FB 0B                                                      db 0x0B
0956+  76FC 10                                                      db 0x10
0957+  76FD 0C                                                      db 0x0C
0958+  76FE 06                                                      db 0x06
0959+  76FF 05          ACTION_DIE_BY_FALL:                          db 0x05 ; CMD_PRINT_ANSWER
0960+  7700 04                                                      db 0x04 ; ITS_TOO_WIDE.I_FELL_AND_BROKE
0961+  7701 0C                                                      db 0x0C ; CMD_END
0962+  7702 08          ACTION_USE_ICE_IN_CAVERN:                    db 0x08
0963+  7703 0C                                                      db 0x0C
0964+  7704 03                                                      db 0x03
0965+  7705 0E                                                      db 0x0E
0966+  7706 0B                                                      db 0x0B
0967+  7707 0E                                                      db 0x0E
0968+  7708 0F                                                      db 0x0F
0969+  7709 02                                                      db 0x02
0970+  770A 07                                                      db 0x07
0971+  770B 06                                                      db 0x06
0972+  770C 02          ACTION_GET_SLIME_MEN:                        db 0x02 ; CMD_GET_ITEM
0973+  770D 10                                                      db 0x10 ; OBJECT_A_SMALL_GREEN_MAN_SLEEPING
0974+  770E 0B                                                      db 0x0B ; CMD_SWAP_ITEM with next item (OBJECT_A_SLEEPING_GREEN_MAN)
0975+  770F 10                                                      db 0x10 ; OBJECT_A_SMALL_GREEN_MAN_SLEEPING
0976+  7710 05                                                      db 0x05 ; CMD_PRINT_ANSWER
0977+  7711 05                                                      db 0x05 ; UGH!_HE_IS_ALL_SLIMY
0978+  7712 0F                                                      db 0x0F ; CMD_VAR_SAVE - three params (IX+5) = 0x0A
0979+  7713 05                                                      db 0x05 ; first param
0980+  7714 0A                                                      db 0x0A ; second param
0981+  7715 0A                                                      db 0x0A ; CMD_VAR_CLEAR (IX+6) = 0
0982+  7716 06                                                      db 0x06 ; 6
0983+  7717 07                                                      db 0x07 ; CMD_NOTHING
0984+  7718 02          ACTION_GET_MEN:                              db 0x02 ; CMD_GET_ITEM
0985+  7719 10                                                      db 0x10 ; OBJECT_A_SMALL_GREEN_MAN_SLEEPING
0986+  771A 0B                                                      db 0x0B ; CMD_SWAP_ITEM with next item (OBJECT_A_SLEEPING_GREEN_MAN)
0987+  771B 10                                                      db 0x10 ; OBJECT_A_SMALL_GREEN_MAN_SLEEPING
0988+  771C 0D                                                      db 0x0D ; CMD_OK
0989+  771D 03          ACTION_PUT_MAN:                              db 0x03 ; CMD_DROP_ITEM
0990+  771E 11                                                      db 0x11 ; OBJECT_A_SLEEPING_GREEN_MAN
0991+  771F 0D                                                      db 0x0D ; CMD_OK
0992+  7720 02          ACTION_GET_MIRR_WITH_MAN:                    db 0x02 ; CMD_GET_ITEM
0993+  7721 07                                                      db 0x07 ; OBJECT_A_MIRROR
0994+  7722 0D                                                      db 0x0D ; CMD_OK
0995+  7723 02          ACTION_GET_BROKEN_GLASS:                     db 0x02 ; CMD_GET_ITEM
0996+  7724 08                                                      db 0x08 ; OBJECT_BROKEN_GLASS
0997+  7725 0D                                                      db 0x0D ; CMD_OK
0998+  7726 03          ACTION_DROP_MIRR:                               db 0x03 ; CMD_DROP_ITEM
0999+  7727 07                                                      db 0x07 ; OBJECT_A_MIRROR
1000+  7728 0D                                                      db 0x0D ; CMD_OK
1001+  7729 03          ACTION_DROP_BROKEN_GLASS:                               db 0x03 ; CMD_DROP_ITEM
1002+  772A 08                                                      db 0x08 ; OBJECT_BROKEN_GLASS
1003+  772B 0D                                                      db 0x0D ; CMD_OK
1004+  772C 05          ACTION_ASK_HOW:                               db 0x05 ; CMD_PRINT_ANSWER
1005+  772D 03                                                      db 0x03 ; HOW
1006+  772E 07                                                      db 0x07 ; CMD_NOTHING
1007+  772F 11          ACTION_KILL_MAN_MIRROR_BROKEN:                               db 0x11 ; CMD_REMOVE_ITEM
1008+  7730 10                                                      db 0x10 ; OBJECT_A_SMALL_GREEN_MAN_SLEEPING
1009+  7731 0B                                                      db 0x0B ; CMD_SWAP_ITEM
1010+  7732 07                                                      db 0x07 ; OBJECT_A_MIRROR
1011+  7733 05                                                      db 0x05 ; CMD_PRINT_ANSWER
1012+  7734 06                                                      db 0x06 ; HE_VANISHED_IN_A_PUFF_OF_SMOKE
1013+  7735 05                                                      db 0x05 ; CMD_PRINT_ANSWER
1014+  7736 07                                                      db 0x07 ; YOU_ALSO_BROKE_THE_MIRROR
1015+  7737 07                                                      db 0x07 ; CMD_NOTHING
1016+  7738 05          ACTION_ASK_WHAT_AT:                          db 0x05 ; CMD_PRINT_ANSWER
1017+  7739 26                                                      db 0x26 ; s_WHAT_AT?_ram_7e94
1018+  773A 07                                                      db 0x07 ; CMD_NOTHING
1019+  773B 11          ACTION_JUST_KILL_MAN:                               db 0x11 ; CMD_REMOVE_ITEM
1020+  773C 11                                                      db 0x11 ; OBJECT_A_SLEEPING_GREEN_MAN
1021+  773D 05                                                      db 0x05 ; CMD_PRINT_ANSWER
1022+  773E 06                                                      db 0x06 ; HE_VANISHED_IN_A_PUFF_OF_SMOKE
1023+  773F 07                                                      db 0x07 ; CMD_NOTHING 
1024+  7740 05          ACTION_TYPE_HELP:                            db 0x05 ; CMD_PRINT_ANSWER
1025+  7741 08                                                      db 0x08 ; COMPUTER_SAYS
1026+  7742 07                                                      db 0x07
1027+  7743 09          ACTION_SHIELD_WEAKENED_0:                    db 0x09 ; (IX+7) = ff
1028+  7744 07                                                      db 0x07 
1029+  7745 05                                                      db 0x05 ; CMD_PRINT_ANSWER
1030+  7746 09                                                      db 0x09 ; IT_HAS_WEAKENED_IT
1031+  7747 07                                                      db 0x07 ; CMD_NOTHING 
1032+  7748 09          ACTION_SHIELD_WEAKENED_1:                    db 0x09 ; (IX+8) = ff
1033+  7749 08                                                      db 0x08
1034+  774A 05                                                      db 0x05 ; CMD_PRINT_ANSWER
1035+  774B 09                                                      db 0x09 ; IT_HAS_WEAKENED_IT
1036+  774C 07                                                      db 0x07 ; CMD_NOTHING
1037+  774D 05          ACTION_NO_EFFECT:                            db 0x05 ; CMD_PRINT_ANSWER
1038+  774E 0A                                                      db 0x0A ; IT_HAD_NO_EFFECT
1039+  774F 07                                                      db 0x07 ; CMD_NOTHING
1040+  7750 08          ACTION_ENTER_HANGAR:                         db 0x08 ; CMD_SET_CURRENT_ROOM
1041+  7751 10                                                      db 0x10 ; PLACE_LARGE_HANGER
1042+  7752 0F                                                      db 0x0F ; CMD_VAR_SAVE (IX+2) = 9
1043+  7753 02                                                      db 0x02 ; IX+2
1044+  7754 09                                                      db 0x09
1045+  7755 06                                                      db 0x06 ; CMD_LOOK_AROUND
1046+  7756 05          ACTION_ENTER_PRISON:                               db 0x05 ; CMD_PRINT_ANSWER
1047+  7757 0B                                                      db 0x0B ; I_FELL_AND_KNOCKED_MYSELF_OUT
1048+  7758 08                                                      db 0x08 ; CMD_SET_CURRENT_ROOM
1049+  7759 13                                                      db 0x13 ; PLACE_PRISON_CELL
1050+  775A 06                                                      db 0x06 ; CMD_LOOK_AROUND
1051+  775B 08          ACTION_ENTER_LIFT_CONTROL_ROOM:                               db 0x08 ; CMD_SET_CURRENT_ROOM
1052+  775C 12                                                      db 0x12 ; PLACE_LIFT_CONTROL_ROOM
1053+  775D 06                                                      db 0x06 ; CMD_LOOK_AROUND
1054+  775E 11          ACTION_KILL_SECU:                               db 0x11 ; CMD_REMOVE_ITEM
1055+  775F 17                                                      db 0x17 ; OBJECT_A_SLEEPING_SECURITY_MAN
1056+  7760 0D                                                      db 0x0D
1057+  7761 05          ACTION_LOOK_UP:                               db 0x05
1058+  7762 0C                                                      db 0x0C
1059+  7763 07                                                      db 0x07
1060+  7764 0B          ACTION_HIT_BAR:                               db 0x0B
1061+  7765 14                                                      db 0x14
1062+  7766 10                                                      db 0x10
1063+  7767 05                                                      db 0x05
1064+  7768 06                                                      db 0x06
1065+  7769 00          VALID_IS_PRISON_CELL_AND_HOLE:               db 0x00 ; is current room 13
1066+  776A 13                                                      db 0x13 ; PLACE_PRISON_CELL
1067+  776B 01                                                      db 0x01 ; is available
1068+  776C 15                                                      db 0x15 ; OBJECT_A_HOLE_IN_THE_WALL
1069+  776D FF                                                      db 0xFF
1070+  776E 00          VALID_IS_PRISON_CELL_FOR_BRIBE:              db 0x00 ; is current room 13
1071+  776F 13                                                      db 0x13 ; PLACE_PRISON_CELL
1072+  7770 FF                                                      db 0xFF
1073+  7771 00          VALID_IS_PRISON_AND_COIN:                    db 0x00 ; is current room 13
1074+  7772 13                                                      db 0x13 ; PLACE_PRISON_CELL
1075+  7773 01                                                      db 0x01 ; is available
1076+  7774 06                                                      db 0x06 ; OBJECT_A_GOLD_COIN
1077+  7775 FF                                                      db 0xFF
1078+  7776 00          VALID_IS_PRISON_AND_OPEN_DOOR:               db 0x00 ; is current room 13
1079+  7777 13                                                      db 0x13 ; PLACE_PRISON_CELL
1080+  7778 01                                                      db 0x01 ; is available
1081+  7779 13                                                      db 0x13 ; OBJECT_AN_OPEN_DOOR
1082+  777A FF                                                      db 0xFF
1083+  777B 00          VALID_IS_LAKE_AND_COIN:                      db 0x00 ; is current room 4
1084+  777C 04                                                      db 0x04 ; PLACE_BESIDE_A_LAKE
1085+  777D 03                                                      db 0x03 ; is item in room
1086+  777E 06                                                      db 0x06 ; OBJECT_A_GOLD_COIN
1087+  777F FF                                                      db 0xFF
1088+  7780 00          VALID_IS_LAKE_AND_BOOT_WEARED:               db 0x00 ; is current room 4
1089+  7781 04                                                      db 0x04 ; PLACE_BESIDE_A_LAKE
1090+  7782 03                                                      db 0x03 ; is item in room
1091+  7783 06                                                      db 0x06 ; OBJECT_A_GOLD_COIN
1092+  7784 04                                                      db 0x04 ; is weared
1093+  7785 00                                                      db 0x00 ; OBJECT_A_PAIR_OF_BOOTS
1094+  7786 01                                                      db 0x01 ; is available 
1095+  7787 00                                                      db 0x00 ; OBJECT_A_PAIR_OF_BOOTS
1096+  7788 FF                                                      db 0xFF
1097+  7789 00          VALID_IS_LAKE_AND_BOOT_NOT_WEARED:           db 0x00 ; is current room 4
1098+  778A 04                                                      db 0x04 ; PLACE_BESIDE_A_LAKE
1099+  778B 03                                                      db 0x03 ; is item in room
1100+  778C 06                                                      db 0x06 ; OBJECT_A_GOLD_COIN
1101+  778D 01                                                      db 0x01 ; is available 
1102+  778E 00                                                      db 0x00 ; OBJECT_A_PAIR_OF_BOOTS
1103+  778F FF                                                      db 0xFF
1104+  7790 00          VALID_IS_WIND_TUNNEL:                        db 0x00 ; is current room 0x0D
1105+  7791 0D                                                      db 0x0D ; PLACE_WIND_TUNNEL
1106+  7792 FF                                                      db 0xFF
1107+  7793 00          VALID_IS_LIFT_CONTROL_AND_9_A:               db 0x00 ; is current room 0x12
1108+  7794 12                                                      db 0x12 ; PLACE_LIFT_CONTROL_ROOM
1109+  7795 07                                                      db 0x07 ; (IX+9)==0
1110+  7796 09                                                      db 0x09 ; 
1111+  7797 07                                                      db 0x07 ; (IX+0x0A)==0
1112+  7798 0A                                                      db 0x0A
1113+  7799 FF                                                      db 0xFF
1114+  779A 00          VALID_IS_LIFT_CONTROL_AND_A:                 db 0x00 ; is current room 0x12
1115+  779B 12                                                      db 0x12 ; PLACE_LIFT_CONTROL_ROOM
1116+  779C 07                                                      db 0x07 ; (IX+0x0A)==0
1117+  779D 0A                                                      db 0x0A
1118+  779E FF                                                      db 0xFF
1119+  779F 00          VALID_IS_LIFT_CONTROL_AND_A_9_1:             db 0x00 ; is current room 0x12
1120+  77A0 12                                                      db 0x12 ; PLACE_LIFT_CONTROL_ROOM
1121+  77A1 06                                                      db 0x06 ; (IX+9)==1 
1122+  77A2 09                                                      db 0x09 ; 
1123+  77A3 01                                                      db 0x01 ; 
1124+  77A4 07                                                      db 0x07 ; (IX+0x0A)==0
1125+  77A5 0A                                                      db 0x0A ;
1126+  77A6 FF                                                      db 0xFF
1127+  77A7 00          VALID_IS_LIFT_CONTROL_AND_A_9_2:             db 0x00 ; is current room 0x12
1128+  77A8 12                                                      db 0x12 ; PLACE_LIFT_CONTROL_ROOM
1129+  77A9 06                                                      db 0x06 ; (IX+9)==2 
1130+  77AA 09                                                      db 0x09
1131+  77AB 02                                                      db 0x02
1132+  77AC 07                                                      db 0x07 ; (IX+0x0A)==0
1133+  77AD 0A                                                      db 0x0A
1134+  77AE FF                                                      db 0xFF
1135+  77AF 00          VALID_IS_LIFT_CONTROL_AND_A_FIX:             db 0x00 ; is current room 0x12
1136+  77B0 12                                                      db 0x12 ; PLACE_LIFT_CONTROL_ROOM
1137+  77B1 05                                                      db 0x05 ; (IX+0x0A)==0
1138+  77B2 0A                                                      db 0x0A
1139+  77B3 FF                                                      db 0xFF
1140+  77B4 00          VALID_IS_LIFT_CONTROL_AND_A_BAR:                               db 0x00 ; is current room 0x12
1141+  77B5 12                                                      db 0x12 ; PLACE_LIFT_CONTROL_ROOM
1142+  77B6 01                                                      db 0x01 ; is available 
1143+  77B7 05                                                      db 0x05 ; OBJECT_A_METAL_BAR
1144+  77B8 05                                                      db 0x05 ; (IX+0x0A)==0
1145+  77B9 0A                                                      db 0x0A
1146+  77BA FF                                                      db 0xFF
1147+  77BB 00          VALID_IS_ICE_CAVERN_LOOK:                    db 0x00 ; is current room 0x12
1148+  77BC 0B                                                      db 0x0B ; PLACE_ICE_CAVERN
1149+  77BD FF                                                      db 0xFF
1150+  77BE 00          VALID_IS_LIFT_FOR_HELP:                               db 0x00 ; is current room 0x11
1151+  77BF 11                                                      db 0x11 ; PLACE_TALL_LIFT
1152+  77C0 FF                                                      db 0xFF
1153+  77C1 00          VALID_IS_PASSAGE_FOR_HELP:                               db 0x00 ; is current room 0x0f
1154+  77C2 0F                                                      db 0x0F ; PLACE_PASSAGE
1155+  77C3 FF                                                      db 0xFF
1156+  77C4 00          VALID_IS_COMP_ROOM_FOR_HELP:                               db 0x00 ; is current room 0x0e
1157+  77C5 0E                                                      db 0x0E ; PLACE_COMPUTER_ROOM
1158+  77C6 FF                                                      db 0xFF
1159+  77C7 00          VALID_IS_MAZE1_FOR_HELP:                               db 0x00 ; is current room 0x07
1160+  77C8 07                                                      db 0x07 ; PLACE_MAZE
1161+  77C9 FF                                                      db 0xFF
1162+  77CA 00          VALID_IS_MAZE2_FOR_HELP:                               db 0x00 ; is current room 0x08
1163+  77CB 08                                                      db 0x08 ; PLACE_MAZE
1164+  77CC FF                                                      db 0xFF
1165+  77CD 00          VALID_IS_MAZE3_FOR_HELP:                               db 0x00 ; is current room 0x09
1166+  77CE 09                                                      db 0x09 ; PLACE_MAZE
1167+  77CF FF                                                      db 0xFF
1168+  77D0 00          VALID_IS_MAZE4_FOR_HELP:                     db 0x00 ; is current room 0x0A
1169+  77D1 0A                                                      db 0x0A ; PLACE_MAZE 
1170+  77D2 FF                                                      db 0xFF
1171+  77D3 00          VALID_IS_SPACESHIP_AND_C:                               db 0x00 ; is current room 0x14
1172+  77D4 14                                                      db 0x14 ; PLACE_SPACE_SHIP
1173+  77D5 05                                                      db 0x05 ; (IX+0x0C)==0
1174+  77D6 0C                                                      db 0x0C
1175+  77D7 FF                                                      db 0xFF
1176+  77D8 05          VALID_IS_QUIET_CAVERN_AND_B:                               db 0x05 ; (IX+0x0B)==0
1177+  77D9 0B                                                      db 0x0B
1178+  77DA 00                                                      db 0x00 ; is current room 0x0c
1179+  77DB 0C                                                      db 0x0C ; PLACE_QUIET_CAVERN
1180+  77DC FF                                                      db 0xFF
1181+  77DD 00          VALID_IS_TUNNEL_FOR_WEST:                               db 0x00 ; is current room 0x14
1182+  77DE 0D                                                      db 0x0D ; PLACE_WIND_TUNNEL
1183+  77DF FF                                                      db 0xFF
1184+  77E0 00          VALID_IS_EDGE_OF_PIT:                               db 0x00 ; is current room 0x01
1185+  77E1 01                                                      db 0x01 ; PLACE_EDGE_OF_A_DEEP_PIT
1186+  77E2 FF                                                      db 0xFF
1187+  77E3 00          VALID_IS_PIT_AND_ROPE:                               db 0x00 ; is current room 0x01
1188+  77E4 01                                                      db 0x01 ; PLACE_EDGE_OF_A_DEEP_PIT
1189+  77E5 08                                                      db 0x08 ; is item here or wear
1190+  77E6 0A                                                      db 0x0A ; OBJECT_A_ROPE
1191+  77E7 FF                                                      db 0xFF
1192+  77E8 00          VALID_IS_CAVERN_AND_B:                               db 0x00 ; is current room 0x0C
1193+  77E9 0C                                                      db 0x0C ; PLACE_QUIET_CAVERN
1194+  77EA 05                                                      db 0x05 ; (IX+0x0B)==0
1195+  77EB 0B                                                      db 0x0B
1196+  77EC FF                                                      db 0xFF
1197+  77ED 01          VALID_IS_SHIP_AVAILABLE:                               db 0x01 ; is item avail
1198+  77EE 16                                                      db 0x16 ; OBJECT_A_SMALL_BUT_POWERFULL_SPACE_SHIP
1199+  77EF FF                                                      db 0xFF
1200+  77F0 00          VALID_IS_SHIP_AND_STARTER:                               db 0x00 ; is current room 0x14
1201+  77F1 14                                                      db 0x14 ; PLACE_SPACE_SHIP
1202+  77F2 01                                                      db 0x01 ; is item avail
1203+  77F3 01                                                      db 0x01 ; OBJECT_A_STARTER_MOTOR
1204+  77F4 FF                                                      db 0xFF
1205+  77F5 00          VALID_IS_SPACE_SHIP_AND_C:                               db 0x00 ; is current room 0x14 
1206+  77F6 14                                                      db 0x14 ; PLACE_SPACE_SHIP
1207+  77F7 05                                                      db 0x05 ; (IX+0x0C)==0
1208+  77F8 0C                                                      db 0x0C
1209+  77F9 FF                                                      db 0xFF
1210+  77FA 00          VALID_IS_SPACE_SHIP_AND_C_AND_9_3:                               db 0x00 ; is current room 0x14 
1211+  77FB 14                                                      db 0x14 ; LACE_SPACE_SHIP 
1212+  77FC 05                                                      db 0x05 ; (IX+0x0C)==0
1213+  77FD 0C                                                      db 0x0C
1214+  77FE 06                                                      db 0x06 ; (IX+9)==3
1215+  77FF 09                                                      db 0x09
1216+  7800 03                                                      db 0x03
1217+  7801 FF                                                      db 0xFF
1218+  7802 00          VALID_IS_SPACE_SHIP_AND_C_AND_9_3_BOOT:                               db 0x00 ; is current room 0x14 
1219+  7803 14                                                      db 0x14 ; LACE_SPACE_SHIP 
1220+  7804 05                                                      db 0x05 ; (IX+0x0C)==0
1221+  7805 0C                                                      db 0x0C
1222+  7806 04                                                      db 0x04 ; is item weared
1223+  7807 00                                                      db 0x00 ; OBJECT_A_PAIR_OF_BOOTS
1224+  7808 06                                                      db 0x06 ;  (IX+9)==3
1225+  7809 09                                                      db 0x09
1226+  780A 03                                                      db 0x03
1227+  780B FF                                                      db 0xFF
1228+  780C 08          ACTION_UP_IN_PRISON:                               db 0x08
1229+  780D 0C                                                      db 0x0C
1230+  780E 0B                                                      db 0x0B
1231+  780F 14                                                      db 0x14
1232+  7810 06                                                      db 0x06
1233+  7811 05          ACTION_BRIB_SECU:                               db 0x05
1234+  7812 0D                                                      db 0x0D
1235+  7813 07                                                      db 0x07
1236+  7814 0B          ACTION_USE_COIN:                               db 0x0B
1237+  7815 12                                                      db 0x12
1238+  7816 11                                                      db 0x11
1239+  7817 06                                                      db 0x06
1240+  7818 06                                                      db 0x06
1241+  7819 08          ACTION_DOOR:                               db 0x08
1242+  781A 0C                                                      db 0x0C
1243+  781B 0B                                                      db 0x0B
1244+  781C 12                                                      db 0x12
1245+  781D 06                                                      db 0x06
1246+  781E 05          ACTION_LOOK_WATE:                               db 0x05
1247+  781F 0E                                                      db 0x0E
1248+  7820 07                                                      db 0x07
1249+  7821 05          ACTION_CANT_REACH:                               db 0x05 ; CMD_PRINT_ANSWER
1250+  7822 01                                                      db 0x01 ; HOW_I_CANT_REACH
1251+  7823 07                                                      db 0x07
1252+  7824 05          ACTION_WATER_WITHOUT_WEARED_BOOT:            db 0x05
1253+  7825 0F                                                      db 0x0F
1254+  7826 07                                                      db 0x07
1255+  7827 10          ACTION_WATER_WITH_WEARED_BOOT:               db 0x10
1256+  7828 06                                                      db 0x06
1257+  7829 02                                                      db 0x02
1258+  782A 06                                                      db 0x06
1259+  782B 0D                                                      db 0x0D
1260+  782C 05          ACTION_WATER_TOO_COLD:                       db 0x05 ; CMD_PRINT_ANSWER
1261+  782D 0F                                                      db 0x0F ; BRRR.THE_WATERS_TOO_COLD
1262+  782E 07                                                      db 0x07
1263+  782F 08          ACTION_NAV_TO_COMP_ROOM:                     db 0x08 ; CMD_SET_CURRENT_ROOM
1264+  7830 0E                                                      db 0x0E ; PLACE_COMPUTER_ROOM
1265+  7831 06                                                      db 0x06 ; CMD_LOOK_AROUND
1266+  7832 0F          ACTION_PUSH_3_FIRST:                         db 0x0F ; CMD_VAR_SAVE (IX+9)=1
1267+  7833 09                                                      db 0x09 ; 
1268+  7834 01                                                      db 0x01
1269+  7835 0D                                                      db 0x0D
1270+  7836 05          ACTION_FUSE_BLOWN:                           db 0x05 ; CMD_PRINT_ANSWER
1271+  7837 10                                                      db 0x10 ; THE_FUSE_HAS_JUST_BLOWN
1272+  7838 0A                                                      db 0x0A ; CMD_VAR_CLEAR (IX+9) = 0
1273+  7839 09                                                      db 0x09
1274+  783A 09                                                      db 0x09 ; CMD_VAR_TO_FF (IX+A) = ff
1275+  783B 0A                                                      db 0x0A
1276+  783C 07                                                      db 0x07
1277+  783D 0F          ACTION_PUSH_2_FIRST:                         db 0x0F ; CMD_VAR_SAVE (IX+9)=2
1278+  783E 09                                                      db 0x09 ; 
1279+  783F 02                                                      db 0x02
1280+  7840 0D                                                      db 0x0D
1281+  7841 05          ACTION_LIFT_ACTIVATE:                        db 0x05 ; CMD_PRINT_ANSWER
1282+  7842 11                                                      db 0x11 ; THE_LIFT_HAS_BEEN_ACTIVATED
1283+  7843 0F                                                      db 0x0F ; CMD_VAR_SAVE (IX+9) = 3
1284+  7844 09                                                      db 0x09
1285+  7845 03                                                      db 0x03
1286+  7846 07                                                      db 0x07 ; CMD_NOTHING
1287+  7847 05          ACTION_SHOW_WHAT_WITH:                       db 0x05 ; CMD_PRINT_ANSWER
1288+  7848 0D                                                      db 0x0D ; WHAT_WITH
1289+  7849 07                                                      db 0x07
1290+  784A 0A          ACTION_USE_BAR:                              db 0x0A ; CMD_VAR_CLEAR (IX+0x0A) = 0
1291+  784B 0A                                                      db 0x0A ; 
1292+  784C 11                                                      db 0x11 ; CMD_REMOVE_ITEM
1293+  784D 05                                                      db 0x05 ; OBJECT_A_METAL_BAR
1294+  784E 0D                                                      db 0x0D
1295+  784F 05          ACTION_LOOK_IN_CAVERN:                               db 0x05 ; CMD_PRINT_ANSWER
1296+  7850 18                                                      db 0x18 ; I_CAN_SEE_A_STEEP_SLOPE
1297+  7851 07                                                      db 0x07
1298+  7852 05          ACTION_HELP_ABOUT_KEEP_OFF:                               db 0x05 ; CMD_PRINT_ANSWER
1299+  7853 13                                                      db 0x13 ; KEEP_OFF_THE_MIDDLE_MEN
1300+  7854 07                                                      db 0x07
1301+  7855 05          ACTION_HELP_ABOUT_VANITY_WALTZ:                               db 0x05 ; CMD_PRINT_ANSWER
1302+  7856 14                                                      db 0x14 ; VANITY_WALTZ
1303+  7857 07                                                      db 0x07
1304+  7858 05          ACTION_HELP_TRY_HELP:                               db 0x05 ; CMD_PRINT_ANSWER
1305+  7859 15                                                      db 0x15 ; TRY_HELP
1306+  785A 07                                                      db 0x07
1307+  785B 05          ACTION_HELP_ABOUT_COMPASS:                               db 0x05 ; CMD_PRINT_ANSWER
1308+  785C 16                                                      db 0x16 ; POINTS_OF_COMPASS
1309+  785D 07                                                      db 0x07
1310+  785E 05          ACTION_MSG_I_SEE_ROPE:                               db 0x05 ; CMD_PRINT_ANSWER
1311+  785F 1A                                                      db 0x1A ; I_CAN_SEE_A_ROPE_HANGING_DOWN
1312+  7860 07                                                      db 0x07
1313+  7861 08          ACTION_NAV_CAVERN_AND_2_SET:                               db 0x08 ; CMD_SET_CURRENT_ROOM
1314+  7862 0C                                                      db 0x0C ; PLACE_QUIET_CAVERN
1315+  7863 0F                                                      db 0x0F ; CMD_VAR_SAVE
1316+  7864 02                                                      db 0x02 ; (IX+2)=7
1317+  7865 07                                                      db 0x07
1318+  7866 06                                                      db 0x06
1319+  7867 04          ACTION_WEAR_GLOV:                               db 0x04 ; CMD_WEAR_ITEM
1320+  7868 09                                                      db 0x09
1321+  7869 0D                                                      db 0x0D
1322+  786A 01          ACTION_REMO_GLOV:                               db 0x01 ; CMD_UNWEAR_ITEM
1323+  786B 09                                                      db 0x09
1324+  786C 0D                                                      db 0x0D
1325+  786D 06          ACTION_REDESCRIBE:                               db 0x06
1326+  786E 05          ACTION_ASK_HOW_DOWN:                               db 0x05 ; CMD_PRINT_ANSWER
1327+  786F 03                                                      db 0x03 ; HOW
1328+  7870 07                                                      db 0x07
1329+  7871 09          ACTION_USE_ROPE:                               db 0x09
1330+  7872 0B                                                      db 0x0B
1331+  7873 03                                                      db 0x03
1332+  7874 0A                                                      db 0x0A
1333+  7875 08                                                      db 0x08
1334+  7876 0C                                                      db 0x0C
1335+  7877 06                                                      db 0x06
1336+  7878 05          ACTION_SHOW_ITS_TOO_DEEP:                               db 0x05 ; CMD_PRINT_ANSWER
1337+  7879 1B                                                      db 0x1B ; I_AM_NOT_THAT_DAFT
1338+  787A 07                                                      db 0x07 ; 
1339+  787B 08          ACTION_NAV_TO_PIT:                               db 0x08 ; CMD_SET_CURRENT_ROOM
1340+  787C 01                                                      db 0x01 ; PLACE_EDGE_OF_A_DEEP_PIT
1341+  787D 06                                                      db 0x06 ; 
1342+  787E 08          ACTION_NAV_TO_SHIP:                               db 0x08 ; CMD_SET_CURRENT_ROOM
1343+  787F 14                                                      db 0x14 ; PLACE_SPACE_SHIP
1344+  7880 06                                                      db 0x06
1345+  7881 05          ACTION_SHIP_BLOW_UP:                               db 0x05 ; CMD_PRINT_ANSWER
1346+  7882 1C                                                      db 0x1C ; THE_SPACE_SHIP_BLEW_UP
1347+  7883 0C                                                      db 0x0C ; CMD_END
1348+  7884 09          ACTION_SHIP_NAV_TO_LIFT:                               db 0x09 ; CMD_VAR_TO_FF (IX+0x0C)=ff
1349+  7885 0C                                                      db 0x0C 
1350+  7886 05                                                      db 0x05 ; CMD_PRINT_ANSWER
1351+  7887 1D                                                      db 0x1D ; THE_SHIP_HAS_FLOWN
1352+  7888 07                                                      db 0x07
1353+  7889 05          ACTION_KILL_BY_GUARD_ALARMED:                               db 0x05 ; CMD_PRINT_ANSWER
1354+  788A 19                                                      db 0x19 ; AN_ALARM_SOUNDS
1355+  788B 0C                                                      db 0x0C ; CMD_END
1356+  788C 05          ACTION_GAME_WIN:                               db 0x05 ; CMD_PRINT_ANSWER
1357+  788D 1E                                                      db 0x1E ; THE_LIFT_HAS_TAKEN_ME_UP
1358+  788E 0E                                                      db 0x0E ; CMD_SAVE
1359+  788F 05          ACTION_DEATH_BY_ELECTRICITY:                               db 0x05 ; CMD_PRINT_ANSWER 
1360+  7890 1F                                                      db 0x1F ; THE_LIFT_HAS_BECOME_ELECTRIFIED
1361+  7891 05                                                      db 0x05 ; CMD_PRINT_ANSWER
1362+  7892 20                                                      db 0x20 ; I_HAVE_BEEN_ELECTROCUTED
1363+  7893 0C                                                      db 0x0C ; CMD_END
1364+  7894 05          ACTION_GAME_WIN_BOOTS:                               db 0x05 ; CMD_PRINT_ANSWER
1365+  7895 1F                                                      db 0x1F ; THE_LIFT_HAS_BECOME_ELECTRIFIED
1366+  7896 05                                                      db 0x05 ; CMD_PRINT_ANSWER
1367+  7897 21                                                      db 0x21 ; IT_IS_A_GOOD_JOB_I_WAS_WEARING
1368+  7898 05                                                      db 0x05 ; CMD_PRINT_ANSWER
1369+  7899 1E                                                      db 0x1E ; THE_LIFT_HAS_TAKEN_ME_UP
1370+  789A 0E                                                      db 0x0E ; CMD_SAVE
1371+  789B 05          ACTION_HELP:                               db 0x05
1372+  789C 17                                                      db 0x17
1373+  789D 07                                                      db 0x07
1374+  789E 05          ACTION_LOOK:                               db 0x05
1375+  789F 12                                                      db 0x12
1376+  78A0 07                                                      db 0x07
1033   78A1             ANSWER_POINTER:                              include text_answers.asm
0001+  78A1 F1 78                                                   dw IT_SHOWS_A_MAN_CLIMBING 
0002+  78A3 22 79                                                   dw HOW_I_CANT_REACH 
0003+  78A5 35 79                                                   dw IT_HAS_FALLEN_TO_THE_FLOOR 
0004+  78A7 51 79                                                   dw HOW 
0005+  78A9 57 79                                                   dw ITS_TOO_WIDE.I_FELL_AND_BROKE 
0006+  78AB 7E 79                                                   dw UGH!_HE_IS_ALL_SLIMY 
0007+  78AD 94 79                                                   dw HE_VANISHED_IN_A_PUFF_OF_SMOKE 
0008+  78AF B4 79                                                   dw YOU_ALSO_BROKE_THE_MIRROR 
0009+  78B1 CF 79                                                   dw COMPUTER_SAYS 
0010+  78B3 FF 79                                                   dw IT_HAS_WEAKENED_IT 
0011+  78B5 13 7A                                                   dw IT_HAD_NO_EFFECT 
0012+  78B7 25 7A                                                   dw I_FELL_AND_KNOCKED_MYSELF_OUT 
0013+  78B9 45 7A                                                   dw THE_BARS_LOOK_LOOSE 
0014+  78BB 5A 7A                                                   dw WHAT_WITH 
0015+  78BD 66 7A                                                   dw I_SEE_A_GOLD_COIN 
0016+  78BF 79 7A                                                   dw BRRR.THE_WATERS_TOO_COLD 
0017+  78C1 93 7A                                                   dw THE_FUSE_HAS_JUST_BLOWN 
0018+  78C3 AC 7A                                                   dw THE_LIFT_HAS_BEEN_ACTIVATED 
0019+  78C5 C9 7A                                                   dw I_SEE_NOTHING_SPECIAL 
0020+  78C7 E0 7A                                                   dw KEEP_OFF_THE_MIDDLE_MEN 
0021+  78C9 0E 7B                                                   dw VANITY_WALTZ 
0022+  78CB 1D 7B                                                   dw TRY_HELP 
0023+  78CD 27 7B                                                   dw POINTS_OF_COMPASS 
0024+  78CF 3A 7B                                                   dw TRY_LOOKING_AROUND 
0025+  78D1 4E 7B                                                   dw I_CAN_SEE_A_STEEP_SLOPE 
0026+  78D3 67 7B                                                   dw AN_ALARM_SOUNDS 
0027+  78D5 A4 7B                                                   dw I_CAN_SEE_A_ROPE_HANGING_DOWN 
0028+  78D7 D0 7B                                                   dw I_AM_NOT_THAT_DAFT 
0029+  78D9 F4 7B                                                   dw THE_SPACE_SHIP_BLEW_UP 
0030+  78DB 1B 7C                                                   dw THE_SHIP_HAS_FLOWN 
0031+  78DD 97 7C                                                   dw THE_LIFT_HAS_TAKEN_ME_UP 
0032+  78DF 14 7D                                                   dw THE_LIFT_HAS_BECOME_ELECTRIFIED 
0033+  78E1 35 7D                                                   dw I_HAVE_BEEN_ELECTROCUTED 
0034+  78E3 4F 7D                                                   dw IT_IS_A_GOOD_JOB_I_WAS_WEARING 
0035+  78E5 83 7D                                                   dw I_WOULD_KILL_MYSELF_IF_I_DID 
0036+  78E7 A2 7D                                                   dw I_HAVE_TURNED_GREEN_AND_DROPPED 
0037+  78E9 C9 7D                                                   dw s_THE_GREEN_MAN_AWOKE_AND_THROTTLE_ram_7e50 
0038+  78EB F0 7D                                                   dw s_THE_GUARD_WOKE_AND_SHOT_ME._ram_7e77 
0039+  78ED 0D 7E                                                   dw s_WHAT_AT?_ram_7e94 
0040+  78EF 00 00                                                   dw 0x0000
0041+  78F1             IT_SHOWS_A_MAN_CLIMBING:                     db "IT SHOWS A MAN CLIMBING DOWN A PIT USING A ROPE\r",0
0041+  78F1 49542053484F57532041204D414E20434C494D42494E4720444F574E20412050
0041+  7911 4954205553494E47204120524F50450D00
0042+  7922             HOW_I_CANT_REACH:                            db "HOW? I CANT REACH\r",0
0042+  7922 484F573F20492043414E542052454143480D00
0043+  7935             IT_HAS_FALLEN_TO_THE_FLOOR:                  db "IT HAS FALLEN TO THE FLOOR\r",0
0043+  7935 4954204841532046414C4C454E20544F2054484520464C4F4F520D00
0044+  7951             HOW:                                         db "HOW?\r",0
0044+  7951 484F573F0D00
0045+  7957             ITS_TOO_WIDE.I_FELL_AND_BROKE:               db "ITS TOO WIDE.I FELL AND BROKE MY NECK\r",0
0045+  7957 49545320544F4F20574944452E492046454C4C20414E442042524F4B45204D59
0045+  7977 204E45434B0D00
0046+  797E             UGH!_HE_IS_ALL_SLIMY:                        db "UGH! HE IS ALL SLIMY\r",0
0046+  797E 5547482120484520495320414C4C20534C494D590D00
0047+  7994             HE_VANISHED_IN_A_PUFF_OF_SMOKE:              db "HE VANISHED IN A PUFF OF SMOKE\r",0
0047+  7994 48452056414E495348454420494E20412050554646204F4620534D4F4B450D00
0048+  79B4             YOU_ALSO_BROKE_THE_MIRROR:                   db "YOU ALSO BROKE THE MIRROR\r",0
0048+  79B4 594F5520414C534F2042524F4B4520544845204D4952524F520D00
0049+  79CF             COMPUTER_SAYS:                               db "COMPUTER SAYS: 2 WEST,2 SOUTH FOR SPACE FLIGHT\r",0
0049+  79CF 434F4D505554455220534159533A203220574553542C3220534F55544820464F
0049+  79EF 5220535041434520464C494748540D00
0050+  79FF             IT_HAS_WEAKENED_IT:                          db "IT HAS WEAKENED IT\r",0
0050+  79FF 495420484153205745414B454E45442049540D00
0051+  7A13             IT_HAD_NO_EFFECT:                            db "IT HAD NO EFFECT\r",0
0051+  7A13 495420484144204E4F204546464543540D00
0052+  7A25             I_FELL_AND_KNOCKED_MYSELF_OUT:               db "I FELL AND KNOCKED MYSELF OUT.\r",0
0052+  7A25 492046454C4C20414E44204B4E4F434B4544204D5953454C46204F55542E0D00
0053+  7A45             THE_BARS_LOOK_LOOSE:                         db "THE BARS LOOK LOOSE\r",0
0053+  7A45 5448452042415253204C4F4F4B204C4F4F53450D00
0054+  7A5A             WHAT_WITH:                                   db "WHAT WITH?\r",0
0054+  7A5A 5748415420574954483F0D00
0055+  7A66             I_SEE_A_GOLD_COIN:                           db "I SEE A GOLD COIN\r",0
0055+  7A66 4920534545204120474F4C4420434F494E0D00
0056+  7A79             BRRR.THE_WATERS_TOO_COLD:                    db "BRRR.THE WATERS TOO COLD\r",0
0056+  7A79 425252522E5448452057415445525320544F4F20434F4C440D00
0057+  7A93             THE_FUSE_HAS_JUST_BLOWN:                     db "THE FUSE HAS JUST BLOWN\r",0
0057+  7A93 544845204655534520484153204A55535420424C4F574E0D00
0058+  7AAC             THE_LIFT_HAS_BEEN_ACTIVATED:                 db "THE LIFT HAS BEEN ACTIVATED\r",0
0058+  7AAC 544845204C49465420484153204245454E204143544956415445440D00
0059+  7AC9             I_SEE_NOTHING_SPECIAL:                       db "I SEE NOTHING SPECIAL\r",0
0059+  7AC9 4920534545204E4F5448494E47205350454349414C0D00
0060+  7AE0             KEEP_OFF_THE_MIDDLE_MEN:                     db "KEEP OFF THE MIDDLE MEN,ONE MAY BE SHOCKING!\r",0
0060+  7AE0 4B454550204F464620544845204D4944444C45204D454E2C4F4E45204D415920
0060+  7B00 42452053484F434B494E47210D00
0061+  7B0E             VANITY_WALTZ:                                db "VANITY WALTZ!\r",0
0061+  7B0E 56414E4954592057414C545A210D00
0062+  7B1D             TRY_HELP:                                    db "TRY HELP\r",0
0062+  7B1D 5452592048454C500D00
0063+  7B27             POINTS_OF_COMPASS:                           db "POINTS OF COMPASS\r",0
0063+  7B27 504F494E5453204F4620434F4D504153530D00
0064+  7B3A             TRY_LOOKING_AROUND:                          db "TRY LOOKING AROUND\r",0
0064+  7B3A 545259204C4F4F4B494E472041524F554E440D00
0065+  7B4E             I_CAN_SEE_A_STEEP_SLOPE:                     db "I CAN SEE A STEEP SLOPE\r",0
0065+  7B4E 492043414E20534545204120535445455020534C4F50450D00
0066+  7B67             AN_ALARM_SOUNDS:                             db "AN ALARM SOUNDS.THE SECURITY GUARD SHOT ME FOR TRESPASSING.\r",0
0066+  7B67 414E20414C41524D20534F554E44532E54484520534543555249545920475541
0066+  7B87 52442053484F54204D4520464F52205452455350415353494E472E0D00
0067+  7BA4             I_CAN_SEE_A_ROPE_HANGING_DOWN:               db "I CAN SEE A ROPE HANGING DOWN THE CHIMNEY.\r",0
0067+  7BA4 492043414E20534545204120524F50452048414E47494E4720444F574E205448
0067+  7BC4 45204348494D4E45592E0D00
0068+  7BD0             I_AM_NOT_THAT_DAFT:                          db "I AM NOT THAT DAFT.IT IS TOO DEEP.\r",0
0068+  7BD0 4920414D204E4F54205448415420444146542E495420495320544F4F20444545
0068+  7BF0 502E0D00
0069+  7BF4             THE_SPACE_SHIP_BLEW_UP:                      db "THE SPACE SHIP BLEW UP AND KILLED ME.\r",0
0069+  7BF4 544845205350414345205348495020424C455720555020414E44204B494C4C45
0069+  7C14 44204D452E0D00
0070+  7C1B             THE_SHIP_HAS_FLOWN:                          db "THE SHIP HAS FLOWN INTO THE LARGE LIFT AND IS HOVERING THERE.\rTHERE ARE FOUR BU"
0070+  7C1B 54484520534849502048415320464C4F574E20494E544F20544845204C415247
0070+  7C3B 45204C49465420414E4420495320484F564552494E472054484552452E0D5448
0070+  7C5B 4552452041524520464F5552204255
0071+  7C6A                                                         db "TTONS OUTSIDE THE WINDOW MARKED 1,2,3 AND 4\r",0
0071+  7C6A 54544F4E53204F555453494445205448452057494E444F57204D41524B454420
0071+  7C8A 312C322C3320414E4420340D00
0072+  7C97             THE_LIFT_HAS_TAKEN_ME_UP:                    db "THE LIFT HAS TAKEN ME UP TO A PLATEAU.\rCONGRATULATIONS, YOU HAVE MANAGED TO COM"
0072+  7C97 544845204C494654204841532054414B454E204D4520555020544F204120504C
0072+  7CB7 41544541552E0D434F4E47524154554C4154494F4E532C20594F552048415645
0072+  7CD7 204D414E4147454420544F20434F4D
0073+  7CE6                                                         db "PLETE THIS ADVENTURE\rWITHOUT GETTING KILLED.\r",0
0073+  7CE6 504C455445205448495320414456454E545552450D574954484F555420474554
0073+  7D06 54494E47204B494C4C45442E0D00
0074+  7D14             THE_LIFT_HAS_BECOME_ELECTRIFIED:             db "THE LIFT HAS BECOME ELECTRIFIED\r",0
0074+  7D14 544845204C49465420484153204245434F4D4520454C4543545249464945440D
0074+  7D34 00
0075+  7D35             I_HAVE_BEEN_ELECTROCUTED:                    db "I HAVE BEEN ELECTROCUTED\r",0
0075+  7D35 492048415645204245454E20454C454354524F43555445440D00
0076+  7D4F             IT_IS_A_GOOD_JOB_I_WAS_WEARING:              db "IT IS A GOOD JOB I WAS WEARING RUBBER SOLED BOOTS.\r",0
0076+  7D4F 4954204953204120474F4F44204A4F422049205741532057454152494E472052
0076+  7D6F 554242455220534F4C454420424F4F54532E0D00
0077+  7D83             I_WOULD_KILL_MYSELF_IF_I_DID:                db "I WOULD KILL MYSELF IF I DID.\r",0
0077+  7D83 4920574F554C44204B494C4C204D5953454C462049462049204449442E0D00
0078+  7DA2             I_HAVE_TURNED_GREEN_AND_DROPPED:             db "I HAVE TURNED GREEN AND DROPPED DEAD.\r",0
0078+  7DA2 492048415645205455524E454420475245454E20414E442044524F5050454420
0078+  7DC2 444541442E0D00
0079+  7DC9             s_THE_GREEN_MAN_AWOKE_AND_THROTTLE_ram_7e50: db "THE GREEN MAN AWOKE AND THROTTLED ME.\r",0
0079+  7DC9 54484520475245454E204D414E2041574F4B4520414E44205448524F54544C45
0079+  7DE9 44204D452E0D00
0080+  7DF0             s_THE_GUARD_WOKE_AND_SHOT_ME._ram_7e77:      db "THE GUARD WOKE AND SHOT ME.\r",0
0080+  7DF0 54484520475541524420574F4B4520414E442053484F54204D452E0D00
0081+  7E0D             s_WHAT_AT?_ram_7e94:                         db "WHAT AT?\r",0
0081+  7E0D 574841542041543F0D00
1034   7E17 06          VALIDATOR0:                                  db 0x06 ; PROC6(5,1)
1035   7E18 05                                                      db 0x05 ; IX+5
1036   7E19 01                                                      db 0x01 ; ==1
1037   7E1A 05                                                      db 0x05 ; PROC5(6)
1038   7E1B 06                                                      db 0x06 ; IX+6!=0
1039   7E1C FF                                                      db 0xFF
1040   7E1D 06          VALIDATOR1:                                  db 0x06 ; PROC6(2,1)
1041   7E1E 02                                                      db 0x02 ; IX+2
1042   7E1F 01                                                      db 0x01 ; ==1
1043   7E20 01                                                      db 0x01 ; PROC1(0x10) is item available
1044   7E21 10                                                      db 0x10 ; OBJECT_A_SMALL_GREEN_MAN_SLEEPING
1045   7E22 FF                                                      db 0xFF
1046   7E23 06          VALIDATOR2:                                  db 0x06 ; PROC6(2,1)
1047   7E24 02                                                      db 0x02 ; IX+2
1048   7E25 01                                                      db 0x01 ; ==1
1049   7E26 01                                                      db 0x01 ; PROC1(0x11) is item available
1050   7E27 11                                                      db 0x11 ; OBJECT_A_SLEEPING_GREEN_MAN
1051   7E28 FF                                                      db 0xFF
1052   7E29 06          VALIDATOR3:                                  db 0x06 ; PROC6(2,1)
1053   7E2A 02                                                      db 0x02 ; IX+2
1054   7E2B 01                                                      db 0x01 ; ==1
1055   7E2C 01                                                      db 0x01 ; PROC1(0x17) is item available
1056   7E2D 17                                                      db 0x17 ; OBJECT_A_SLEEPING_SECURITY_MAN
1057   7E2E FF                                                      db 0xFF
1058   7E2F 06          VALIDATOR4:                                  db 0x06 ; PROC6(2,1)
1059   7E30 02                                                      db 0x02 ; IX+2
1060   7E31 01                                                      db 0x01 ; ==1
1061   7E32 01                                                      db 0x01 ; PROC1(0x0e)
1062   7E33 0E                                                      db 0x0E ; OBJECT_A_BLOCK_OF_ICE
1063   7E34 FF                                                      db 0xFF
1064   7E35 FF          VALIDATOR5:                                  db 0xFF ; no validation
1065   7E36 05          ACTION_DIE_GREEN:                            db 0x05 ; CMD_PRINT_ANSWER
1066   7E37 23                                                      db 0x23 ; I_HAVE_TURNED_GREEN_AND_DROPPED
1067   7E38 0C                                                      db 0x0C ; CMD_END
1068   7E39 05          ACTION_DIE_THROTT:                           db 0x05 ; CMD_PRINT_ANSWER
1069   7E3A 24                                                      db 0x24 ; s_THE_GREEN_MAN_AWOKE_AND_THROTTLE_ram_7e50
1070   7E3B 0C                                                      db 0x0C ; CMD_END
1071   7E3C 05          ACTION_DIE_SHOT:                             db 0x05 ; CMD_PRINT_ANSWER
1072   7E3D 25                                                      db 0x25 ; s_THE_GUARD_WOKE_AND_SHOT_ME._ram_7e77
1073   7E3E 0C                                                      db 0x0C ; CMD_END
1074   7E3F 0B          ACTION_SWAP_ICE:                             db 0x0B ; CMD_SWAP_ITEM
1075   7E40 0E                                                      db 0x0E ; item number OBJECT_A_BLOCK_OF_ICE and OBJECT_A_POOL_OF_WATER
1076   7E41 15          ACTION_TELL_ME:                              db 0x15 ; CMD_TELL_ME
1077   7E42 FF          DEFAULT_TABLE:                               db COMMAND_ANY 
1078   7E43 FF                                                      db COMMAND_ANY 
1079   7E44 17 7E                                                   dw VALIDATOR0 
1080   7E46 36 7E                                                   dw ACTION_DIE_GREEN 
1081   7E48 FF                                                      db COMMAND_ANY
1082   7E49 FF                                                      db COMMAND_ANY
1083   7E4A 1D 7E                                                   dw VALIDATOR1 
1084   7E4C 39 7E                                                   dw ACTION_DIE_THROTT 
1085   7E4E FF                                                      db COMMAND_ANY
1086   7E4F FF                                                      db COMMAND_ANY
1087   7E50 23 7E                                                   dw VALIDATOR2 
1088   7E52 39 7E                                                   dw ACTION_DIE_THROTT 
1089   7E54 FF                                                      db COMMAND_ANY
1090   7E55 FF                                                      db COMMAND_ANY
1091   7E56 29 7E                                                   dw VALIDATOR3 
1092   7E58 3C 7E                                                   dw ACTION_DIE_SHOT 
1093   7E5A FF                                                      db COMMAND_ANY
1094   7E5B FF                                                      db COMMAND_ANY
1095   7E5C 2F 7E                                                   dw VALIDATOR4 
1096   7E5E 3F 7E                                                   dw ACTION_SWAP_ICE 
1097   7E60 FF                                                      db COMMAND_ANY
1098   7E61 FF                                                      db COMMAND_ANY
1099   7E62 35 7E                                                   dw VALIDATOR5 
1100   7E64 41 7E                                                   dw ACTION_TELL_ME 
1101   7E66 00                                                      db 0x00
1102   7E67 52                                                      db 0x52
1103   7E68 4F                                                      db 0x4F
1104   7E69 4C                                                      db 0x4C
1105   7E6A 20                                                      db 0x20
1106   7E6B 52                                                      db 0x52
1107   7E6C 4F                                                      db 0x4F
1108   7E6D 00          END_OF_DATA:                                 db 0x00
1109   7E6E                                                         endmodule
1110   7E6E             
1111   7E6E 3E 04       DEBUG_TEXT:                                  LD A, CLR_BLACK<<3 | CLR_GREEN 
1112   7E70 CD 13 BF                                                CALL SCREEN.CLEAR
1113   7E73                                          
1114   7E73 21 10 BF                                                LD HL,SCREEN.POS_Y
1115   7E76 36 17                                                   LD (HL),23
1116   7E78 23                                                      INC HL
1117   7E79 36 17                                                    LD (HL),23
1118   7E7B             
1119   7E7B 21 ED BB    KEY_LOOP:                                    LD HL,KEYBOARD.LASTK ;getting key in A - capitalized 
1120   7E7E 7E                                                      LD A,(HL)
1121   7E7F 36 00                                                   LD (HL),0x0
1122   7E81 FE 00                                                   CP 0
1123   7E83 28 F6                                                   JR Z,KEY_LOOP
1124   7E85 CD E7 BF                                                CALL SCREEN.PRINT_CHAR
1125   7E88             
1126   7E88 C3 7B 7E                                                JP KEY_LOOP
1127   7E8B             
1128   7E8B 21 3B 5C    BASIC_RUNNER                                LD HL,0x5C3b
1129   7E8E 36 CC                                                   LD (HL),0xCC
1130   7E90                                                         ; im2
1131   7E90 F3                                                      DI  
1132   7E91 3E BA                                                   LD A,0xBA
1133   7E93 ED 47                                                   LD I,A
1134   7E95 ED 5E                                                   IM 2
1135   7E97 FB                                                      EI
1136   7E98 C3 6C 5D                                                JP GAME.ENTRY_POINT
1137   7E9B                                                         ;JP DEBUG_TEXT
1138   7E9B             
1139   7E9B                                                         ORG  0xBA00
1140   BA00 BB                                                      DEFS 257,0xBB
1141   BB01             
1142   BB01                                                         ORG 0xBBBB
1143   BBBB F3                                                      DI
1144   BBBC F5                                                      PUSH AF                
1145   BBBD C5                                                      PUSH BC                                               
1146   BBBE D5                                                      PUSH DE                                               
1147   BBBF DD E5                                                   PUSH IX                                               
1148   BBC1 FD E5                                                   PUSH IY                                              
1149   BBC3 E5                                                      PUSH HL  
1150   BBC4             
1151   BBC4 CD 21 BC                                                call KEYBOARD.KEYBOARD
1152   BBC7             
1153   BBC7                                                         ;XOR A
1154   BBC7                                                         ;LD (23560),A
1155   BBC7                                                         ;LD IY,#5C3A
1156   BBC7                                                         ;RST 56
1157   BBC7 3A 08 5C                                                LD a,(23560) 
1158   BBCA 32 01 40                                                LD (16385),A
1159   BBCD 3A ED BB                                                LD a,(KEYBOARD.LASTK) 
1160   BBD0 32 66 06                                                LD (1638),A
1161   BBD3             
1162   BBD3 3A 00 40                                                LD a,(16384)
1163   BBD6 EE FF                                                   xor 255
1164   BBD8 32 00 40                                                ld (16384),a
1165   BBDB             
1166   BBDB E1                                                      POP HL 
1167   BBDC FD E1                                                   POP IY
1168   BBDE DD E1                                                   POP IX     
1169   BBE0 D1                                                      POP DE
1170   BBE1 C1                                                      POP BC                                                                                                                                        
1171   BBE2 F1                                                      POP AF                                                                                                                                                                                                   
1172   BBE3 FB                                                      EI
1173   BBE4 C9                                                      RET
1174   BBE5             
1175   BBE5                                                         include keyboard.asm
0001+  BBE5             	module KEYBOARD
0002+  BBE5             	
0003+  BBE5             	; + FF if the set is unused, or a main code from the main key table otherwise
0004+  BBE5             	;Call counter; initially + 05, and decremented on each call to KEYBOARD
0005+  BBE5             	;Repeat delay counter; initially REPDEL, decremented on each call to KEYBOARD, reset to REPPER whenever it reaches zero
0006+  BBE5             	;Final code from the key tables (as computed by K_DECODE)
0007+  BBE5 FF 00 00 00 KSTATE_0:  db $FF, $00, $00, $00
0008+  BBE9 FF 00 00 00 KSTATE_4:  db $FF, $00, $00, $00
0009+  BBED             	;Read by the routine at KEY_INPUT, and updated by the routine at KEYBOARD.
0010+  BBED 00          LASTK:  db $00
0011+  BBEE             	;REPDEL - Time that a key must be held down before it repeats
0012+  BBEE 23          REPDEL:  db $23
0013+  BBEF             	;Delay between successive repeats of a key held down
0014+  BBEF             	;Initialised by the routine at NEW, and read by the routine at KEYBOARD.
0015+  BBEF 05          REPPER:  db $05
0016+  BBF0             	
0017+  BBF0             	
0018+  BBF0             	; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
0019+  BBF0             	; * * Part 2. KEYBOARD ROUTINES * * 
0020+  BBF0             	; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
0021+  BBF0             	
0022+  BBF0             	; Using shift keys and a combination of modes the Spectrum 40 - key keyboard
0023+  BBF0             	; can be mapped to 256 input characters
0024+  BBF0             	
0025+  BBF0             	; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
0026+  BBF0             	;
0027+  BBF0             	; 0 1 2 3 4 - Bits - 4 3 2 1 0
0028+  BBF0             	; PORT PORT
0029+  BBF0             	;
0030+  BBF0             	; F7FE [ 1 ] [ 2 ] [ 3 ] [ 4 ] [ 5 ] | [ 6 ] [ 7 ] [ 8 ] [ 9 ] [ 0 ] EFFE
0031+  BBF0             	; ^ | v
0032+  BBF0             	; FBFE [ Q ] [ W ] [ E ] [ R ] [ T ] | [ Y ] [ U ] [ I ] [ O ] [ P ] DFFE
0033+  BBF0             	; ^ | v
0034+  BBF0             	; FDFE [ A ] [ S ] [ D ] [ F ] [ G ] | [ H ] [ J ] [ K ] [ L ] [ ENT ] BFFE
0035+  BBF0             	; ^ | v
0036+  BBF0             	; FEFE [SHI] [ Z ] [ X ] [ C ] [ V ] | [ B ] [ N ] [ M ] [sym] [ SPC ] 7FFE
0037+  BBF0             	; ^ $27 $18 v
0038+  BBF0             	; Start End
0039+  BBF0             	; 00100111 00011000
0040+  BBF0             	;
0041+  BBF0             	; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
0042+  BBF0             	; The above map may help in reading.
0043+  BBF0             	; The neat arrangement of ports means that the B register need only be
0044+  BBF0             	; rotated left to work up the left hand side and then down the right
0045+  BBF0             	; hand side of the keyboard. When the reset bit drops into the carry
0046+  BBF0             	; then all 8 half - rows have been read. Shift is the first key to be
0047+  BBF0             	; read. The lower six bits of the shifts are unambiguous.
0048+  BBF0             	
0049+  BBF0             	; - - - - - - - - - - - - - - - - - - 
0050+  BBF0             	; Keyboard scanning
0051+  BBF0             	; - - - - - - - - - - - - - - - - - - 
0052+  BBF0             	; from keyboard and S_INKEY
0053+  BBF0             	; returns 1 or 2 keys in DE, most significant shift first if any
0054+  BBF0             	; key values 0 - 39 else 255P
0055+  BBF0             	
0056+  BBF0             	;;;$028E
0057+  BBF0 2E 2F       KEY_SCAN:  LD L, $2F           ; initial key value
0058+  BBF2             	; valid values are obtained by subtracting
0059+  BBF2             	; eight five times.
0060+  BBF2 11 FF FF    	LD DE, $FFFF                 ; a buffer to receive 2 keys.
0061+  BBF5 01 FE FE    	LD BC, $FEFE                 ; the commencing port address
0062+  BBF8             	; B holds 11111110 initially and is also
0063+  BBF8             	; used to count the 8 half - rows
0064+  BBF8             	;;;$0296
0065+  BBF8 ED 78       KEY_LINE:  IN A, (C)           ; read the port to A - bits will be reset
0066+  BBFA             	; if a key is pressed else set.
0067+  BBFA 2F          	CPL                          ; complement - pressed key - bits are now set
0068+  BBFB E6 1F       	AND $1F                      ; apply 00011111 mask to pick up the
0069+  BBFD             	; relevant set bits.
0070+  BBFD 28 0E       	JR Z, KEY_DONE               ; forward to KEY_DONE if zero and therefore
0071+  BBFF             	; no keys pressed in row at all.
0072+  BBFF 67          	LD H, A                      ; transfer row bits to H
0073+  BC00 7D          	LD A, L                      ; load the initial key value to A
0074+  BC01             	
0075+  BC01             	;;;$029F
0076+  BC01 14          KEY_3KEYS:  INC D              ; now test the key buffer
0077+  BC02 C0          	RET NZ                       ; if we have collected 2 keys already
0078+  BC03             	; then too many so quit.
0079+  BC03             	
0080+  BC03             	;;;$02A1
0081+  BC03 D6 08       KEY_BITS:  SUB $08             ; subtract 8 from the key value
0082+  BC05             	; cycling through key values (top = $27)
0083+  BC05             	; e.g. 2F> 27>1F>17>0F>07
0084+  BC05             	; 2E> 26>1E>16>0E>06
0085+  BC05 CB 3C       	SRL H                        ; shift key bits right into carry.
0086+  BC07 30 FA       	JR NC, KEY_BITS              ; back to KEY_BITS if not pressed
0087+  BC09             	; but if pressed we have a value (0 - 39d)
0088+  BC09 53          	LD D, E                      ; transfer a possible previous key to D
0089+  BC0A 5F          	LD E, A                      ; transfer the new key to E
0090+  BC0B 20 F4       	JR NZ, KEY_3KEYS             ; back to KEY_3KEYS if there were more
0091+  BC0D             	; set bits - H was not yet zero.
0092+  BC0D             	
0093+  BC0D             	;;;$02AB
0094+  BC0D 2D          KEY_DONE:  DEC L               ; cycles 2F>2E>2D>2C>2B>2A>29>28 for
0095+  BC0E             	; each half - row.
0096+  BC0E CB 00       	RLC B                        ; form next port address e.g. FEFE > FDFE
0097+  BC10 38 E6       	JR C, KEY_LINE               ; back to KEY_LINE if still more rows to do.
0098+  BC12             	
0099+  BC12 7A          	LD A, D                      ; now test if D is still FF ?
0100+  BC13 3C          	INC A                        ; if it is zero we have at most 1 key
0101+  BC14             	; range now $01 - $28 (1 - 40d)
0102+  BC14 C8          	RET Z                        ; return if one key or no key.
0103+  BC15             	
0104+  BC15 FE 28       	CP $28                       ; is it capsshift (was $27) ?
0105+  BC17 C8          	RET Z                        ; return if so.
0106+  BC18             	
0107+  BC18 FE 19       	CP $19                       ; is it symbol shift (was $18) ?
0108+  BC1A C8          	RET Z                        ; return also
0109+  BC1B             	
0110+  BC1B 7B          	LD A, E                      ; now test E
0111+  BC1C 5A          	LD E, D                      ; but first switch
0112+  BC1D 57          	LD D, A                      ; the two keys.
0113+  BC1E FE 18       	CP $18                       ; is it symbol shift ?
0114+  BC20 C9          	RET                          ; return (with zero set if it was).
0115+  BC21             	; but with symbol shift now in D
0116+  BC21             	
0117+  BC21             	; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
0118+  BC21             	; Scan keyboard and decode value
0119+  BC21             	; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
0120+  BC21             	; from interrupt 50 times a second
0121+  BC21             	
0122+  BC21             	;;;$02BF
0123+  BC21 CD F0 BB    KEYBOARD:  CALL KEY_SCAN       ; routine KEY_SCAN
0124+  BC24 C0          	RET NZ                       ; return if invalid combinations
0125+  BC25             	
0126+  BC25             	; then decrease the counters within the two key - state maps
0127+  BC25             	; as this could cause one to become free.
0128+  BC25             	; if the keyboard has not been pressed during the last five interrupts
0129+  BC25             	; then both sets will be free.
0130+  BC25             	
0131+  BC25             	
0132+  BC25 21 E5 BB    	LD HL, KSTATE_0              ; point to KSTATE_0
0133+  BC28             	
0134+  BC28             	;;;$02C6
0135+  BC28 CB 7E       K_ST_LOOP:  BIT 7, (HL)        ; is it free ? ($FF)
0136+  BC2A 20 07       	JR NZ, K_CH_SET              ; forward to K_CH_SET if so
0137+  BC2C             	
0138+  BC2C 23          	INC HL                       ; address 5 - counter
0139+  BC2D 35          	DEC (HL)                     ; decrease counter
0140+  BC2E 2B          	DEC HL                       ; step back
0141+  BC2F 20 02       	JR NZ, K_CH_SET              ; forward to K_CH_SET if not at end of count
0142+  BC31             	
0143+  BC31 36 FF       	LD (HL), $FF                 ; else mark it free.
0144+  BC33             	
0145+  BC33             	;;;$02D1
0146+  BC33 7D          K_CH_SET:  LD A, L             ; store low address byte.
0147+  BC34 21 E9 BB    	LD HL, KSTATE_4              ; point to KSTATE_4
0148+  BC37             	; (ld l, $04)
0149+  BC37 BD          	CP L                         ; have 2 been done ?
0150+  BC38 20 EE       	JR NZ, K_ST_LOOP             ; back to K_ST_LOOP to consider this 2nd set
0151+  BC3A             	
0152+  BC3A             	; now the raw key (0 - 38) is converted to a main key (uppercase).
0153+  BC3A             	
0154+  BC3A CD 80 BC    	CALL K_TEST                  ; routine K_TEST to get main key in A
0155+  BC3D D0          	RET NC                       ; return if single shift
0156+  BC3E             	
0157+  BC3E 21 E5 BB    	LD HL, KSTATE_0              ; point to KSTATE_0
0158+  BC41 BE          	CP (HL)                      ; does it match ?
0159+  BC42 28 2E       	JR Z, K_REPEAT               ; forward to K_REPEAT if so
0160+  BC44             	
0161+  BC44             	; if not consider the second key map.
0162+  BC44             	
0163+  BC44 EB          	EX DE, HL                    ; save KSTATE_0 in DE
0164+  BC45 21 E9 BB    	LD HL, KSTATE_4              ; point to KSTATE_4
0165+  BC48 BE          	CP (HL)                      ; does it match ?
0166+  BC49 28 27       	JR Z, K_REPEAT               ; forward to K_REPEAT if so
0167+  BC4B             	
0168+  BC4B             	; having excluded a repeating key we can now consider a new key.
0169+  BC4B             	; the second set is always examined before the first.
0170+  BC4B             	
0171+  BC4B CB 7E       	BIT 7, (HL)                  ; is it free ?
0172+  BC4D 20 04       	JR NZ, K_NEW                 ; forward to K_NEW if so.
0173+  BC4F             	
0174+  BC4F EB          	EX DE, HL                    ; bring back KSTATE_0
0175+  BC50 CB 7E       	BIT 7, (HL)                  ; is it free ?
0176+  BC52 C8          	RET Z                        ; return if not.
0177+  BC53             	; as we have a key but nowhere to put it yet.
0178+  BC53             	
0179+  BC53             	; continue or jump to here if one of the buffers was free.
0180+  BC53             	
0181+  BC53             	;;;$02F1
0182+  BC53 5F          K_NEW:  LD E, A                ; store key in E
0183+  BC54 77          	LD (HL), A                   ; place in free location
0184+  BC55 23          	INC HL                       ; advance to interrupt counter
0185+  BC56 36 05       	LD (HL), $05                 ; and initialize to 5
0186+  BC58 23          	INC HL                       ; advance to delay
0187+  BC59 3A EE BB    	LD A, (REPDEL)               ; pick up system variable REPDEL
0188+  BC5C 77          	LD (HL), A                   ; and insert that for first repeat delay.
0189+  BC5D 23          	INC HL                       ; advance to last location of state map.
0190+  BC5E FD 4E 07    	LD C, (IY + $07)             ; pick up MODE (3 bytes)
0191+  BC61 FD 56 01    	LD D, (IY + $01)             ; pick up FLAGS (3 bytes)
0192+  BC64 E5          	PUSH HL                      ; save state map location
0193+  BC65             	; Note. could now have used.
0194+  BC65             	; ld l, $41; ld c, (hl); ld l, $3B; ld d, (hl).
0195+  BC65             	; six and two threes of course.
0196+  BC65 CD 95 BC    	CALL K_DECODE                ; routine K_DECODE
0197+  BC68 E1          	POP HL                       ; restore map pointer
0198+  BC69 77          	LD (HL), A                   ; put decoded key in last location of map.
0199+  BC6A             	
0200+  BC6A             	;;;$0308
0201+  BC6A 32 ED BB    K_END:  LD (LASTK), A          ; update LASTK system variable.
0202+  BC6D FD CB 01 EE 	SET 5, (IY + $01)            ; update FLAGS - signal new key.
0203+  BC71 C9          	RET                          ; done
0204+  BC72             	
0205+  BC72             	; - - - - - - - - - - - - - - - - - - - 
0206+  BC72             	; Repeat key routine
0207+  BC72             	; - - - - - - - - - - - - - - - - - - - 
0208+  BC72             	; A possible repeat has been identified. HL addresses the raw (main) key.
0209+  BC72             	; The last location holds the decoded key (from the first context).
0210+  BC72             	
0211+  BC72             	;;;$0310
0212+  BC72 23          K_REPEAT:  INC HL              ; advance
0213+  BC73 36 05       	LD (HL), $05                 ; maintain interrupt counter at 5
0214+  BC75 23          	INC HL                       ; advance
0215+  BC76 35          	DEC (HL)                     ; decrease REPDEL value.
0216+  BC77 C0          	RET NZ                       ; return if not yet zero.
0217+  BC78             	
0218+  BC78 3A EF BB    	LD A, (REPPER)               ; REPPER
0219+  BC7B 77          	LD (HL), A                   ; but for subsequent repeats REPPER will be used.
0220+  BC7C 23          	INC HL                       ; advance
0221+  BC7D 7E          	LD A, (HL)                   ; pick up the key decoded possibly in another context.
0222+  BC7E 18 EA       	JR K_END                     ; back to K_END
0223+  BC80             	
0224+  BC80             	; - - - - - - - - - - - - - - - 
0225+  BC80             	; Test key value
0226+  BC80             	; - - - - - - - - - - - - - - - 
0227+  BC80             	; also called from S_INKEY
0228+  BC80             	; begin by testing for a shift with no other.
0229+  BC80             	
0230+  BC80             	;;;$031E
0231+  BC80 42          K_TEST:  LD B, D               ; load most significant key to B
0232+  BC81             	; will be $FF if not shift.
0233+  BC81 16 00       	LD D, $00                    ; and reset D to index into main table
0234+  BC83 7B          	LD A, E                      ; load least significant key from E
0235+  BC84 FE 27       	CP $27                       ; is it higher than 39d i.e. FF
0236+  BC86 D0          	RET NC                       ; return with just a shift (in B now)
0237+  BC87             	
0238+  BC87 FE 18       	CP $18                       ; is it symbol shift ?
0239+  BC89 20 03       	JR NZ, K_MAIN                ; forward to K_MAIN if not
0240+  BC8B             	
0241+  BC8B             	; but we could have just symbol shift and no other
0242+  BC8B             	
0243+  BC8B CB 78       	BIT 7, B                     ; is other key $FF (ie not shift)
0244+  BC8D C0          	RET NZ                       ; return with solitary symbol shift
0245+  BC8E             	
0246+  BC8E             	;;;$032C
0247+  BC8E 21 87 BE    K_MAIN:  LD HL, MAIN_KEYS      ; address: MAIN_KEYS
0248+  BC91 19          	ADD HL, DE                   ; add offset 0 - 38
0249+  BC92 7E          	LD A, (HL)                   ; pick up main key value
0250+  BC93 37          	SCF                          ; set carry flag
0251+  BC94 C9          	RET                          ; return (B has other key still)
0252+  BC95             	
0253+  BC95             	; - - - - - - - - - - - - - - - - - - 
0254+  BC95             	; Keyboard decoding
0255+  BC95             	; - - - - - - - - - - - - - - - - - - 
0256+  BC95             	; also called from S_INKEY
0257+  BC95             	
0258+  BC95             	;;;$0333
0259+  BC95 7B          K_DECODE:  LD A, E             ; pick up the stored main key
0260+  BC96 FE 3A       	CP $3A                       ; an arbitrary point between digits and letters
0261+  BC98 38 2F       	JR C, K_DIGIT                ; forward to K_DIGIT with digits, space, enter
0262+  BC9A             	
0263+  BC9A 0D          	DEC C                        ; decrease MODE ( 0='KLC', 1='E', 2='G')
0264+  BC9B FA B1 BC    	JP M, K_KLC_LET              ; to K_KLC_LET if was zero
0265+  BC9E             	
0266+  BC9E 28 03       	JR Z, K_E_LET                ; to K_E_LET if was 1 for extended letters.
0267+  BCA0             	
0268+  BCA0             	; proceed with graphic codes.
0269+  BCA0             	; Note. should selectively drop return address if code > 'U' ($55).
0270+  BCA0             	; i.e. abort the KEYBOARD call.
0271+  BCA0             	; e.g. cp 'V'; jr c addit; pop af; ;;addit etc. (5 bytes of instruction).
0272+  BCA0             	; (S_INKEY never gets into graphics mode.)
0273+  BCA0             	
0274+  BCA0             	;; addit
0275+  BCA0 C6 4F       	ADD A, $4F                   ; add offset to augment 'A' to graphics A say.
0276+  BCA2 C9          	RET                          ; return.
0277+  BCA3             	; Note. ( but [GRAPH] V gives RND, etc ).
0278+  BCA3             	
0279+  BCA3             	; the jump was to here with extended mode with uppercase A - Z.
0280+  BCA3             	
0281+  BCA3             	;;;$0341
0282+  BCA3 21 6D BE    K_E_LET:  LD HL, E_UNSHIFT - $41; base address of E_UNSHIFT - $41
0283+  BCA6             	; ( $01EB in standard ROM )
0284+  BCA6 04          	INC B                        ; test B is it empty i.e. not a shift
0285+  BCA7 28 03       	JR Z, K_LOOK_UP              ; forward to K_LOOK_UP if neither shift
0286+  BCA9             	
0287+  BCA9 21 87 BE    	LD HL, EXT_SHIFT - $41       ; Address: $0205 EXT_SHIFT - $41 base
0288+  BCAC             	
0289+  BCAC             	;;;$034A
0290+  BCAC 16 00       K_LOOK_UP:  LD D, $00          ; prepare to index
0291+  BCAE 19          	ADD HL, DE                   ; add the main key value
0292+  BCAF 7E          	LD A, (HL)                   ; pick up other mode value
0293+  BCB0 C9          	RET                          ; return
0294+  BCB1             	
0295+  BCB1             	; the jump was here with mode = 0
0296+  BCB1             	
0297+  BCB1             	;;;$034F
0298+  BCB1 21 AB BE    K_KLC_LET:  LD HL, SYM_CODES - $41; prepare base of SYM_CODES
0299+  BCB4 CB 40       	BIT 0, B                     ; shift=$27 sym - shift=$18
0300+  BCB6 28 F4       	JR Z, K_LOOK_UP              ; back to K_LOOK_UP with symbol - shift
0301+  BCB8             	
0302+  BCB8 CB 5A       	BIT 3, D                     ; test FLAGS is it 'K' mode (from OUT_CURS)
0303+  BCBA 28 0A       	JR Z, K_TOKENS               ; skip to K_TOKENS if so
0304+  BCBC             	
0305+  BCBC FD CB 30 5E 	BIT 3, (IY + $30)            ; test FLAGS2 - consider CAPS LOCK ?
0306+  BCC0 C0          	RET NZ                       ; return if so with main code.
0307+  BCC1             	
0308+  BCC1 04          	INC B                        ; is shift being pressed ?
0309+  BCC2             	; result zero if not
0310+  BCC2 C0          	RET NZ                       ; return if shift pressed.
0311+  BCC3             	
0312+  BCC3 C6 20       	ADD A, $20                   ; else convert the code to lower case.
0313+  BCC5 C9          	RET                          ; return.
0314+  BCC6             	
0315+  BCC6             	; the jump was here for tokens
0316+  BCC6             	
0317+  BCC6             	;;;$0364
0318+  BCC6 C6 A5       K_TOKENS:  ADD A, $A5          ; add offset to main code so that 'A'
0319+  BCC8             	; becomes 'NEW' etc.
0320+  BCC8 C9          	RET                          ; return
0321+  BCC9             	
0322+  BCC9             	; the jump was here with digits, space, enter and symbol shift (< $xx)
0323+  BCC9             	
0324+  BCC9             	;;;$0367
0325+  BCC9 FE 30       K_DIGIT:  CP $30               ; is it '0' or higher ?
0326+  BCCB D8          	RET C                        ; return with space, enter and symbol - shift
0327+  BCCC             	
0328+  BCCC 0D          	DEC C                        ; test MODE (was 0='KLC', 1='E', 2='G')
0329+  BCCD FA FF BC    	JP M, K_KLC_DGT              ; jump to K_KLC_DGT if was 0.
0330+  BCD0             	
0331+  BCD0 20 19       	JR NZ, K_GRA_DGT             ; forward to K_GRA_DGT if mode was 2.
0332+  BCD2             	
0333+  BCD2             	; continue with extended digits 0 - 9.
0334+  BCD2             	
0335+  BCD2 21 D6 BE    	LD HL, E_DIGITS - $30        ; $0254 - base of E_DIGITS
0336+  BCD5 CB 68       	BIT 5, B                     ; test - shift=$27 sym - shift=$18
0337+  BCD7 28 D3       	JR Z, K_LOOK_UP              ; to K_LOOK_UP if sym - shift
0338+  BCD9             	
0339+  BCD9 FE 38       	CP $38                       ; is character '8' ?
0340+  BCDB 30 07       	JR NC, K_8_AND_9             ; to K_8_AND_9 if greater than '7'
0341+  BCDD             	
0342+  BCDD D6 20       	SUB $20                      ; reduce to ink range $10 - $17
0343+  BCDF 04          	INC B                        ; shift ?
0344+  BCE0 C8          	RET Z                        ; return if not.
0345+  BCE1             	
0346+  BCE1 C6 08       	ADD A, $08                   ; add 8 to give paper range $18 - $1F
0347+  BCE3 C9          	RET                          ; return
0348+  BCE4             	
0349+  BCE4             	; 89
0350+  BCE4             	
0351+  BCE4             	;;;$0382
0352+  BCE4 D6 36       K_8_AND_9:  SUB $36            ; reduce to 02 and 03 bright codes
0353+  BCE6 04          	INC B                        ; test if shift pressed.
0354+  BCE7 C8          	RET Z                        ; return if not.
0355+  BCE8             	
0356+  BCE8 C6 FE       	ADD A, $FE                   ; subtract 2 setting carry
0357+  BCEA C9          	RET                          ; to give 0 and 1 flash codes.
0358+  BCEB             	
0359+  BCEB             	; graphics mode with digits
0360+  BCEB             	
0361+  BCEB             	;;;$0389
0362+  BCEB 21 B2 BE    K_GRA_DGT:  LD HL, CTL_CODES - $30; $0230 base address of CTL_CODES
0363+  BCEE             	
0364+  BCEE FE 39       	CP $39                       ; is key '9' ?
0365+  BCF0 28 BA       	JR Z, K_LOOK_UP              ; back to K_LOOK_UP - changed to $0F, GRAPHICS.
0366+  BCF2             	
0367+  BCF2 FE 30       	CP $30                       ; is key '0' ?
0368+  BCF4 28 B6       	JR Z, K_LOOK_UP              ; back to K_LOOK_UP - changed to $0C, delete.
0369+  BCF6             	
0370+  BCF6             	; for keys '0' - '7' we assign a mosaic character depending on shift.
0371+  BCF6             	
0372+  BCF6 E6 07       	AND $07                      ; convert character to number. 0 - 7.
0373+  BCF8 C6 80       	ADD A, $80                   ; add offset - they start at $80
0374+  BCFA 04          	INC B                        ; destructively test for shift
0375+  BCFB C8          	RET Z                        ; and return if not pressed.
0376+  BCFC             	
0377+  BCFC EE 0F       	XOR $0F                      ; toggle bits becomes range $88 - $8F
0378+  BCFE C9          	RET                          ; return.
0379+  BCFF             	
0380+  BCFF             	; now digits in 'KLC' mode
0381+  BCFF             	
0382+  BCFF             	;;;$039D
0383+  BCFF 04          K_KLC_DGT:  INC B              ; return with digit codes if neither
0384+  BD00 C8          	RET Z                        ; shift key pressed.
0385+  BD01             	
0386+  BD01 CB 68       	BIT 5, B                     ; test for caps shift.
0387+  BD03 21 B2 BE    	LD HL, CTL_CODES - $30       ; prepare base of table CTL_CODES.
0388+  BD06 20 A4       	JR NZ, K_LOOK_UP             ; back to K_LOOK_UP if shift pressed.
0389+  BD08             	
0390+  BD08             	; must have been symbol shift
0391+  BD08             	
0392+  BD08 D6 10       	SUB $10                      ; for ascii most will now be correct
0393+  BD0A             	; on a standard typewriter.
0394+  BD0A FE 22       	CP $22                       ; but '@' is not - see below.
0395+  BD0C 28 06       	JR Z, K_AT_CHAR              ; forward to to K_AT_CHAR if so
0396+  BD0E             	
0397+  BD0E FE 20       	CP $20                       ; '_' is the other one that fails
0398+  BD10 C0          	RET NZ                       ; return if not.
0399+  BD11             	
0400+  BD11 3E 5F       	LD A, $5F                    ; substitute ascii '_'
0401+  BD13 C9          	RET                          ; return.
0402+  BD14             	
0403+  BD14             	;;;$03B2
0404+  BD14 3E 40       K_AT_CHAR:  LD A, $40          ; substitute ascii '@'
0405+  BD16 C9          	RET                          ; return.
0406+  BD17             	
0407+  BD17             	
0408+  BD17             	; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
0409+  BD17             	; The Spectrum Input character keys. One or two are abbreviated.
0410+  BD17             	; From $00 Flash 0 to $FF COPY. The routine above has decoded all these.
0411+  BD17             	
0412+  BD17             	; | 00 Fl0| 01 Fl1| 02 Br0| 03 Br1| 04 In0| 05 In1| 06 CAP| 07 EDT|
0413+  BD17             	; | 08 LFT| 09 RIG| 0A DWN| 0B UP | 0C DEL| 0D ENT| 0E SYM| 0F GRA|
0414+  BD17             	; | 10 Ik0| 11 Ik1| 12 Ik2| 13 Ik3| 14 Ik4| 15 Ik5| 16 Ik6| 17 Ik7|
0415+  BD17             	; | 18 Pa0| 19 Pa1| 1A Pa2| 1B Pa3| 1C Pa4| 1D Pa5| 1E Pa6| 1F Pa7|
0416+  BD17             	; | 20 SP | 21 ! | 22 " | 23 # | 24 $ | 25 % | 26 & | 27 ' |
0417+  BD17             	; | 28 ( | 29 ) | 2A * | 2B + | 2C, | 2D - | 2E . | 2F / |
0418+  BD17             	; | 30 0 | 31 1 | 32 2 | 33 3 | 34 4 | 35 5 | 36 6 | 37 7 |
0419+  BD17             	; | 38 8 | 39 9 | 3A : | 3B ; | 3C < | 3D = | 3E > | 3F ? |
0420+  BD17             	; | 40 @ | 41 A | 42 B | 43 C | 44 D | 45 E | 46 F | 47 G |
0421+  BD17             	; | 48 H | 49 I | 4A J | 4B K | 4C L | 4D M | 4E N | 4F O |
0422+  BD17             	; | 50 P | 51 Q | 52 R | 53 S | 54 T | 55 U | 56 V | 57 W |
0423+  BD17             	; | 58 X | 59 Y | 5A Z | 5B [ | 5C \ | 5D ] | 5E ^ | 5F _ |
0424+  BD17             	; | 60 ukp| 61 a | 62 b | 63 c | 64 d | 65 e | 66 f | 67 g |
0425+  BD17             	; | 68 h | 69 i | 6A j | 6B k | 6C l | 6D m | 6E n | 6F o |
0426+  BD17             	; | 70 p | 71 q | 72 r | 73 s | 74 t | 75 u | 76 v | 77 w |
0427+  BD17             	; | 78 x | 79 y | 7A z | 7B { | 7C | | 7D } | 7E ~ | 7F (c)|
0428+  BD17             	; | 80 128| 81 129| 82 130| 83 131| 84 132| 85 133| 86 134| 87 135|
0429+  BD17             	; | 88 136| 89 137| 8A 138| 8B 139| 8C 140| 8D 141| 8E 142| 8F 143|
0430+  BD17             	; | 90 [A]| 91 [B]| 92 [C]| 93 [D]| 94 [E]| 95 [F]| 96 [G]| 97 [H]|
0431+  BD17             	; | 98 [I]| 99 [J]| 9A [K]| 9B [L]| 9C [M]| 9D [N]| 9E [O]| 9F [P]|
0432+  BD17             	; | A0 [Q]| A1 [R]| A2 [S]| A3 [T]| A4 [U]| A5 RND| A6 IK$| A7 PI |
0433+  BD17             	; | A8 FN | A9 PNT| AA SC$| AB ATT| AC AT | AD TAB| AE VL$| AF COD|
0434+  BD17             	; | B0 VAL| B1 LEN| B2 SIN| B3 COS| B4 TAN| B5 ASN| B6 ACS| B7 ATN|
0435+  BD17             	; | B8 LN | B9 EXP| BA INT| BB SQR| BC SGN| BD ABS| BE PEK| BF IN |
0436+  BD17             	; | C0 USR| C1 ST$| C2 CH$| C3 NOT| C4 BIN| C5 OR | C6 AND| C7 <= |
0437+  BD17             	; | C8 >= | C9 <> | CA LIN| CB THN| CC TO | CD STP| CE DEF| CF CAT|
0438+  BD17             	; | D0 FMT| D1 MOV| D2 ERS| D3 OPN| D4 CLO| D5 MRG| D6 VFY| D7 BEP|
0439+  BD17             	; | D8 CIR| D9 INK| DA PAP| DB FLA| DC BRI| DD INV| DE OVR| DF OUT|
0440+  BD17             	; | E0 LPR| E1 LLI| E2 STP| E3 REA| E4 DAT| E5 RES| E6 NEW| E7 BDR|
0441+  BD17             	; | E8 CON| E9 DIM| EA REM| EB FOR| EC GTO| ED GSB| EE INP| EF LOA|
0442+  BD17             	; | F0 LIS| F1 LET| F2 PAU| F3 NXT| F4 POK| F5 PRI| F6 PLO| F7 RUN|
0443+  BD17             	; | F8 SAV| F9 RAN| FA IF | FB CLS| FC DRW| FD CLR| FE RET| FF CPY|
0444+  BD17             	
0445+  BD17             	; Note that for simplicity, Sinclair have located all the control codes
0446+  BD17             	; below the space character.
0447+  BD17             	; ascii DEL, $7F, has been made a copyright symbol.
0448+  BD17             	; Also $60, '`', not used in Basic but used in other languages, has been
0449+  BD17             	; allocated the local currency symbol for the relevant country - 
0450+  BD17             	; ukp in most Spectrums.
0451+  BD17             	
0452+  BD17             	; - - - - - - - - - - - - - 
0453+  BD17             	; Token tables
0454+  BD17             	; - - - - - - - - - - - - - 
0455+  BD17             	; The tokenized characters 134d (RND) to 255d (COPY) are expanded using
0456+  BD17             	; this table. The last byte of a token is inverted to denote the end of
0457+  BD17             	; the word. The first is an inverted step - over byte.
0458+  BD17             	
0459+  BD17             	;;;$0095
0460+  BD17 BF          TKN_TABLE:  DEFB '?' + $80
0461+  BD18 52 4E C4    	DEFB "RN", 'D' + $80
0462+  BD1B             	DEFB "INKEY", '$' + $80
0462+  BD1B 494E4B4559A4
0463+  BD21 50 C9       	DEFB "P", 'I' + $80
0464+  BD23 46 CE       	DEFB "F", 'N' + $80
0465+  BD25 504F494ED4  	DEFB "POIN", 'T' + $80
0466+  BD2A             	DEFB "SCREEN", '$' + $80
0466+  BD2A 53435245454EA4
0467+  BD31 41 54 54 D2 	DEFB "ATT", 'R' + $80
0468+  BD35 41 D4       	DEFB "A", 'T' + $80
0469+  BD37 54 41 C2    	DEFB "TA", 'B' + $80
0470+  BD3A 56 41 4C A4 	DEFB "VAL", '$' + $80
0471+  BD3E 43 4F 44 C5 	DEFB "COD", 'E' + $80
0472+  BD42 56 41 CC    	DEFB "VA", 'L' + $80
0473+  BD45 4C 45 CE    	DEFB "LE", 'N' + $80
0474+  BD48 53 49 CE    	DEFB "SI", 'N' + $80
0475+  BD4B 43 4F D3    	DEFB "CO", 'S' + $80
0476+  BD4E 54 41 CE    	DEFB "TA", 'N' + $80
0477+  BD51 41 53 CE    	DEFB "AS", 'N' + $80
0478+  BD54 41 43 D3    	DEFB "AC", 'S' + $80
0479+  BD57 41 54 CE    	DEFB "AT", 'N' + $80
0480+  BD5A 4C CE       	DEFB "L", 'N' + $80
0481+  BD5C 45 58 D0    	DEFB "EX", 'P' + $80
0482+  BD5F 49 4E D4    	DEFB "IN", 'T' + $80
0483+  BD62 53 51 D2    	DEFB "SQ", 'R' + $80
0484+  BD65 53 47 CE    	DEFB "SG", 'N' + $80
0485+  BD68 41 42 D3    	DEFB "AB", 'S' + $80
0486+  BD6B 50 45 45 CB 	DEFB "PEE", 'K' + $80
0487+  BD6F 49 CE       	DEFB "I", 'N' + $80
0488+  BD71 55 53 D2    	DEFB "US", 'R' + $80
0489+  BD74 53 54 52 A4 	DEFB "STR", '$' + $80
0490+  BD78 43 48 52 A4 	DEFB "CHR", '$' + $80
0491+  BD7C 4E 4F D4    	DEFB "NO", 'T' + $80
0492+  BD7F 42 49 CE    	DEFB "BI", 'N' + $80
0493+  BD82             	
0494+  BD82             	; The previous 32 function - type words are printed without a leading space
0495+  BD82             	; The following have a leading space if they begin with a letter
0496+  BD82             	
0497+  BD82 4F D2       	DEFB "O", 'R' + $80
0498+  BD84 41 4E C4    	DEFB "AN", 'D' + $80
0499+  BD87 3C BD       	DEFB $3C, '=' + $80          ; <=
0500+  BD89 3E BD       	DEFB $3E, '=' + $80          ; >=
0501+  BD8B 3C BE       	DEFB $3C, $3E + $80          ; <>
0502+  BD8D 4C 49 4E C5 	DEFB "LIN", 'E' + $80
0503+  BD91 54 48 45 CE 	DEFB "THE", 'N' + $80
0504+  BD95 54 CF       	DEFB "T", 'O' + $80
0505+  BD97 53 54 45 D0 	DEFB "STE", 'P' + $80
0506+  BD9B             	DEFB "DEF F", 'N' + $80
0506+  BD9B 4445462046CE
0507+  BDA1 43 41 D4    	DEFB "CA", 'T' + $80
0508+  BDA4             	DEFB "FORMA", 'T' + $80
0508+  BDA4 464F524D41D4
0509+  BDAA 4D 4F 56 C5 	DEFB "MOV", 'E' + $80
0510+  BDAE 45524153C5  	DEFB "ERAS", 'E' + $80
0511+  BDB3             	DEFB "OPEN ", '#' + $80
0511+  BDB3 4F50454E20A3
0512+  BDB9             	DEFB "CLOSE ", '#' + $80
0512+  BDB9 434C4F534520A3
0513+  BDC0 4D455247C5  	DEFB "MERG", 'E' + $80
0514+  BDC5             	DEFB "VERIF", 'Y' + $80
0514+  BDC5 5645524946D9
0515+  BDCB 42 45 45 D0 	DEFB "BEE", 'P' + $80
0516+  BDCF             	DEFB "CIRCL", 'E' + $80
0516+  BDCF 434952434CC5
0517+  BDD5 49 4E CB    	DEFB "IN", 'K' + $80
0518+  BDD8 50415045D2  	DEFB "PAPE", 'R' + $80
0519+  BDDD 464C4153C8  	DEFB "FLAS", 'H' + $80
0520+  BDE2             	DEFB "BRIGH", 'T' + $80
0520+  BDE2 4252494748D4
0521+  BDE8             	DEFB "INVERS", 'E' + $80
0521+  BDE8 494E56455253C5
0522+  BDEF 4F 56 45 D2 	DEFB "OVE", 'R' + $80
0523+  BDF3 4F 55 D4    	DEFB "OU", 'T' + $80
0524+  BDF6             	DEFB "LPRIN", 'T' + $80
0524+  BDF6 4C5052494ED4
0525+  BDFC 4C4C4953D4  	DEFB "LLIS", 'T' + $80
0526+  BE01 53 54 4F D0 	DEFB "STO", 'P' + $80
0527+  BE05 52 45 41 C4 	DEFB "REA", 'D' + $80
0528+  BE09 44 41 54 C1 	DEFB "DAT", 'A' + $80
0529+  BE0D             	DEFB "RESTOR", 'E' + $80
0529+  BE0D 524553544F52C5
0530+  BE14 4E 45 D7    	DEFB "NE", 'W' + $80
0531+  BE17             	DEFB "BORDE", 'R' + $80
0531+  BE17 424F524445D2
0532+  BE1D             	DEFB "CONTINU", 'E' + $80
0532+  BE1D 434F4E54494E55C5
0533+  BE25 44 49 CD    	DEFB "DI", 'M' + $80
0534+  BE28 52 45 CD    	DEFB "RE", 'M' + $80
0535+  BE2B 46 4F D2    	DEFB "FO", 'R' + $80
0536+  BE2E 474F2054CF  	DEFB "GO T", 'O' + $80
0537+  BE33             	DEFB "GO SU", 'B' + $80
0537+  BE33 474F205355C2
0538+  BE39 494E5055D4  	DEFB "INPU", 'T' + $80
0539+  BE3E 4C 4F 41 C4 	DEFB "LOA", 'D' + $80
0540+  BE42 4C 49 53 D4 	DEFB "LIS", 'T' + $80
0541+  BE46 4C 45 D4    	DEFB "LE", 'T' + $80
0542+  BE49 50415553C5  	DEFB "PAUS", 'E' + $80
0543+  BE4E 4E 45 58 D4 	DEFB "NEX", 'T' + $80
0544+  BE52 50 4F 4B C5 	DEFB "POK", 'E' + $80
0545+  BE56 5052494ED4  	DEFB "PRIN", 'T' + $80
0546+  BE5B 50 4C 4F D4 	DEFB "PLO", 'T' + $80
0547+  BE5F 52 55 CE    	DEFB "RU", 'N' + $80
0548+  BE62 53 41 56 C5 	DEFB "SAV", 'E' + $80
0549+  BE66             	DEFB "RANDOMIZ", 'E' + $80
0549+  BE66 52414E444F4D495AC5
0550+  BE6F 49 C6       	DEFB "I", 'F' + $80
0551+  BE71 43 4C D3    	DEFB "CL", 'S' + $80
0552+  BE74 44 52 41 D7 	DEFB "DRA", 'W' + $80
0553+  BE78 434C4541D2  	DEFB "CLEA", 'R' + $80
0554+  BE7D             	DEFB "RETUR", 'N' + $80
0554+  BE7D 5245545552CE
0555+  BE83 43 4F 50 D9 	DEFB "COP", 'Y' + $80
0556+  BE87             	
0557+  BE87             	; - - - - - - - - - - - 
0558+  BE87             	; Key tables
0559+  BE87             	; - - - - - - - - - - - 
0560+  BE87             	; These six look - up tables are used by the keyboard reading routine
0561+  BE87             	; to decode the key values.
0562+  BE87             	
0563+  BE87             	; The first table contains the maps for the 39 keys of the standard
0564+  BE87             	; 40 - key Spectrum keyboard. The remaining key [SHIFT $27] is read directly.
0565+  BE87             	; The keys consist of the 26 upper - case alphabetic characters, the 10 digit
0566+  BE87             	; keys and the space, ENTER and symbol shift key.
0567+  BE87             	; Unshifted alphabetic keys have $20 added to the value.
0568+  BE87             	; The keywords for the main alphabetic keys are obtained by adding $A5 to
0569+  BE87             	; the values obtained from this table.
0570+  BE87             	
0571+  BE87             	;;;$0205
0572+  BE87 42          MAIN_KEYS:  DEFB $42           ; B
0573+  BE88 48          	DEFB $48                     ; H
0574+  BE89 59          	DEFB $59                     ; Y
0575+  BE8A 36          	DEFB $36                     ; 6
0576+  BE8B 35          	DEFB $35                     ; 5
0577+  BE8C 54          	DEFB $54                     ; T
0578+  BE8D 47          	DEFB $47                     ; G
0579+  BE8E 56          	DEFB $56                     ; V
0580+  BE8F 4E          	DEFB $4E                     ; N
0581+  BE90 4A          	DEFB $4A                     ; J
0582+  BE91 55          	DEFB $55                     ; U
0583+  BE92 37          	DEFB $37                     ; 7
0584+  BE93 34          	DEFB $34                     ; 4
0585+  BE94 52          	DEFB $52                     ; R
0586+  BE95 46          	DEFB $46                     ; F
0587+  BE96 43          	DEFB $43                     ; C
0588+  BE97 4D          	DEFB $4D                     ; M
0589+  BE98 4B          	DEFB $4B                     ; K
0590+  BE99 49          	DEFB $49                     ; I
0591+  BE9A 38          	DEFB $38                     ; 8
0592+  BE9B 33          	DEFB $33                     ; 3
0593+  BE9C 45          	DEFB $45                     ; E
0594+  BE9D 44          	DEFB $44                     ; D
0595+  BE9E 58          	DEFB $58                     ; X
0596+  BE9F 0E          	DEFB $0E                     ; SYMBOL SHIFT
0597+  BEA0 4C          	DEFB $4C                     ; L
0598+  BEA1 4F          	DEFB $4F                     ; O
0599+  BEA2 39          	DEFB $39                     ; 9
0600+  BEA3 32          	DEFB $32                     ; 2
0601+  BEA4 57          	DEFB $57                     ; W
0602+  BEA5 53          	DEFB $53                     ; S
0603+  BEA6 5A          	DEFB $5A                     ; Z
0604+  BEA7 20          	DEFB $20                     ; SPACE
0605+  BEA8 0D          	DEFB $0D                     ; ENTER
0606+  BEA9 50          	DEFB $50                     ; P
0607+  BEAA 30          	DEFB $30                     ; 0
0608+  BEAB 31          	DEFB $31                     ; 1
0609+  BEAC 51          	DEFB $51                     ; Q
0610+  BEAD 41          	DEFB $41                     ; A
0611+  BEAE             	
0612+  BEAE             	;;;$022C
0613+  BEAE             	; The 26 unshifted extended mode keys for the alphabetic characters.
0614+  BEAE             	; The green keywords on the original keyboard.
0615+  BEAE E3          E_UNSHIFT:  DEFB $E3           ; READ
0616+  BEAF C4          	DEFB $C4                     ; BIN
0617+  BEB0 E0          	DEFB $E0                     ; LPRINT
0618+  BEB1 E4          	DEFB $E4                     ; DATA
0619+  BEB2 B4          	DEFB $B4                     ; TAN
0620+  BEB3 BC          	DEFB $BC                     ; SGN
0621+  BEB4 BD          	DEFB $BD                     ; ABS
0622+  BEB5 BB          	DEFB $BB                     ; SQR
0623+  BEB6 AF          	DEFB $AF                     ; CODE
0624+  BEB7 B0          	DEFB $B0                     ; VAL
0625+  BEB8 B1          	DEFB $B1                     ; LEN
0626+  BEB9 C0          	DEFB $C0                     ; USR
0627+  BEBA A7          	DEFB $A7                     ; PI
0628+  BEBB A6          	DEFB $A6                     ; INKEY$
0629+  BEBC BE          	DEFB $BE                     ; PEEK
0630+  BEBD AD          	DEFB $AD                     ; TAB
0631+  BEBE B2          	DEFB $B2                     ; SIN
0632+  BEBF BA          	DEFB $BA                     ; INT
0633+  BEC0 E5          	DEFB $E5                     ; RESTORE
0634+  BEC1 A5          	DEFB $A5                     ; RND
0635+  BEC2 C2          	DEFB $C2                     ; CHR$
0636+  BEC3 E1          	DEFB $E1                     ; LLIST
0637+  BEC4 B3          	DEFB $B3                     ; COS
0638+  BEC5 B9          	DEFB $B9                     ; EXP
0639+  BEC6 C1          	DEFB $C1                     ; STR$
0640+  BEC7 B8          	DEFB $B8                     ; LN
0641+  BEC8             	
0642+  BEC8             	;;;$0246
0643+  BEC8             	; The 26 shifted extended mode keys for the alphabetic characters.
0644+  BEC8             	; The red keywords below keys on the original keyboard.
0645+  BEC8 7E          EXT_SHIFT:  DEFB $7E           ; ~
0646+  BEC9 DC          	DEFB $DC                     ; BRIGHT
0647+  BECA DA          	DEFB $DA                     ; PAPER
0648+  BECB 5C          	DEFB $5C                     ; \ ;
0649+  BECC B7          	DEFB $B7                     ; ATN
0650+  BECD 7B          	DEFB $7B                     ; {
0651+  BECE 7D          	DEFB $7D                     ; }
0652+  BECF D8          	DEFB $D8                     ; CIRCLE
0653+  BED0 BF          	DEFB $BF                     ; IN
0654+  BED1 AE          	DEFB $AE                     ; VAL$
0655+  BED2 AA          	DEFB $AA                     ; SCREEN$
0656+  BED3 AB          	DEFB $AB                     ; ATTR
0657+  BED4 DD          	DEFB $DD                     ; INVERSE
0658+  BED5 DE          	DEFB $DE                     ; OVER
0659+  BED6 DF          	DEFB $DF                     ; OUT
0660+  BED7 7F          	DEFB $7F                     ; (Copyright character)
0661+  BED8 B5          	DEFB $B5                     ; ASN
0662+  BED9 D6          	DEFB $D6                     ; VERIFY
0663+  BEDA 7C          	DEFB $7C                     ; |
0664+  BEDB D5          	DEFB $D5                     ; MERGE
0665+  BEDC 5D          	DEFB $5D                     ; ]
0666+  BEDD DB          	DEFB $DB                     ; FLASH
0667+  BEDE B6          	DEFB $B6                     ; ACS
0668+  BEDF D9          	DEFB $D9                     ; INK
0669+  BEE0 5B          	DEFB $5B                     ; [
0670+  BEE1 D7          	DEFB $D7                     ; BEEP
0671+  BEE2             	
0672+  BEE2             	;;;$0260
0673+  BEE2             	; The ten control codes assigned to the top line of digits when the shift
0674+  BEE2             	; key is pressed.
0675+  BEE2 0C          CTL_CODES:  DEFB $0C           ; DELETE
0676+  BEE3 07          	DEFB $07                     ; EDIT
0677+  BEE4 06          	DEFB $06                     ; CAPS LOCK
0678+  BEE5 04          	DEFB $04                     ; TRUE VIDEO
0679+  BEE6 05          	DEFB $05                     ; INVERSE VIDEO
0680+  BEE7 08          	DEFB $08                     ; CURSOR LEFT
0681+  BEE8 0A          	DEFB $0A                     ; CURSOR DOWN
0682+  BEE9 0B          	DEFB $0B                     ; CURSOR UP
0683+  BEEA 09          	DEFB $09                     ; CURSOR RIGHT
0684+  BEEB 0F          	DEFB $0F                     ; GRAPHICS
0685+  BEEC             	
0686+  BEEC             	;;;$026A
0687+  BEEC             	; The 26 red symbols assigned to the alphabetic characters of the keyboard.
0688+  BEEC             	; The ten single - character digit symbols are converted without the aid of
0689+  BEEC             	; a table using subtraction and minor manipulation.
0690+  BEEC E2          SYM_CODES:  DEFB $E2           ; STOP
0691+  BEED 2A          	DEFB $2A                     ; * 
0692+  BEEE 3F          	DEFB $3F                     ; ?
0693+  BEEF CD          	DEFB $CD                     ; STEP
0694+  BEF0 C8          	DEFB $C8                     ; >=
0695+  BEF1 CC          	DEFB $CC                     ; TO
0696+  BEF2 CB          	DEFB $CB                     ; THEN
0697+  BEF3 5E          	DEFB $5E                     ; ^
0698+  BEF4 AC          	DEFB $AC                     ; AT
0699+  BEF5 2D          	DEFB $2D                     ; - 
0700+  BEF6 2B          	DEFB $2B                     ; + 
0701+  BEF7 3D          	DEFB $3D                     ; =
0702+  BEF8 2E          	DEFB $2E                     ; .
0703+  BEF9 2C          	DEFB $2C                     ;, 
0704+  BEFA 3B          	DEFB $3B                     ; ;
0705+  BEFB 22          	DEFB $22                     ; "
0706+  BEFC C7          	DEFB $C7                     ; <=
0707+  BEFD 3C          	DEFB $3C                     ; <
0708+  BEFE C3          	DEFB $C3                     ; NOT
0709+  BEFF 3E          	DEFB $3E                     ; >
0710+  BF00 C5          	DEFB $C5                     ; OR
0711+  BF01 2F          	DEFB $2F                     ; / 
0712+  BF02 C9          	DEFB $C9                     ; <>
0713+  BF03 60          	DEFB $60                     ; pound
0714+  BF04 C6          	DEFB $C6                     ; AND
0715+  BF05 3A          	DEFB $3A                     ; :
0716+  BF06             	
0717+  BF06             	;;;$0284
0718+  BF06             	; The ten keywords assigned to the digits in extended mode.
0719+  BF06             	; The remaining red keywords below the keys.
0720+  BF06 D0          E_DIGITS:  DEFB $D0            ; FORMAT
0721+  BF07 CE          	DEFB $CE                     ; DEF FN
0722+  BF08 A8          	DEFB $A8                     ; FN
0723+  BF09 CA          	DEFB $CA                     ; LINE
0724+  BF0A D3          	DEFB $D3                     ; OPEN#
0725+  BF0B D4          	DEFB $D4                     ; CLOSE#
0726+  BF0C D1          	DEFB $D1                     ; MOVE
0727+  BF0D D2          	DEFB $D2                     ; ERASE
0728+  BF0E A9          	DEFB $A9                     ; POINT
0729+  BF0F CF          	DEFB $CF                     ; CAT
0730+  BF10             	
0731+  BF10             	endmodule
0732+  BF10             
1176   BF10                                                         include screen.asm
0001+  BF10             	module SCREEN
0002+  BF10             	
0003+  BF10 00          POS_Y:  db 0
0004+  BF11 00          POS_X:  db 0
0005+  BF12 00          WRAP:  db 0
0006+  BF13             	
0007+  BF13             	; clear screen with border
0008+  BF13             	; A - color
0009+  BF13 21 00 40    CLEAR:  LD HL, 16384           ; Start address of screen bitmap
0010+  BF16 11 01 40    	LD DE, 16385                 ; Address + 1
0011+  BF19 01 00 18    	LD BC, 6144                  ; Length of bitmap memory to clear
0012+  BF1C 36 00       	LD (HL), 0                   ; Set the first byte to 0
0013+  BF1E ED B0       	LDIR                         ; Copy this byte to the second, and so on
0014+  BF20 01 FF 02    	LD BC, 767                   ; Length of attribute memory, less one to clear
0015+  BF23 77          	LD (HL), A                   ; Set the first byte to A
0016+  BF24 ED B0       	LDIR                         ; Copy this byte to the second, and so on
0017+  BF26 1F          	RRA
0018+  BF27 1F          	RRA
0019+  BF28 1F          	RRA
0020+  BF29 D3 FE       	OUT (254), A
0021+  BF2B 21 10 BF    	LD HL, POS_Y
0022+  BF2E 36 00       	ld (HL), 0
0023+  BF30 23          	INC HL
0024+  BF31 36 00       	ld (HL), 0
0025+  BF33 C9          	RET
0026+  BF34             	
0027+  BF34             PRINT_TEXT_WRAP: 
0028+  BF34 AF          	XOR A
0029+  BF35 32 12 BF    	LD (WRAP),A
0030+  BF38 C5          	PUSH BC
0031+  BF39             PRINT_TEXT_WRAP_LOOP: 
0032+  BF39 E5          	PUSH HL
0033+  BF3A 06 00       	LD B, 0
0034+  BF3C 7E          SEARCH_13_LOOP:  LD A, (HL)
0035+  BF3D FE 0D       	CP '\r'
0036+  BF3F 28 0B       	JR Z, DELIM_CHAR_FOUND
0037+  BF41 FE 20       	CP ' '
0038+  BF43 28 07       	JR Z, DELIM_CHAR_FOUND
0039+  BF45 B7          	OR A
0040+  BF46 28 04       	JR Z, DELIM_CHAR_FOUND
0041+  BF48 23          	INC HL
0042+  BF49 04          	INC B
0043+  BF4A 18 F0       	JR SEARCH_13_LOOP
0044+  BF4C             DELIM_CHAR_FOUND: 
0045+  BF4C F5          	PUSH AF
0046+  BF4D 3A 11 BF    	LD A, (POS_X)
0047+  BF50 80          	ADD B
0048+  BF51 FE 21       	CP 33                        ; screen width + 1
0049+  BF53 38 0A       	JR C, PRINT_WORD_WRAP
0050+  BF55 3E 0D       	LD A, '\r'
0051+  BF57 CD E7 BF    	CALL PRINT_CHAR
0052+  BF5A 3E 01       	LD A,1
0053+  BF5C 32 12 BF    	LD (WRAP),A
0054+  BF5F F1          PRINT_WORD_WRAP:  POP AF
0055+  BF60 E1          	POP HL
0056+  BF61 4F          	LD C, A
0057+  BF62             PRINT_WORD_LOOP:  
0058+  BF62 7E          	LD A, (HL)
0059+  BF63 B9          	CP C
0060+  BF64 28 06       	JR Z, PRINT_WORD_END
0061+  BF66 CD E7 BF    	CALL PRINT_CHAR
0062+  BF69 23          	INC HL
0063+  BF6A 18 F6       	JR PRINT_WORD_LOOP
0064+  BF6C             PRINT_WORD_END: 
0065+  BF6C B7          	OR A
0066+  BF6D 28 1D       	JR Z, PRINT_ZERO_EXIT
0067+  BF6F E5          	PUSH HL
0068+  BF70 F5          	PUSH AF
0069+  BF71 3A 12 BF    	LD A,(WRAP)
0070+  BF74 B7          	OR A
0071+  BF75 28 0C       	JR Z,WRAP_NOT_COLUMN
0072+  BF77 3A 11 BF    	LD A,(POS_X)
0073+  BF7A B7          	OR A
0074+  BF7B 20 06       	JR NZ,WRAP_NOT_COLUMN
0075+  BF7D F1          	POP AF
0076+  BF7E FE 20       	CP 32
0077+  BF80 28 05       	JR Z, WRAP_SKIP_SPACE
0078+  BF82 F5          	PUSH AF
0079+  BF83 F1          WRAP_NOT_COLUMN: 	POP AF
0080+  BF84 CD E7 BF    	CALL PRINT_CHAR
0081+  BF87 E1          WRAP_SKIP_SPACE: 	POP HL
0082+  BF88 23          	INC HL
0083+  BF89 18 AE       	JR PRINT_TEXT_WRAP_LOOP
0084+  BF8B             END_CHAR_FOUND: 
0085+  BF8B E1          	POP HL
0086+  BF8C             PRINT_ZERO_EXIT: 	
0087+  BF8C C1          	POP BC
0088+  BF8D C9          	RET
0089+  BF8E             	
0090+  BF8E             	
0091+  BF8E 06 00       LENGTH255:  LD B, 0
0092+  BF90 E5          	PUSH HL
0093+  BF91 7E          LENGTH255_GET:  LD A, (HL)
0094+  BF92 B7          	OR A
0095+  BF93 28 09       	JR Z, LENGTH255_RET
0096+  BF95 23          	INC HL
0097+  BF96 04          	INC B
0098+  BF97 3E FF       	LD A, 255
0099+  BF99 B8          	CP B
0100+  BF9A 28 02       	JR Z, LENGTH255_RET
0101+  BF9C 18 F3       	JR LENGTH255_GET
0102+  BF9E E1          LENGTH255_RET:  POP HL
0103+  BF9F C9          	RET
0104+  BFA0             	
0105+  BFA0 01 00 00    LENGTH:  LD BC, 0
0106+  BFA3 E5          	PUSH HL
0107+  BFA4 7E          LENGTH_GET:  LD A, (HL)
0108+  BFA5 B7          	OR A
0109+  BFA6 28 04       	JR Z, LENGTH_RET
0110+  BFA8 23          	INC HL
0111+  BFA9 03          	INC BC
0112+  BFAA 18 F8       	JR LENGTH_GET
0113+  BFAC E1          LENGTH_RET:  POP HL
0114+  BFAD C9          	RET
0115+  BFAE             	
0116+  BFAE             	;==================================
0117+  BFAE             	; - =Процедура печати стрингов= - 
0118+  BFAE             	; HL - адрес строки текста
0119+  BFAE             	;0 - конец текста
0120+  BFAE             	
0121+  BFAE 7E          PRINT_TEXT:  LD A, (HL)        ;взять код символа
0122+  BFAF A7          	AND A                        ;проверить на ноль
0123+  BFB0 C8          	RET Z                        ;совпало - выйти
0124+  BFB1 E5          	PUSH HL
0125+  BFB2 CD E7 BF    	CALL PRINT_CHAR              ;нужная Вам процедура печати
0126+  BFB5 E1          	POP HL
0127+  BFB6 23          	INC HL
0128+  BFB7 18 F5       	JR PRINT_TEXT
0129+  BFB9             	
0130+  BFB9             	;==================================
0131+  BFB9             	; - =Процедура печати стрингов= - 
0132+  BFB9             	;вх: DE - координаты
0133+  BFB9             	; HL - адрес строки текста
0134+  BFB9             	;поддерживаются токены:
0135+  BFB9             	;0 - конец текста
0136+  BFB9             	;17, X, Y - установка координат печати
0137+  BFB9             	;==================================
0138+  BFB9 7E          PRINT_TEXT_AT:  LD A, (HL)     ;взять код символа
0139+  BFBA A7          	AND A                        ;проверить на ноль
0140+  BFBB C8          	RET Z                        ;совпало - выйти
0141+  BFBC FE 11       	CP 17                        ;проверка на токен
0142+  BFBE C2 C9 BF    	JP NZ, Pr_Cont
0143+  BFC1 23          	INC HL                       ;установка новых координат
0144+  BFC2 5E          	LD E, (HL)
0145+  BFC3 23          	INC HL
0146+  BFC4 56          	LD D, (HL)
0147+  BFC5 23          	INC HL
0148+  BFC6 C3 B9 BF    	JP PRINT_TEXT_AT
0149+  BFC9 E5          Pr_Cont:  PUSH HL
0150+  BFCA D5          	PUSH DE
0151+  BFCB CD E7 BF    	CALL PRINT_CHAR              ;нужная Вам процедура печати
0152+  BFCE D1          	POP DE
0153+  BFCF E1          	POP HL
0154+  BFD0 1C          	INC E
0155+  BFD1 23          	INC HL
0156+  BFD2 C3 B9 BF    	JP PRINT_TEXT_AT
0157+  BFD5             	
0158+  BFD5             	; print one digit
0159+  BFD5 F5          PRINT_DIGIT:  PUSH AF
0160+  BFD6 E6 0F       	AND 0xf
0161+  BFD8 C6 30       	ADD A, 0x30
0162+  BFDA CD E7 BF    	CALL PRINT_CHAR
0163+  BFDD F1          	POP AF
0164+  BFDE C9          	RET
0165+  BFDF             	
0166+  BFDF F5          PRINT_CR:  PUSH AF
0167+  BFE0 3E 0D       	LD A, '\r'
0168+  BFE2 CD E7 BF    	CALL PRINT_CHAR
0169+  BFE5 F1          	POP AF
0170+  BFE6 C9          	RET
0171+  BFE7             	;=====печать символа 8х8 (fast) =====
0172+  BFE7             	;A - код символа
0173+  BFE7             PRINT_CHAR: 
0174+  BFE7 E5          	PUSH HL
0175+  BFE8 D5          	PUSH DE
0176+  BFE9 C5          	PUSH BC
0177+  BFEA F5          	PUSH AF
0178+  BFEB FE 0D       	CP '\r'
0179+  BFED 28 06       	JR Z, PRINT_13
0180+  BFEF FE 08       	CP 8
0181+  BFF1 28 07       	JR Z, PRINT_8
0182+  BFF3 18 18       	JR PRINT_SYM
0183+  BFF5 21 11 BF    PRINT_13:  LD HL, POS_X
0184+  BFF8 18 28       	JR LINE_END
0185+  BFFA 21 11 BF    PRINT_8:  LD HL, POS_X
0186+  BFFD 7E          	LD A, (HL)
0187+  BFFE 3D          	DEC A
0188+  BFFF 77          	LD (HL), A
0189+  C000 FE FF       	CP 255
0190+  C002 20 32       	JR NZ, PRINT_RET
0191+  C004 36 00       	LD (HL), 0
0192+  C006 23          	INC HL
0193+  C007 7E          	LD A, (HL)
0194+  C008 3D          	DEC A
0195+  C009 FE FF       	CP 255
0196+  C00B 18 29       	JR PRINT_RET
0197+  C00D 21 10 BF    PRINT_SYM:  LD HL, POS_Y
0198+  C010 56          	LD D, (HL)
0199+  C011 23          	INC HL
0200+  C012 5E          	LD E, (HL)
0201+  C013 CD 3B C0    	CALL PRINT_CHAR_ADDR
0202+  C016 21 11 BF    	LD HL, POS_X
0203+  C019 7E          	LD A, (HL)
0204+  C01A 3C          	INC A
0205+  C01B FE 20       	CP ' '
0206+  C01D 30 03       	JR NC, LINE_END
0207+  C01F 77          	LD (HL), A
0208+  C020 18 14       	JR PRINT_RET
0209+  C022             LINE_END: 
0210+  C022 AF          	XOR A
0211+  C023 77          	LD (HL), A
0212+  C024 2B          	DEC HL
0213+  C025 7E          	LD A, (HL)
0214+  C026 3C          	INC A
0215+  C027 FE 18       	CP 24
0216+  C029 30 03       	JR NC, SCREEN_END
0217+  C02B 77          	LD (HL), A
0218+  C02C 18 08       	JR PRINT_RET
0219+  C02E             SCREEN_END: 
0220+  C02E 3D          	DEC A
0221+  C02F 77          	LD (HL), A
0222+  C030 CD 72 C0    	CALL SCROLL_ALL
0223+  C033 CD 96 C1    	CALL CL_LINE
0224+  C036 F1          PRINT_RET:  POP AF
0225+  C037 C1          	POP BC
0226+  C038 D1          	POP DE
0227+  C039 E1          	POP HL
0228+  C03A C9          	RET
0229+  C03B             	
0230+  C03B             	;=====печать символа 8х8 (fast) =====
0231+  C03B             	;in: DE - координаты, A - код символа
0232+  C03B             PRINT_CHAR_ADDR: 
0233+  C03B 6F          	LD L, A                      ;в HL - код симво - 
0234+  C03C 26 00       	LD H, 0                      ;ла, который мы
0235+  C03E 29          	ADD HL, HL
0236+  C03F 29          	ADD HL, HL
0237+  C040 29          	ADD HL, HL
0238+  C041 01 00 3C    	LD BC, 0x3C00                ;складываем с
0239+  C044 09          	ADD HL, BC                   ;адресом начала фонта
0240+  C045 7A          	LD A, D                      ;знакомая нам уже
0241+  C046 E6 07       	AND 7                        ;процедурка ;)
0242+  C048 0F          	RRCA
0243+  C049 0F          	RRCA
0244+  C04A 0F          	RRCA
0245+  C04B B3          	OR E
0246+  C04C 5F          	LD E, A
0247+  C04D 7A          	LD A, D
0248+  C04E E6 18       	AND 24
0249+  C050 F6 40       	OR 64
0250+  C052 57          	LD D, A
0251+  C053             	DUP 7                        ;директивы ALASM!!!
0252+  C053 7E          >	LD A, (HL)                   ;берем байт из фонта
0253+  C054 12          >	LD (DE), A                   ;и кладем в экран
0254+  C055 23          >	INC HL                       ;приращение fnt adr
0255+  C056 14          >	INC D                        ;приращение scr adr
0252+  C057 7E          >	LD A, (HL)                   ;берем байт из фонта
0253+  C058 12          >	LD (DE), A                   ;и кладем в экран
0254+  C059 23          >	INC HL                       ;приращение fnt adr
0255+  C05A 14          >	INC D                        ;приращение scr adr
0252+  C05B 7E          >	LD A, (HL)                   ;берем байт из фонта
0253+  C05C 12          >	LD (DE), A                   ;и кладем в экран
0254+  C05D 23          >	INC HL                       ;приращение fnt adr
0255+  C05E 14          >	INC D                        ;приращение scr adr
0252+  C05F 7E          >	LD A, (HL)                   ;берем байт из фонта
0253+  C060 12          >	LD (DE), A                   ;и кладем в экран
0254+  C061 23          >	INC HL                       ;приращение fnt adr
0255+  C062 14          >	INC D                        ;приращение scr adr
0252+  C063 7E          >	LD A, (HL)                   ;берем байт из фонта
0253+  C064 12          >	LD (DE), A                   ;и кладем в экран
0254+  C065 23          >	INC HL                       ;приращение fnt adr
0255+  C066 14          >	INC D                        ;приращение scr adr
0252+  C067 7E          >	LD A, (HL)                   ;берем байт из фонта
0253+  C068 12          >	LD (DE), A                   ;и кладем в экран
0254+  C069 23          >	INC HL                       ;приращение fnt adr
0255+  C06A 14          >	INC D                        ;приращение scr adr
0252+  C06B 7E          >	LD A, (HL)                   ;берем байт из фонта
0253+  C06C 12          >	LD (DE), A                   ;и кладем в экран
0254+  C06D 23          >	INC HL                       ;приращение fnt adr
0255+  C06E 14          >	INC D                        ;приращение scr adr
0257+  C06F 7E          	LD A, (HL)
0258+  C070 12          	LD (DE), A
0259+  C071 C9          	RET
0260+  C072             	
0261+  C072             	;(c) cooper / RSM / P7S ;возвращаемся...
0262+  C072             	
0263+  C072 11 00 40    SCROLL_ALL:  LD DE, #4000      ;откуда
0264+  C075 21 20 40    	LD HL, #4020                 ;куда
0265+  C078 06 17       	LD B, #17                    ;кол - во строк
0266+  C07A             	
0267+  C07A C5          MAIN:  PUSH BC
0268+  C07B CD B2 C0    	CALL SCROLL                  ;вызов проц.сдвига
0269+  C07E CD 9C C0    	CALL LL693E                  ;служебные процедуры (на стр. вверх)
0270+  C081 CD A7 C0    	CALL LL6949                  ;служебные процедуры (на стр. вниз)
0271+  C084 C1          	POP BC
0272+  C085 10 F3       	DJNZ MAIN
0273+  C087 C9          	RET
0274+  C088             	
0275+  C088             	;а это собственно и есть служебные процедуры
0276+  C088             	;где какая, разберетесь сами, ok?
0277+  C088 7D          LL692A:  LD A, L
0278+  C089 D6 20       	SUB #20
0279+  C08B 6F          	LD L, A
0280+  C08C D0          	RET NC
0281+  C08D 7C          	LD A, H
0282+  C08E D6 08       	SUB #08
0283+  C090 67          	LD H, A
0284+  C091 C9          	RET
0285+  C092             	
0286+  C092 7B          LL6934:  LD A, E
0287+  C093 D6 20       	SUB #20
0288+  C095 5F          	LD E, A
0289+  C096 D0          	RET NC
0290+  C097 7A          	LD A, D
0291+  C098 D6 08       	SUB #08
0292+  C09A 57          	LD D, A
0293+  C09B C9          	RET
0294+  C09C             	
0295+  C09C 24          LL693E:  INC H
0296+  C09D 7D          	LD A, L
0297+  C09E D6 E0       	SUB #E0
0298+  C0A0 6F          	LD L, A
0299+  C0A1 D0          	RET NC
0300+  C0A2 7C          	LD A, H
0301+  C0A3 D6 08       	SUB #08
0302+  C0A5 67          	LD H, A
0303+  C0A6 C9          	RET
0304+  C0A7             	
0305+  C0A7 14          LL6949:  INC D
0306+  C0A8 7B          	LD A, E
0307+  C0A9 D6 E0       	SUB #E0
0308+  C0AB 5F          	LD E, A
0309+  C0AC D0          	RET NC
0310+  C0AD 7A          	LD A, D
0311+  C0AE D6 08       	SUB #08
0312+  C0B0 57          	LD D, A
0313+  C0B1 C9          	RET
0314+  C0B2             	
0315+  C0B2             	;непосредственный scroll screen
0316+  C0B2 E5          SCROLL:  PUSH HL
0317+  C0B3 D5          	PUSH DE
0318+  C0B4 7A          	LD A, D
0319+  C0B5 0F          	RRCA
0320+  C0B6 0F          	RRCA
0321+  C0B7 0F          	RRCA
0322+  C0B8 E6 03       	AND #03
0323+  C0BA F6 58       	OR #58
0324+  C0BC 57          	LD D, A
0325+  C0BD 7C          	LD A, H
0326+  C0BE 0F          	RRCA
0327+  C0BF 0F          	RRCA
0328+  C0C0 0F          	RRCA
0329+  C0C1 E6 03       	AND #03
0330+  C0C3 F6 58       	OR #58
0331+  C0C5 67          	LD H, A
0332+  C0C6             	DUP 32
0333+  C0C6 ED A0       >	LDI
0333+  C0C8 ED A0       >	LDI
0333+  C0CA ED A0       >	LDI
0333+  C0CC ED A0       >	LDI
0333+  C0CE ED A0       >	LDI
0333+  C0D0 ED A0       >	LDI
0333+  C0D2 ED A0       >	LDI
0333+  C0D4 ED A0       >	LDI
0333+  C0D6 ED A0       >	LDI
0333+  C0D8 ED A0       >	LDI
0333+  C0DA ED A0       >	LDI
0333+  C0DC ED A0       >	LDI
0333+  C0DE ED A0       >	LDI
0333+  C0E0 ED A0       >	LDI
0333+  C0E2 ED A0       >	LDI
0333+  C0E4 ED A0       >	LDI
0333+  C0E6 ED A0       >	LDI
0333+  C0E8 ED A0       >	LDI
0333+  C0EA ED A0       >	LDI
0333+  C0EC ED A0       >	LDI
0333+  C0EE ED A0       >	LDI
0333+  C0F0 ED A0       >	LDI
0333+  C0F2 ED A0       >	LDI
0333+  C0F4 ED A0       >	LDI
0333+  C0F6 ED A0       >	LDI
0333+  C0F8 ED A0       >	LDI
0333+  C0FA ED A0       >	LDI
0333+  C0FC ED A0       >	LDI
0333+  C0FE ED A0       >	LDI
0333+  C100 ED A0       >	LDI
0333+  C102 ED A0       >	LDI
0333+  C104 ED A0       >	LDI
0335+  C106 D1          	POP DE
0336+  C107 E1          	POP HL
0337+  C108 01 F8 00    	LD BC, #00F8
0338+  C10B C3 10 C1    	JP LOOP2
0339+  C10E 24          LOOP1:  INC H
0340+  C10F 14          	INC D
0341+  C110             LOOP2:  DUP 31
0342+  C110 ED A0       >	LDI
0342+  C112 ED A0       >	LDI
0342+  C114 ED A0       >	LDI
0342+  C116 ED A0       >	LDI
0342+  C118 ED A0       >	LDI
0342+  C11A ED A0       >	LDI
0342+  C11C ED A0       >	LDI
0342+  C11E ED A0       >	LDI
0342+  C120 ED A0       >	LDI
0342+  C122 ED A0       >	LDI
0342+  C124 ED A0       >	LDI
0342+  C126 ED A0       >	LDI
0342+  C128 ED A0       >	LDI
0342+  C12A ED A0       >	LDI
0342+  C12C ED A0       >	LDI
0342+  C12E ED A0       >	LDI
0342+  C130 ED A0       >	LDI
0342+  C132 ED A0       >	LDI
0342+  C134 ED A0       >	LDI
0342+  C136 ED A0       >	LDI
0342+  C138 ED A0       >	LDI
0342+  C13A ED A0       >	LDI
0342+  C13C ED A0       >	LDI
0342+  C13E ED A0       >	LDI
0342+  C140 ED A0       >	LDI
0342+  C142 ED A0       >	LDI
0342+  C144 ED A0       >	LDI
0342+  C146 ED A0       >	LDI
0342+  C148 ED A0       >	LDI
0342+  C14A ED A0       >	LDI
0342+  C14C ED A0       >	LDI
0344+  C14E 7E          	LD A, (HL)
0345+  C14F 12          	LD (DE), A
0346+  C150 24          	INC H
0347+  C151 14          	INC D
0348+  C152             	DUP 31
0349+  C152 ED A8       >	LDD
0349+  C154 ED A8       >	LDD
0349+  C156 ED A8       >	LDD
0349+  C158 ED A8       >	LDD
0349+  C15A ED A8       >	LDD
0349+  C15C ED A8       >	LDD
0349+  C15E ED A8       >	LDD
0349+  C160 ED A8       >	LDD
0349+  C162 ED A8       >	LDD
0349+  C164 ED A8       >	LDD
0349+  C166 ED A8       >	LDD
0349+  C168 ED A8       >	LDD
0349+  C16A ED A8       >	LDD
0349+  C16C ED A8       >	LDD
0349+  C16E ED A8       >	LDD
0349+  C170 ED A8       >	LDD
0349+  C172 ED A8       >	LDD
0349+  C174 ED A8       >	LDD
0349+  C176 ED A8       >	LDD
0349+  C178 ED A8       >	LDD
0349+  C17A ED A8       >	LDD
0349+  C17C ED A8       >	LDD
0349+  C17E ED A8       >	LDD
0349+  C180 ED A8       >	LDD
0349+  C182 ED A8       >	LDD
0349+  C184 ED A8       >	LDD
0349+  C186 ED A8       >	LDD
0349+  C188 ED A8       >	LDD
0349+  C18A ED A8       >	LDD
0349+  C18C ED A8       >	LDD
0349+  C18E ED A8       >	LDD
0351+  C190 7E          	LD A, (HL)
0352+  C191 12          	LD (DE), A
0353+  C192 EA 0E C1    	JP PE, LOOP1
0354+  C195 C9          	RET
0355+  C196             	
0356+  C196             CL_LINE: 
0357+  C196 21 E0 50    	LD HL, 16384 + 2048 * 2 + 32 * 7 ; Start address of screen bitmap
0358+  C199 54 5D       	LD DE, HL                    ; Address + 1
0359+  C19B 13          	INC DE
0360+  C19C 06 08       	LD B, 8
0361+  C19E C5          CL_LINE_LOOP:  PUSH BC
0362+  C19F 01 1F 00    	LD BC, 31                    ; Length of bitmap memory to clear
0363+  C1A2 36 00       	LD (HL), 0                   ; Set the first byte to 0
0364+  C1A4 ED B0       	LDIR
0365+  C1A6 01 E1 00    	LD BC, 256 + 1 - 32
0366+  C1A9 09          	ADD HL, BC
0367+  C1AA 54 5D       	LD DE, HL                    ; Address + 1
0368+  C1AC 13          	INC DE
0369+  C1AD C1          	POP BC
0370+  C1AE 10 EE       	DJNZ CL_LINE_LOOP
0371+  C1B0 C9          	RET
0372+  C1B1             	
0373+  C1B1             	endmodule
0374+  C1B1             
1177   C1B1                                                         include output.asm
0001+  C1B1             	module OUTPUT
0002+  C1B1             
0003+  C1B1             ;
0004+  C1B1             ; Title:	ZX Spectrum Standard Output Routines
0005+  C1B1             ; Author:	Dean Belfield
0006+  C1B1             ; Created:	29/07/2011
0007+  C1B1             ; Last Updated:	08/02/2020
0008+  C1B1             ;
0009+  C1B1             ; Requires:
0010+  C1B1             ;
0011+  C1B1             ; Modinfo:
0012+  C1B1             ;
0013+  C1B1             ; 02/07/2012:	Added Pixel_Address_Down and Pixel_Address_Up routines
0014+  C1B1             ; 04/07/2012:	Moved Clear_Screen to Screen_Buffer
0015+  C1B1             ; 08/02/2010:	Added Print_BC
0016+  C1B1             ;		Moved Clear_Screen into here (originally in screen_buffer.z80)
0017+  C1B1             ;		All output routines refactored to use HL for screen address
0018+  C1B1             ;		Added Fill_Attr routine
0019+  C1B1             ;
0020+  C1B1             
0021+  C1B1             Set_Border: 
0022+  C1B1 D3 FE            			out (254),a
0023+  C1B3 C9          				ret
0024+  C1B4             
0025+  C1B4             ; Simple clear-screen routine
0026+  C1B4             ; Uses LDIR to block clear memory
0027+  C1B4             ; A:  Colour to clear attribute block of memory with
0028+  C1B4             ;
0029+  C1B4 21 00 40    Clear_Screen: 		LD HL,16384			; Start address of screen bitmap
0030+  C1B7 11 01 40    			LD DE,16385			; Address + 1
0031+  C1BA 01 00 18    			LD BC,6144			; Length of bitmap memory to clear
0032+  C1BD 36 00       			LD (HL),0			; Set the first byte to 0
0033+  C1BF ED B0       			LDIR				; Copy this byte to the second, and so on
0034+  C1C1 01 FF 02    			LD BC,767			; Length of attribute memory, less one to clear
0035+  C1C4 77          			LD (HL),A			; Set the first byte to A
0036+  C1C5 ED B0       			LDIR				; Copy this byte to the second, and so on
0037+  C1C7 C9          			RET
0038+  C1C8             
0039+  C1C8             ; Fill a box of the screen with a solid colour
0040+  C1C8             ;  A: The colour
0041+  C1C8             ; HL: Address in the attribute map
0042+  C1C8             ;  C: Width
0043+  C1C8             ;  B: Height
0044+  C1C8             ;
0045+  C1C8 11 20 00    Fill_Attr: 		LD DE,32
0046+  C1CB E5          1: 			PUSH HL	
0047+  C1CC C5          			PUSH BC
0048+  C1CD 77          2: 			LD (HL), A
0049+  C1CE 2C          			INC L
0050+  C1CF 0D          			DEC C
0051+  C1D0 20 FB       			JR NZ, 2B
0052+  C1D2 C1          			POP BC
0053+  C1D3 E1          			POP HL
0054+  C1D4 19          			ADD HL,DE
0055+  C1D5 10 F4       			DJNZ 1B
0056+  C1D7 C9          			RET
0057+  C1D8             
0058+  C1D8             ; Print String Data
0059+  C1D8             ; First two bytes of string contain X and Y char position, then the string
0060+  C1D8             ; Individual strings are terminated with 0xFE
0061+  C1D8             ; End of data is terminated with 0xFF
0062+  C1D8             ; IX: Address of string
0063+  C1D8             ;
0064+  C1D8 DD 6E 00    Print_String: 		LD L,(IX+0)			; Fetch the X coordinate
0065+  C1DB DD 23       			INC IX				; Increase HL to the next memory location
0066+  C1DD DD 66 00    			LD H,(IX+0)			; Fetch the Y coordinate
0067+  C1E0 DD 23       			INC IX				; Increase HL to the next memory location
0068+  C1E2 CD F6 C1    			CALL Get_Char_Address		; Calculate the screen address (in DE)
0069+  C1E5 DD 7E 00    Print_String_0: 		LD A,(IX)			; Fetch the character to print
0070+  C1E8 DD 23       			INC IX				; Increase HL to the next character
0071+  C1EA FE FE       			CP 0xFE				; Compare with 0xFE
0072+  C1EC 28 EA       			JR Z,Print_String		; If it is equal to 0xFE then loop back to print next string
0073+  C1EE D0          			RET NC				; If it is greater or equal to (carry bit set) then
0074+  C1EF CD 89 C2    			CALL Print_Char			; Print the character
0075+  C1F2 2C          			INC L				; Go to the next screen address
0076+  C1F3 18 F0       			JR Print_String_0		; Loop back to print next character
0077+  C1F5 C9          			RET
0078+  C1F6             
0079+  C1F6             ; Get screen address
0080+  C1F6             ; H = Y character position
0081+  C1F6             ; L = X character position
0082+  C1F6             ; Returns address in HL
0083+  C1F6             ;
0084+  C1F6 7C          Get_Char_Address: 	LD A,H
0085+  C1F7 E6 07       			AND %00000111
0086+  C1F9 1F          			RRA
0087+  C1FA 1F          			RRA
0088+  C1FB 1F          			RRA
0089+  C1FC 1F          			RRA
0090+  C1FD B5          			OR L
0091+  C1FE 6F          			LD L,A
0092+  C1FF 7C          			LD A,H
0093+  C200 E6 18       			AND %00011000
0094+  C202 F6 40       			OR %01000000
0095+  C204 67          			LD H,A
0096+  C205 C9          			RET				; Returns screen address in HL
0097+  C206             
0098+  C206             ; Move HL down one character line
0099+  C206             ;
0100+  C206 7D          Char_Address_Down: 	LD A, L
0101+  C207 C6 20       			ADD A, 32
0102+  C209 6F          			LD L, A
0103+  C20A D0          			RET NC 
0104+  C20B 7C          			LD A, H 
0105+  C20C C6 08       			ADD A, 8 
0106+  C20E 67          			LD H, A
0107+  C20F C9          			RET 
0108+  C210             
0109+  C210             ; Get screen address
0110+  C210             ; B = Y pixel position
0111+  C210             ; C = X pixel position
0112+  C210             ; Returns address in HL and pixel position within character in A
0113+  C210             ;
0114+  C210 78          Get_Pixel_Address: 	LD A,B				; Calculate Y2,Y1,Y0
0115+  C211 E6 07       			AND %00000111			; Mask out unwanted bits
0116+  C213 F6 40       			OR %01000000			; Set base address of screen
0117+  C215 67          			LD H,A				; Store in H
0118+  C216 78          			LD A,B				; Calculate Y7,Y6
0119+  C217 1F          			RRA				; Shift to position
0120+  C218 1F          			RRA
0121+  C219 1F          			RRA
0122+  C21A E6 18       			AND %00011000			; Mask out unwanted bits
0123+  C21C B4          			OR H				; OR with Y2,Y1,Y0
0124+  C21D 67          			LD H,A				; Store in H
0125+  C21E 78          			LD A,B				; Calculate Y5,Y4,Y3
0126+  C21F 17          			RLA				; Shift to position
0127+  C220 17          			RLA
0128+  C221 E6 E0       			AND %11100000			; Mask out unwanted bits
0129+  C223 6F          			LD L,A				; Store in L
0130+  C224 79          			LD A,C				; Calculate X4,X3,X2,X1,X0
0131+  C225 1F          			RRA				; Shift into position
0132+  C226 1F          			RRA
0133+  C227 1F          			RRA
0134+  C228 E6 1F       			AND %00011111			; Mask out unwanted bits
0135+  C22A B5          			OR L				; OR with Y5,Y4,Y3
0136+  C22B 6F          			LD L,A				; Store in L
0137+  C22C 79          			LD A,C
0138+  C22D E6 07       			AND 7
0139+  C22F C9          			RET
0140+  C230             
0141+  C230             ; Move HL down one pixel line
0142+  C230             ;
0143+  C230 24          Pixel_Address_Down: 	INC H				; Go down onto the next pixel line
0144+  C231 7C          			LD A,H				; Check if we have gone onto next character boundary
0145+  C232 E6 07       			AND 7
0146+  C234 C0          			RET NZ				; No, so skip the next bit
0147+  C235 7D          			LD A,L				; Go onto the next character line
0148+  C236 C6 20       			ADD A,32
0149+  C238 6F          			LD L,A
0150+  C239 D8          			RET C				; Check if we have gone onto next third of screen
0151+  C23A 7C          			LD A,H				; Yes, so go onto next third
0152+  C23B D6 08       			SUB 8
0153+  C23D 67          			LD H,A
0154+  C23E C9          			RET
0155+  C23F             
0156+  C23F             ; Move HL up one pixel line
0157+  C23F             ;
0158+  C23F 25          Pixel_Address_Up: 	DEC H				; Go up onto the next pixel line
0159+  C240 7C          			LD A,H				; Check if we have gone onto the next character boundary
0160+  C241 E6 07       			AND 7
0161+  C243 FE 07       			CP 7
0162+  C245 C0          			RET NZ
0163+  C246 7D          			LD A,L
0164+  C247 D6 20       			SUB 32
0165+  C249 6F          			LD L,A
0166+  C24A D8          			RET C
0167+  C24B 7C          			LD A,H
0168+  C24C C6 08       			ADD A,8
0169+  C24E 67          			LD H,A
0170+  C24F C9          			RET
0171+  C250             
0172+  C250             ; Print a single BCD value
0173+  C250             ;  A: Character to print
0174+  C250             ; HL: Screen address to print character at
0175+  C250             ;
0175+  C250 DD 7E 00    Print_BCD_8		LD A, (IX) 
0175+  C253 DD 23         INC IX
0176+  C255 CD 6D C2      CALL Print_BCD
0176+  C258 DD 7E 00    Print_BCD_6		LD A, (IX) 
0176+  C25B DD 23         INC IX
0177+  C25D CD 6D C2      CALL Print_BCD
0177+  C260 DD 7E 00    Print_BCD_4		LD A, (IX) 
0177+  C263 DD 23         INC IX
0178+  C265 CD 6D C2      CALL Print_BCD
0178+  C268 DD 7E 00    Print_BCD_2		LD A, (IX) 
0179+  C26B DD 23         INC IX
0180+  C26D F5          Print_BCD: 		PUSH AF				; Store the value
0181+  C26E E6 F0       			AND 0xF0			; Get the top nibble
0182+  C270 1F          			RRA				; Shift into bottom nibble
0183+  C271 1F          			RRA
0184+  C272 1F          			RRA
0185+  C273 1F          			RRA
0186+  C274 C6 30       			ADD A, '0'			; Add to ASCII '0'
0187+  C276 CD 89 C2    			CALL Print_Char			; Print the character
0188+  C279 2C          			INC L				; Move right one space
0189+  C27A F1          			POP AF
0190+  C27B E6 0F       			AND 0x0F			; Get the bottom nibble
0191+  C27D C6 30       			ADD A, '0'			; Add to ASCII '0'
0192+  C27F CD 89 C2    			CALL Print_Char			; Print
0193+  C282 2C          			INC L				; Move right one space
0194+  C283 C9          			RET
0195+  C284             
0196+  C284             ; Print a single character out to an X/Y position
0197+  C284             ;  A: Character to print
0198+  C284             ;  C: X Coordinate
0199+  C284             ;  B: Y Coordinate
0200+  C284             ; DE: Address of character set
0201+  C284             ;
0202+  C284 F5          Print_Char_At: 		PUSH AF
0203+  C285 CD F6 C1    			CALL Get_Char_Address
0204+  C288 F1          			POP AF				; Fall through to Print_Char
0205+  C289             ;
0206+  C289             ; Print a single character out to a screen address
0207+  C289             ;  A:  Character to print
0208+  C289             ;  HL: Screen address to print character at
0209+  C289             ;  DE: Address of character set (if entering at Print_Char_UDG)
0210+  C289             ; No SM code here - needs to be re-enterent if called on interrupt
0211+  C289             ;
0212+  C289 11 00 3C    Print_Char: 		LD DE, 0x3C00			; Address of character set in ROM
0213+  C28C E5          			PUSH HL
0214+  C28D 06 00       			LD B, 0				; Get index into character set
0215+  C28F 4F          			LD C, A
0216+  C290             			DUP 3
0217+  C290 CB 21       >			SLA C
0218+  C292 CB 10       >			RL B
0217+  C294 CB 21       >			SLA C
0218+  C296 CB 10       >			RL B
0217+  C298 CB 21       >			SLA C
0218+  C29A CB 10       >			RL B
0220+  C29C EB          			EX DE, HL
0221+  C29D 09          			ADD HL, BC 
0222+  C29E EB          			EX DE, HL	
0223+  C29F CD A4 C2    			CALL Print_UDG8
0224+  C2A2 E1          			POP HL
0225+  C2A3 C9          			RET 	
0226+  C2A4             
0227+  C2A4             ; Print a UDG (Single Height)
0228+  C2A4             ; DE - Character data
0229+  C2A4             ; HL - Screen address
0230+  C2A4             ;
0231+  C2A4 06 08       Print_UDG8: 		LD B,8				; Loop counter
0232+  C2A6 1A          2: 			LD A,(DE)			; Get the byte from the ROM into A
0233+  C2A7 77          			LD (HL),A			; Stick A onto the screen
0234+  C2A8 13          			INC DE				; Goto next byte of character
0235+  C2A9 24          			INC H				; Goto next line on screen
0236+  C2AA 10 FA       			DJNZ 2B				; Loop around whilst it is Not Zero (NZ)
0237+  C2AC C9          			RET
0238+  C2AD             
0239+  C2AD             			endmodule
1178   C2AD             
1179   C2AD                                                         SAVESNA "adventurea.sna",BASIC_RUNNER
1180   C2AD                                                         SAVEBIN "adventurea.bin",23500, 9000
