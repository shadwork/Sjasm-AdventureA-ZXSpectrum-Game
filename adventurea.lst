0001   0000                                                         DEVICE ZXSPECTRUM48
0002   0000             
0003   0000                                                         include defines.asm
0001+  0000             
0002+  0000             
0003+  0000             	define CLR_BLACK %000000
0004+  0000             	define CLR_BLUE %000001
0005+  0000             	define CLR_RED %000010
0006+  0000             	define CLR_MAGENTA %000011
0007+  0000             	define CLR_GREEN %000100
0008+  0000             	define CLR_CYAN %000101
0009+  0000             	define CLR_WHITE %000111
0010+  0000             
0011+  0000             	define CLR_BRIGHT %1000000
0012+  0000             
0013+  0000               MACRO COLOR ink, paper
0014+  0000~                LD A,(ink + paper<<3) 
0015+  0000               ENDM
0016+  0000             
0004   0000             
0005   0000             	                                        define VAR_FLAG_CANT_DO IX-0x8
0006   0000                                                         define VAR_PROC_PARAM IX-0x7
0007   0000             	                                        define VAR_MORE_PARSING IX-0x6
0008   0000             	                                        define VAR_PROC IX-0x5
0009   0000             	                                        define VAR_CMD_FIRST IX-0x4
0010   0000                                                         define VAR_CMD_SECOND IX-0x3
0011   0000             	                                        define VAR_TEMP IX-0x2
0012   0000             	                                        define VAR_CURRENT_ROOM IX-0x1
0013   0000             	                                        define VAR_START_GAME IX+0x0    
0014   0000                                                         define VAR_ITEMS_COUNT IX+0x1
0015   0000             	                                        define VAR_START_C IX+0x2    
0016   0000                                                         define VAR_LIGHT IX+0x3   
0017   0000                                                         define VAR_START_E IX+0x4                                                                                                                             
0018   0000             
0019   0000                                                         module GAME
0020   0000                                                         org 0x5d40
0021   5D40 00                                                      db 0x00; IX-8 VAR_FLAG_CANT_DO
0022   5D41 00          VAR_PROC_PARAM_ADDR:                         db 0x00; IX-7
0023   5D42 00                                                      db 0x00; IX-6
0024   5D43 00          VAR_PROC_ADDR:                               db 0x00; IX-5
0025   5D44 00          VAR_CMD_FIRST_ADDR:                          db 0x00; IX-4 
0026   5D45 00          VAR_CMD_SECOND_ADDR:                         db 0x00; IX-3
0027   5D46 00          GAME_STATE:                                  db 0x00; IX-2 VAR_TEMP                               
0028   5D47 00          CURRENT_ROOM:                                db 0x00; IX-1 VAR_CURRENT_ROOM
0029   5D48             VARS:                                        ; clear on init 0x1e length = 30
0030   5D48 CD                                                      db 0xCD ; IX+0 VAR_START
0031   5D49 42                                                      db 0x42 ; IX+1 VAR_ITEMS_COUNT
0032   5D4A 6F                                                      db 0x6F ; IX+2 
0033   5D4B CD                                                      db 0xCD ; IX+3 
0034   5D4C 50                                                      db 0x50 ; IX+4
0035   5D4D 72                                                      db 0x72 ; IX+5 
0036   5D4E CD                                                      db 0xCD ; IX+6
0037   5D4F 00                                                      db 0x00 ; IX+7
0038   5D50 55                                                      db 0x55 ; IX+8
0039   5D51 C3                                                      db 0xC3 ; IX+9
0040   5D52 27                                                      db 0x27 ; IX+A
0041   5D53 64                                                      db 0x64 ; IX+B
0042   5D54 E3                                                      db 0xE3 ; IX+C
0043   5D55 F3                                                      db 0xF3 ; IX+D
0044   5D56 D5                                                      db 0xD5 ; IX+E
0045   5D57 C5                                                      db 0xC5 ; IX+F
0046   5D58 DD                                                      db 0xDD ; IX+10
0047   5D59 E5                                                      db 0xE5 ; IX+11
0048   5D5A E5                                                      db 0xE5 ; IX+12
0049   5D5B DD                                                      db 0xDD ; IX+13
0050   5D5C 21                                                      db 0x21 ; IX+14
0051   5D5D 5F                                                      db 0x5F ; IX+15
0052   5D5E 72                                                      db 0x72 ; IX+16
0053   5D5F C9                                                      db 0xC9 ; IX+17
0054   5D60 32                                                      db 0x32 ; IX+18
0055   5D61 0F                                                      db 0x0F ; IX+19
0056   5D62 76                                                      db 0x76 ; IX+1A
0057   5D63 F1                                                      db 0xF1 ; IX+1B
0058   5D64 DD                                                      db 0xDD ; IX+1C
0059   5D65 E1                                                      db 0xE1 ; IX+1D
0060   5D66 C1 D1       VAR_CMD_BUF0:                                dw 0xd1c1
0061   5D68 E1 F5       VAR_CMD_BUF1:                                dw 0xf5e1
0062   5D6A 00 00       VAR_SCORE:                                   dw 0x0000
0063   5D6C 21 48 5D    ENTRY_POINT:                                 LD HL,VARS
0064   5D6F 06 1E                                                   LD B,0x1e
0065   5D71 36 00       CLEAR_VARS:                                LD (HL),0x0
0066   5D73 23                                                      INC HL
0067   5D74 10 FB                                                   DJNZ CLEAR_VARS
0068   5D76 21 00 00                                                LD HL,0x0
0069   5D79 22 6A 5D                                                LD (VAR_SCORE),HL
0070   5D7C CD 3C 63                                                CALL GAME_INIT
0071   5D7F 21 90 69                                                LD HL,ITEMS_BY_ROOM_TABLE_INIT ;copy from
0072   5D82 11 AD 69                                                LD DE,ITEMS_BY_ROOM_TABLE ;copy to
0073   5D85 01 1D 00                                                LD BC,0x1d ;copy size
0074   5D88 ED B0                                                   LDIR
0075   5D8A DD 21 48 5D                                             LD IX,VARS
0076   5D8E DD 36 FF 00                                             LD (VAR_CURRENT_ROOM),0x0 ; starting from room 0
0077   5D92 E5                                                      PUSH HL
0078   5D93 21 CA 69                                                LD HL,TEXT_RESTORE_GAME 
0079   5D96 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0080   5D99 E1                                                      POP HL
0081   5D9A CD 45 63                                                CALL WAIT_KEY
0082   5D9D FE 59                                                   CP 'Y'
0083   5D9F CC 12 63                                                CALL Z,GAME_RESTORED
0084   5DA2 CD 93 63    ENTER_NEW_ROOM:                              CALL INIT_SCREEN
0085   5DA5 AF                                                      XOR A
0086   5DA6 DD BE 00                                                CP (VAR_START_GAME) ; zero here from start
0087   5DA9 28 23                                                   JR Z,PRINT_ROOM
0088   5DAB DD BE 03                                                CP (VAR_LIGHT)
0089   5DAE 28 03                                                   JR Z,LIGHT_CHECK
0090   5DB0 DD 35 03                                                DEC (VAR_LIGHT)
0091   5DB3 3A AD 69    LIGHT_CHECK:                                 LD A,(ITEMS_BY_ROOM_TABLE) ; starting with 0x05
0092   5DB6 DD BE FF                                                CP (VAR_CURRENT_ROOM)
0093   5DB9 28 13                                                   JR Z,PRINT_ROOM
0094   5DBB E5                                                      PUSH HL
0095   5DBC 21 E3 69                                                LD HL,TEXT_EVERYTHING_DARK 
0096   5DBF CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0097   5DC2 E1                                                      POP HL
0098   5DC3 AF                                                      XOR A
0099   5DC4 DD BE 04                                                CP (VAR_START_E)
0100   5DC7 28 03                                                   JR Z,LAB_ram_5e09
0101   5DC9 DD 35 04                                                DEC (VAR_START_E)
0102   5DCC 18 4C       LAB_ram_5e09:                                JR PARSE_DEFAULTS
0103   5DCE 11 A1 63    PRINT_ROOM:                                  LD DE,ROOM_DESC_POINTER 
0104   5DD1 DD 6E FF                                                LD L,(VAR_CURRENT_ROOM)
0105   5DD4 26 00                                                   LD H,0x0
0106   5DD6 29                                                      ADD HL,HL
0107   5DD7 19                                                      ADD HL,DE
0108   5DD8 5E                                                      LD E,(HL) 
0109   5DD9 23                                                      INC HL
0110   5DDA 56                                                      LD D,(HL)
0111   5DDB EB                                                      EX DE,HL
0112   5DDC CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0113   5DDF DD 36 FE 00                                             LD (VAR_TEMP),0x0
0114   5DE3 21 AD 69                                                LD HL,ITEMS_BY_ROOM_TABLE
0115   5DE6 0E 00                                                   LD C,0x0 ; from first item
0116   5DE8 7E          PRINT_ITEMS:                                 LD A,(HL)
0117   5DE9 FE FF                                                   CP 0xff ;end of items
0118   5DEB 28 2D                                                   JR Z,PARSE_DEFAULTS ; no item left - jump to input
0119   5DED DD BE FF                                                CP (VAR_CURRENT_ROOM)
0120   5DF0 20 24                                                   JR NZ,NEXT_ROOM_FOR_ITEM
0121   5DF2 AF                                                      XOR A ; room is found
0122   5DF3 DD BE FE                                                CP (VAR_TEMP) 
0123   5DF6 20 0B                                                   JR NZ,PRINT_NEXT_ITEM
0124   5DF8 E5                                                      PUSH HL
0125   5DF9 21 03 6A                                                LD HL,TEXT_ALSO_SEE 
0126   5DFC CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0127   5DFF E1                                                      POP HL
0128   5E00 DD 34 FE                                                INC (VAR_TEMP)
0129   5E03 E5          PRINT_NEXT_ITEM:                             PUSH HL
0130   5E04 21 85 6D                                                LD HL,ITEM_DESC_POINTER 
0131   5E07 06 00                                                   LD B,0x0
0132   5E09 09                                                      ADD HL,BC
0133   5E0A 09                                                      ADD HL,BC
0134   5E0B 5E                                                      LD E,(HL) 
0135   5E0C 23                                                      INC HL
0136   5E0D 56                                                      LD D,(HL)
0137   5E0E EB                                                      EX DE,HL
0138   5E0F CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0139   5E12 CD DF BF                                                CALL SCREEN.PRINT_CR
0140   5E15 E1                                                      POP HL
0141   5E16 23          NEXT_ROOM_FOR_ITEM:                          INC HL
0142   5E17 0C                                                      INC C
0143   5E18 18 CE                                                   JR PRINT_ITEMS
0144   5E1A 21 C6 7D    PARSE_DEFAULTS:                              LD HL,DEFAULT_TABLE 
0145   5E1D C3 CB 5E                                                JP PARSE_PROC
0146   5E20 C1          CMD_TELL_ME:                                 POP BC
0147   5E21 E1                                                      POP HL
0148   5E22 AF                                                      XOR A
0149   5E23 DD BE 02                                                CP (VAR_START_C)
0150   5E26 28 03                                                   JR Z,LAB_ram_5e7c
0151   5E28 DD 35 02                                                DEC (VAR_START_C)
0152   5E2B DD BE 05    LAB_ram_5e7c:                                CP (IX+0x5)
0153   5E2E 28 03                                                   JR Z,LAB_ram_5e84
0154   5E30 DD 35 05                                                DEC (IX+0x5)
0155   5E33 21 15 6A    LAB_ram_5e84:                                LD HL,TEXT_TELL_ME 
0156   5E36 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0157   5E39 CD 25 60                                                CALL READ_LINE
0158   5E3C DD 36 F8 00                                             LD (VAR_FLAG_CANT_DO),0x0
0159   5E40 CD C0 62    SKIP_SPACES:                                 CALL CMD_DECODE
0160   5E43 32 44 5D                                                LD (VAR_CMD_FIRST_ADDR),A
0161   5E46 FE FF                                                   CP 0xff
0162   5E48 20 25                                                   JR NZ,KNOW_COMMAND
0163   5E4A 7E                                                      LD A,(HL) ; pointed to input buffer
0164   5E4B FE 0D                                                   CP 0xd ; just first char is enter
0165   5E4D 28 03                                                   JR Z,UNKNOWN_COMMAND
0166   5E4F B7                                                      OR A
0167   5E50 20 0A                                                   JR NZ,LOOP_SPACES
0168   5E52 E5          UNKNOWN_COMMAND:                             PUSH HL 
0169   5E53 21 2A 6A                                                LD HL,TEXT_DONT_UNDERSTAND 
0170   5E56 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0171   5E59 E1                                                      POP HL
0172   5E5A 18 BE                                                   JR PARSE_DEFAULTS
0173   5E5C 7E          LOOP_SPACES:                                 LD A,(HL)                                            
0174   5E5D FE 20                                                   CP ' ' ; is it space ?
0175   5E5F 20 03                                                   JR NZ,CHAR_IS_FOUND
0176   5E61 23                                                      INC HL
0177   5E62 18 DC                                                   JR SKIP_SPACES
0178   5E64 FE 00       CHAR_IS_FOUND:                               CP 0x0
0179   5E66 28 EA                                                   JR Z,UNKNOWN_COMMAND
0180   5E68 FE 0D                                                   CP 0xd
0181   5E6A 28 E6                                                   JR Z,UNKNOWN_COMMAND
0182   5E6C 23                                                      INC HL
0183   5E6D 18 ED                                                   JR LOOP_SPACES
0184   5E6F DD 36 FD FF KNOW_COMMAND:                                LD (VAR_CMD_SECOND),0xff
0185   5E73 7E          SEARCH_SECOND_CMD:                           LD A,(HL)                                            
0186   5E74 FE 20                                                   CP ' '
0187   5E76 28 0D                                                   JR Z,CMD_NEXT_WORD
0188   5E78 FE 00                                                   CP 0x0
0189   5E7A CA A0 5E                                                JP Z,CMD_PARCE_COMPLETE
0190   5E7D FE 0D                                                   CP 0xd
0191   5E7F CA A0 5E                                                JP Z,CMD_PARCE_COMPLETE
0192   5E82 23                                                      INC HL
0193   5E83 18 EE                                                   JR SEARCH_SECOND_CMD
0194   5E85 23          CMD_NEXT_WORD:                               INC HL
0195   5E86 CD C0 62                                                CALL CMD_DECODE
0196   5E89 32 45 5D                                                LD (VAR_CMD_SECOND_ADDR),A
0197   5E8C FE FF                                                   CP 0xff
0198   5E8E 20 10                                                   JR NZ,CMD_PARCE_COMPLETE
0199   5E90 7E          ITERATE_END_LINE:                            LD A,(HL) 
0200   5E91                                                         
0201   5E91 FE 00                                                   CP 0x0
0202   5E93 28 0B                                                   JR Z,CMD_PARCE_COMPLETE
0203   5E95 FE 0D                                                   CP 0xd
0204   5E97 28 07                                                   JR Z,CMD_PARCE_COMPLETE
0205   5E99 FE 20                                                   CP 0x20
0206   5E9B 28 E8                                                   JR Z,CMD_NEXT_WORD
0207   5E9D 23                                                      INC HL
0208   5E9E 18 F0                                                   JR ITERATE_END_LINE
0209   5EA0 16 00       CMD_PARCE_COMPLETE:                          LD D,0x0
0210   5EA2 DD 5E FF                                                LD E,(VAR_CURRENT_ROOM)
0211   5EA5 21 DF 71                                                LD HL,ROOM_NAV_POINTER 
0212   5EA8 19                                                      ADD HL,DE
0213   5EA9 19                                                      ADD HL,DE
0214   5EAA 5E                                                      LD E,(HL)
0215   5EAB 23                                                      INC HL
0216   5EAC 56                                                      LD D,(HL)
0217   5EAD EB                                                      EX DE,HL
0218   5EAE 7E          NAV_SEARCH_LOOP:                             LD A,(HL)
0219   5EAF FE FF                                                   CP 0xff
0220   5EB1 28 11                                                   JR Z,NAVIGATION_LIST_END
0221   5EB3 DD BE FC                                                CP (VAR_CMD_FIRST)
0222   5EB6 20 08                                                   JR NZ,NEXT_CMD_IN_ROOM
0223   5EB8 23                                                      INC HL
0224   5EB9 7E                                                      LD A,(HL)
0225   5EBA DD 77 FF                                                LD (VAR_CURRENT_ROOM),A
0226   5EBD C3 A2 5D                                                JP ENTER_NEW_ROOM
0227   5EC0 23          NEXT_CMD_IN_ROOM:                            INC HL
0228   5EC1 23                                                      INC HL
0229   5EC2 18 EA                                                   JR NAV_SEARCH_LOOP
0230   5EC4 21 73 72    NAVIGATION_LIST_END:                         LD HL,ACTION_TABLE ; command parce here is continued
0231   5EC7 DD 36 FA 00                                             LD (VAR_MORE_PARSING),0x0
0232   5ECB 7E          PARSE_PROC:                                  LD A,(HL) ; pointed to DEFAULT_TABLE  or ACTION_TABLE = ff from start                      
0233   5ECC B7                                                      OR A
0234   5ECD 20 35                                                   JR NZ,ACTION_FOUND
0235   5ECF DD BE FA                                                CP (VAR_MORE_PARSING) ; need more parsing
0236   5ED2 C2 1A 5E                                                JP NZ,PARSE_DEFAULTS 
0237   5ED5 DD 7E FC                                                LD A,(VAR_CMD_FIRST) 
0238   5ED8 FE 0D                                                   CP 0xd
0239   5EDA 38 1C                                                   JR C,PRINT_CANT_GO ; 0xd > first command - all moves under 0xd
0240   5EDC DD 7E F8                                                LD A,(VAR_FLAG_CANT_DO)
0241   5EDF B7                                                      OR A
0242   5EE0 20 0B                                                   JR NZ,CANT_DO_YET ; 
0243   5EE2 E5                                                      PUSH HL                                             
0244   5EE3 21 3D 6A                                                LD HL,TEXT_I_CANT 
0245   5EE6 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0246   5EE9 E1                                                      POP HL
0247   5EEA C3 1A 5E                                                JP PARSE_DEFAULTS
0248   5EED E5          CANT_DO_YET:                                 PUSH HL                                             
0249   5EEE 21 45 6A                                                LD HL,TEXT_I_CANT_DO_YET 
0250   5EF1 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0251   5EF4 E1                                                      POP HL
0252   5EF5 C3 1A 5E                                                JP PARSE_DEFAULTS
0253   5EF8 E5          PRINT_CANT_GO:                               PUSH HL  
0254   5EF9 21 59 6A                                                LD HL,TEXT_I_CANT_GO 
0255   5EFC CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0256   5EFF E1                                                      POP HL
0257   5F00 C3 1A 5E                                                JP PARSE_DEFAULTS
0258   5F03 00                                                      NOP
0259   5F04 FE FF       ACTION_FOUND:                                CP 0xff
0260   5F06 28 0C                                                   JR Z,CMD_FIRST_FOUND
0261   5F08 DD BE FC                                                CP (VAR_CMD_FIRST)
0262   5F0B 28 07                                                   JR Z,CMD_FIRST_FOUND
0263   5F0D 11 06 00    CMD_NEXT_BLOCK:                              LD DE,0x6 ; next block 
0264   5F10 19                                                      ADD HL,DE
0265   5F11 C3 CB 5E                                                JP PARSE_PROC ; next block 
0266   5F14 23          CMD_FIRST_FOUND:                             INC HL ; 
0267   5F15 7E                                                      LD A,(HL) 
0268   5F16 FE FF                                                   CP 0xff
0269   5F18 28 08                                                   JR Z,CMD_SECOND_FOUND
0270   5F1A DD BE FD                                                CP (VAR_CMD_SECOND)
0271   5F1D 28 03                                                   JR Z,CMD_SECOND_FOUND
0272   5F1F 2B                                                      DEC HL
0273   5F20 18 EB                                                   JR CMD_NEXT_BLOCK
0274   5F22 23          CMD_SECOND_FOUND:                            INC HL
0275   5F23 4E                                                      LD C,(HL) 
0276   5F24 23                                                      INC HL
0277   5F25 46                                                      LD B,(HL) ; first value in BC - VALIDATOR0 or 
0278   5F26 23                                                      INC HL
0279   5F27 0A          NEXT_VALIDATOR:                              LD A,(BC) 
0280   5F28 FE FF                                                   CP 0xff
0281   5F2A CA F3 5F                                                JP Z,VALIDATION_COMPLETE
0282   5F2D 32 43 5D                                                LD (VAR_PROC_ADDR),A ; first is procedure
0283   5F30 03                                                      INC BC
0284   5F31 0A                                                      LD A,(BC) 
0285   5F32 32 41 5D                                                LD (VAR_PROC_PARAM_ADDR),A ; second is param
0286   5F35 E5                                                      PUSH HL ; 
0287   5F36 21 E1 5F                                                LD HL,PROC_POINTER 
0288   5F39 16 00                                                   LD D,0x0
0289   5F3B DD 5E FB                                                LD E,(VAR_PROC)
0290   5F3E 19                                                      ADD HL,DE
0291   5F3F 19                                                      ADD HL,DE
0292   5F40 5E                                                      LD E,(HL) 
0293   5F41 23                                                      INC HL
0294   5F42 56                                                      LD D,(HL)
0295   5F43 EB                                                      EX DE,HL
0296   5F44 E9                                                      JP (HL) ; jump to pointer PROC06, in BC second element
0297   5F45 3A 41 5D    PROC_00:                                     LD A,(VAR_PROC_PARAM_ADDR) ; verify if current room
0298   5F48 DD BE FF                                                CP (VAR_CURRENT_ROOM)
0299   5F4B 28 5A                                                   JR Z,PROC_SUCESS
0300   5F4D E1          PROC_FAILED:                                 POP HL
0301   5F4E 23                                                      INC HL
0302   5F4F 23                                                      INC HL
0303   5F50 DD 36 F8 01                                             LD (VAR_FLAG_CANT_DO),1
0304   5F54 C3 CB 5E                                                JP PARSE_PROC
0305   5F57 21 AD 69    PROC_01:                                     LD HL,ITEMS_BY_ROOM_TABLE ; is item available
0306   5F5A 16 00                                                   LD D,0x0
0307   5F5C DD 5E F9                                                LD E,(VAR_PROC_PARAM)
0308   5F5F 19                                                      ADD HL,DE
0309   5F60 7E                                                      LD A,(HL)
0310   5F61 DD BE FF                                                CP (VAR_CURRENT_ROOM) ; if item in current room
0311   5F64 28 41                                                   JR Z,PROC_SUCESS
0312   5F66 FE FD                                                   CP 0xfd ; or item in pocket or wear
0313   5F68 30 3D                                                   JR NC,PROC_SUCESS
0314   5F6A 18 E1                                                   JR PROC_FAILED
0315   5F6C ED 5F       PROC_02:                                     LD A,R ; randoms 
0316   5F6E DD 96 F9                                                SUB (VAR_PROC_PARAM)
0317   5F71 38 34                                                   JR C,PROC_SUCESS
0318   5F73 18 D8                                                   JR PROC_FAILED
0319   5F75 21 AD 69    PROC_03:                                     LD HL,ITEMS_BY_ROOM_TABLE ; is item in room
0320   5F78 16 00                                                   LD D,0x0
0321   5F7A DD 5E F9                                                LD E,(VAR_PROC_PARAM)
0322   5F7D 19                                                      ADD HL,DE
0323   5F7E 7E                                                      LD A,(HL)
0324   5F7F DD BE FF                                                CP (VAR_CURRENT_ROOM)
0325   5F82 28 C9                                                   JR Z,PROC_FAILED
0326   5F84 FE FD                                                   CP 0xfd 
0327   5F86 30 C5                                                   JR NC,PROC_FAILED
0328   5F88 18 1D                                                   JR PROC_SUCESS
0329   5F8A 21 AD 69    PROC_04:                                     LD HL,ITEMS_BY_ROOM_TABLE ; is item weared
0330   5F8D 16 00                                                   LD D,0x0
0331   5F8F DD 5E F9                                                LD E,(VAR_PROC_PARAM)
0332   5F92 19                                                      ADD HL,DE
0333   5F93 7E                                                      LD A,(HL)
0334   5F94 FE FD                                                   CP 0xfd
0335   5F96 28 0F                                                   JR Z,PROC_SUCESS
0336   5F98 18 B3                                                   JR PROC_FAILED
0337   5F9A 21 48 5D    PROC_05:                                     LD HL,VARS ; two params compare with zero
0338   5F9D 16 00                                                   LD D,0x0
0339   5F9F DD 5E F9                                                LD E,(VAR_PROC_PARAM)
0340   5FA2 19                                                      ADD HL,DE
0341   5FA3 7E                                                      LD A,(HL)
0342   5FA4 B7                                                      OR A
0343   5FA5 28 A6                                                   JR Z,PROC_FAILED
0344   5FA7 E1          PROC_SUCESS:                                 POP HL
0345   5FA8 03                                                      INC BC
0346   5FA9 C3 27 5F                                                JP NEXT_VALIDATOR
0347   5FAC 03          PROC_06:                                     INC BC ; three params compare with third param
0348   5FAD 0A                                                      LD A,(BC) ; third element 6,5,1,5,6,ff
0349   5FAE 21 48 5D                                                LD HL,VARS
0350   5FB1 16 00                                                   LD D,0x0
0351   5FB3 DD 5E F9                                                LD E,(VAR_PROC_PARAM)
0352   5FB6 19                                                      ADD HL,DE
0353   5FB7 BE                                                      CP (HL) ; compared by IX
0354   5FB8 20 93                                                   JR NZ,PROC_FAILED ; next is triggered
0355   5FBA 18 EB                                                   JR PROC_SUCESS
0356   5FBC 21 48 5D    PROC_07:                                     LD HL,VARS ; is in table zero
0357   5FBF 16 00                                                   LD D,0x0
0358   5FC1 DD 5E F9                                                LD E,(VAR_PROC_PARAM)
0359   5FC4 19                                                      ADD HL,DE
0360   5FC5 7E                                                      LD A,(HL)
0361   5FC6 B7                                                      OR A
0362   5FC7 C2 4D 5F                                                JP NZ,PROC_FAILED
0363   5FCA 18 DB                                                   JR PROC_SUCESS
0364   5FCC 21 AD 69    PROC_08:                                     LD HL,ITEMS_BY_ROOM_TABLE ; is item in inventory of weared
0365   5FCF 16 00                                                   LD D,0x0
0366   5FD1 DD 5E F9                                                LD E,(VAR_PROC_PARAM)
0367   5FD4 19                                                      ADD HL,DE
0368   5FD5 7E                                                      LD A,(HL)
0369   5FD6 FE FE                                                   CP 0xfe
0370   5FD8 28 CD                                                   JR Z,PROC_SUCESS
0371   5FDA FE FD                                                   CP 0xfd
0372   5FDC 28 C9                                                   JR Z,PROC_SUCESS
0373   5FDE C3 4D 5F                                                JP PROC_FAILED
0374   5FE1 45 5F       PROC_POINTER:                                dw PROC_00
0375   5FE3 57 5F                                                   dw PROC_01
0376   5FE5 6C 5F                                                   dw PROC_02
0377   5FE7 75 5F                                                   dw PROC_03
0378   5FE9 8A 5F                                                   dw PROC_04
0379   5FEB 9A 5F                                                   dw PROC_05
0380   5FED AC 5F                                                   dw PROC_06
0381   5FEF BC 5F                                                   dw PROC_07
0382   5FF1 CC 5F                                                   dw PROC_08
0383   5FF3 4E          VALIDATION_COMPLETE:                         LD C,(HL) ; second param
0384   5FF4 23                                                      INC HL
0385   5FF5 46                                                      LD B,(HL)
0386   5FF6 23                                                      INC HL
0387   5FF7 DD 36 FA 01                                             LD (VAR_MORE_PARSING),1
0388   5FFB 0A          NEXT_COMMAND:                                LD A,(BC)             
0389   5FFC FE FF                                                   CP 0xff
0390   5FFE CA CB 5E                                                JP Z,PARSE_PROC
0391   6001 32 43 5D                                                LD (VAR_PROC_ADDR),A
0392   6004 03                                                      INC BC
0393   6005 0A                                                      LD A,(BC) 
0394   6006 32 41 5D                                                LD (VAR_PROC_PARAM_ADDR),A
0395   6009 E5                                                      PUSH HL 
0396   600A C5                                                      PUSH BC 
0397   600B 21 4C 60                                                LD HL,CMD_POINTER 
0398   600E 16 00                                                   LD D,0x0
0399   6010 DD 5E FB                                                LD E,(VAR_PROC)
0400   6013 19                                                      ADD HL,DE
0401   6014 19                                                      ADD HL,DE
0402   6015 5E                                                      LD E,(HL) 
0403   6016 23                                                      INC HL
0404   6017 56                                                      LD D,(HL)
0405   6018 EB                                                      EX DE,HL
0406   6019 E9                                                      JP (HL)
0407   601A 21 AD 69    GET_ROOM_OF_ITEM:                            LD HL,ITEMS_BY_ROOM_TABLE ; room in VAR_PROC_PARAM result in A hl pointed to item
0408   601D 06 00                                                   LD B,0x0
0409   601F DD 4E F9                                                LD C,(VAR_PROC_PARAM)
0410   6022 09                                                      ADD HL,BC
0411   6023 7E                                                      LD A,(HL)
0412   6024 C9                                                      RET
0413   6025 21 2B 60    READ_LINE:                                   LD HL,LINE_BUFFER 
0414   6028 C3 5D 63                                                JP READ_LINE_START
0415   602B 00          LINE_BUFFER:                                 ds 33
0416   604C 7E 60       CMD_POINTER:                                 dw CMD_INVENTORY
0417   604E D2 60                                                   dw CMD_UNWEAR_ITEM
0418   6050 FE 60                                                   dw CMD_GET_ITEM
0419   6052 3C 61                                                   dw CMD_DROP_ITEM
0420   6054 61 61                                                   dw CMD_WEAR_ITEM
0421   6056 8A 61                                                   dw CMD_PRINT_ANSWER
0422   6058 9D 61                                                   dw CMD_LOOK_AROUND
0423   605A A2 61                                                   dw CMD_NOTHING
0424   605C A7 61                                                   dw CMD_SET_CURRENT_ROOM
0425   605E AF 61                                                   dw CMD_VAR_TO_FF
0426   6060 BC 61                                                   dw CMD_VAR_CLEAR
0427   6062 CD 61                                                   dw CMD_SWAP_ITEM
0428   6064 D7 61                                                   dw CMD_END
0429   6066 DA 61                                                   dw CMD_OK
0430   6068 E5 61                                                   dw CMD_SAVE
0431   606A 4F 62                                                   dw CMD_VAR_SAVE
0432   606C 63 62                                                   dw CMD_ITEM_DROP_HERE
0433   606E 73 62                                                   dw CMD_REMOVE_ITEM
0434   6070 86 62                                                   dw CMD_SCORE
0435   6072 9D 62                                                   dw CMD_GAME
0436   6074 81 62                                                   dw CMD_LOOP
0437   6076 20 5E                                                   dw CMD_TELL_ME
0438   6078 81 62                                                   dw CMD_LOOP
0439   607A 81 62                                                   dw CMD_LOOP
0440   607C 81 62                                                   dw CMD_LOOP
0441   607E E5          CMD_INVENTORY:                               PUSH HL
0442   607F 21 76 6A                                                LD HL,TEXT_HAVE_WITH_ME 
0443   6082 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0444   6085 E1                                                      POP HL
0445   6086 DD 36 FE 00                                             LD (VAR_TEMP),0x0
0446   608A 21 AD 69                                                LD HL,ITEMS_BY_ROOM_TABLE
0447   608D 0E 00                                                   LD C,0x0
0448   608F 7E          LOOP_INVENTORY:                              LD A,(HL)
0449   6090 FE FF                                                   CP 0xff ; ff - end of items
0450   6092 28 2C                                                   JR Z,INVENTORY_EMPTY
0451   6094 FE FD                                                   CP 0xfd
0452   6096 38 24                                                   JR C,NEXT_SCAN_ITEM ; fe - in inventory
0453   6098 DD 36 FE 01                                             LD (VAR_TEMP),0x1
0454   609C E5                                                      PUSH HL
0455   609D 21 85 6D                                                LD HL,ITEM_DESC_POINTER 
0456   60A0 06 00                                                   LD B,0x0
0457   60A2 09                                                      ADD HL,BC
0458   60A3 09                                                      ADD HL,BC
0459   60A4 5E                                                      LD E,(HL) 
0460   60A5 23                                                      INC HL
0461   60A6 56                                                      LD D,(HL)
0462   60A7 EB                                                      EX DE,HL
0463   60A8 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0464   60AB E1                                                      POP HL
0465   60AC 7E                                                      LD A,(HL)
0466   60AD FE FD                                                   CP 0xfd ; fd - weared item
0467   60AF 20 08                                                   JR NZ,ITEM_NOT_WEARED
0468   60B1 E5                                                      PUSH HL
0469   60B2 21 95 6A                                                LD HL,TEXT_WHICH_I_AM_WEARING 
0470   60B5 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0471   60B8 E1                                                      POP HL
0472   60B9 CD DF BF    ITEM_NOT_WEARED                             CALL SCREEN.PRINT_CR
0473   60BC 23          NEXT_SCAN_ITEM:                              INC HL
0474   60BD 0C                                                      INC C
0475   60BE 18 CF                                                   JR LOOP_INVENTORY
0476   60C0 AF          INVENTORY_EMPTY:                             XOR A
0477   60C1 DD BE FE                                                CP (VAR_TEMP)
0478   60C4 C2 81 62                                                JP NZ,CMD_LOOP
0479   60C7 E5                                                      PUSH HL
0480   60C8 21 A9 6A                                                LD HL,TEXT_NOTHING 
0481   60CB CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0482   60CE E1                                                      POP HL
0483   60CF C3 81 62                                                JP CMD_LOOP
0484   60D2 CD 1A 60    CMD_UNWEAR_ITEM:                             CALL GET_ROOM_OF_ITEM
0485   60D5 FE FD                                                   CP 0xfd
0486   60D7 28 0B                                                   JR Z,IS_ITEM_WEARED
0487   60D9 E5                                                      PUSH HL
0488   60DA 21 B9 6A                                                LD HL,TEXT_NOT_WEARING 
0489   60DD CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0490   60E0 E1                                                      POP HL
0491   60E1 C3 81 62                                                JP CMD_LOOP
0492   60E4 DD 7E 01    IS_ITEM_WEARED:                              LD A,(VAR_ITEMS_COUNT)
0493   60E7 FE 06                                                   CP 0x6
0494   60E9 20 0B                                                   JR NZ,IS_SPACE_ENOUGH
0495   60EB E5                                                      PUSH HL
0496   60EC 21 CE 6A                                                LD HL,TEXT_HAND_FULL 
0497   60EF CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0498   60F2 E1                                                      POP HL
0499   60F3 C3 81 62                                                JP CMD_LOOP
0500   60F6 36 FE       IS_SPACE_ENOUGH:                             LD (HL),0xfe
0501   60F8 DD 34 01                                                INC (VAR_ITEMS_COUNT)
0502   60FB C3 C7 61                                                JP CMD_ENDED
0503   60FE DD 7E 01    CMD_GET_ITEM:                                LD A,(VAR_ITEMS_COUNT)
0504   6101 FE 06                                                   CP 0x6 ; max items in inventory
0505   6103 20 0B                                                   JR NZ,SPACE_IS_ENOUGH
0506   6105 E5                                                      PUSH HL
0507   6106 21 E9 6A                                                LD HL,TEXT_CANT_CARRY 
0508   6109 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0509   610C E1                                                      POP HL
0510   610D C3 81 62                                                JP CMD_LOOP
0511   6110 CD 1A 60    SPACE_IS_ENOUGH:                             CALL GET_ROOM_OF_ITEM
0512   6113 DD BE FF                                                CP (VAR_CURRENT_ROOM)
0513   6116 20 08                                                   JR NZ,LAB_ram_6272
0514   6118 36 FE                                                   LD (HL),0xfe ; inventory mark
0515   611A DD 34 01                                                INC (VAR_ITEMS_COUNT)
0516   611D C3 C7 61                                                JP CMD_ENDED
0517   6120 FE FD       LAB_ram_6272:                                CP 0xfd
0518   6122 28 0D                                                   JR Z,LAB_ram_6298
0519   6124 FE FE                                                   CP 0xfe
0520   6126 28 09                                                   JR Z,LAB_ram_6298
0521   6128 21 00 6B                                                LD HL,TEXT_I_DONT_SEE 
0522   612B CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0523   612E C3 81 62                                                JP CMD_LOOP
0524   6131 E5          LAB_ram_6298:                                PUSH HL
0525   6132 21 15 6B                                                LD HL,TEXT_ALREADY_HAVE 
0526   6135 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0527   6138 E1                                                      POP HL
0528   6139 C3 81 62                                                JP CMD_LOOP
0529   613C CD 1A 60    CMD_DROP_ITEM:                               CALL GET_ROOM_OF_ITEM
0530   613F DD BE FF                                                CP (VAR_CURRENT_ROOM)
0531   6142 20 0B                                                   JR NZ,LAB_ram_62dd
0532   6144 E5          ITEM_IN_INVENTORY_BUT_WEARED:                PUSH HL
0533   6145 21 28 6B                                                LD HL,TEXT_I_DONT_HAVE 
0534   6148 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0535   614B E1                                                      POP HL
0536   614C C3 81 62                                                JP CMD_LOOP
0537   614F FE FD       LAB_ram_62dd:                                CP 0xfd
0538   6151 28 07                                                   JR Z,ITEM_IN_INVENTORY
0539   6153 FE FE                                                   CP 0xfe
0540   6155 20 ED                                                   JR NZ,ITEM_IN_INVENTORY_BUT_WEARED
0541   6157 DD 35 01                                                DEC (VAR_ITEMS_COUNT)
0542   615A DD 7E FF    ITEM_IN_INVENTORY:                           LD A,(VAR_CURRENT_ROOM)
0543   615D 77                                                      LD (HL),A
0544   615E C3 C7 61                                                JP CMD_ENDED
0545   6161 CD 1A 60    CMD_WEAR_ITEM:                               CALL GET_ROOM_OF_ITEM
0546   6164 FE FE                                                   CP 0xfe
0547   6166 20 08                                                   JR NZ,WEAR_NOT_IN_INVENTORY
0548   6168 36 FD                                                   LD (HL),0xfd
0549   616A DD 35 01                                                DEC (VAR_ITEMS_COUNT)
0550   616D C3 C7 61                                                JP CMD_ENDED
0551   6170 FE FD       WEAR_NOT_IN_INVENTORY:                       CP 0xfd
0552   6172 20 0B                                                   JR NZ,WEAR_NOT_WEARED
0553   6174 E5                                                      PUSH HL
0554   6175 21 38 6B                                                LD HL,TEXT_ALREADY_WEAR 
0555   6178 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0556   617B E1                                                      POP HL
0557   617C C3 81 62                                                JP CMD_LOOP
0558   617F E5          WEAR_NOT_WEARED:                             PUSH HL
0559   6180 21 51 6B                                                LD HL,TEXT_I_DONT_HAVE_IT 
0560   6183 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0561   6186 E1                                                      POP HL
0562   6187 C3 81 62                                                JP CMD_LOOP
0563   618A 21 50 78    CMD_PRINT_ANSWER:                            LD HL,ANSWER_POINTER ; one param - text of action
0564   618D 06 00                                                   LD B,0x0
0565   618F DD 4E F9                                                LD C,(VAR_PROC_PARAM)
0566   6192 09                                                      ADD HL,BC
0567   6193 09                                                      ADD HL,BC
0568   6194 5E                                                      LD E,(HL) 
0569   6195 23                                                      INC HL
0570   6196 56                                                      LD D,(HL)
0571   6197 EB                                                      EX DE,HL
0572   6198 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0573   619B 18 2A                                                   JR CMD_ENDED
0574   619D C1          CMD_LOOK_AROUND:                             POP BC
0575   619E E1                                                      POP HL
0576   619F C3 A2 5D                                                JP ENTER_NEW_ROOM
0577   61A2 C1          CMD_NOTHING:                                 POP BC
0578   61A3 E1                                                      POP HL
0579   61A4 C3 1A 5E                                                JP PARSE_DEFAULTS
0580   61A7 DD 7E F9    CMD_SET_CURRENT_ROOM:                                    LD A,(VAR_PROC_PARAM)
0581   61AA DD 77 FF                                                LD (VAR_CURRENT_ROOM),A
0582   61AD 18 18                                                   JR CMD_ENDED
0583   61AF 21 48 5D    CMD_VAR_TO_FF:                                    LD HL,VARS ; set (IX+PARAM0) = 0xff
0584   61B2 06 00                                                   LD B,0x0
0585   61B4 DD 4E F9                                                LD C,(VAR_PROC_PARAM)
0586   61B7 09                                                      ADD HL,BC
0587   61B8 36 FF                                                   LD (HL),0xff
0588   61BA 18 0B                                                   JR CMD_ENDED
0589   61BC 21 48 5D    CMD_VAR_CLEAR:                               LD HL,VARS ; set (IX+PARAM0) = 0
0590   61BF 06 00                                                   LD B,0x0
0591   61C1 DD 4E F9                                                LD C,(VAR_PROC_PARAM)
0592   61C4 09                                                      ADD HL,BC
0593   61C5 36 00                                                   LD (HL),0x0
0594   61C7 C1          CMD_ENDED:                                   POP BC
0595   61C8 E1                                                      POP HL
0596   61C9 03                                                      INC BC
0597   61CA C3 FB 5F                                                JP NEXT_COMMAND
0598   61CD CD 1A 60    CMD_SWAP_ITEM:                               CALL GET_ROOM_OF_ITEM
0599   61D0 23                                                      INC HL ; next item
0600   61D1 46                                                      LD B,(HL)
0601   61D2 77                                                      LD (HL),A ; room of item here
0602   61D3 2B                                                      DEC HL
0603   61D4 70                                                      LD (HL),B
0604   61D5 18 F0                                                   JR CMD_ENDED
0605   61D7 C3 2D 62    CMD_END:                                     JP TRY_AGAIN
0606   61DA E5          CMD_OK:                                      PUSH HL
0607   61DB 21 61 6B                                                LD HL,TEXT_OK 
0608   61DE CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0609   61E1 E1                                                      POP HL
0610   61E2 C3 81 62                                                JP CMD_LOOP
0611   61E5 E5          CMD_SAVE:                                    PUSH HL
0612   61E6 21 67 6B                                                LD HL,TEXT_WANT_SAVE 
0613   61E9 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0614   61EC E1                                                      POP HL
0615   61ED CD 45 63                                                CALL WAIT_KEY
0616   61F0 FE 59                                                   CP 0x59
0617   61F2 20 39                                                   JR NZ,TRY_AGAIN
0618   61F4 DD E5                                                   PUSH IX
0619   61F6 DD 21 46 5D                                             LD IX,GAME_STATE
0620   61FA 11 2B 00                                                LD DE,0x2b
0621   61FD E5                                                      PUSH HL
0622   61FE 21 86 6B                                                LD HL,TEXT_READY_TYPE 
0623   6201 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0624   6204 E1                                                      POP HL
0625   6205 CD 45 63                                                CALL WAIT_KEY
0626   6208 3E FF                                                   LD A,0xff
0627   620A 37                                                      SCF
0628   620B CD C2 04                                                CALL 0x04c2
0629   620E DD 21 AD 69                                             LD IX,ITEMS_BY_ROOM_TABLE
0630   6212 11 1D 00                                                LD DE,0x1d
0631   6215 3E FF                                                   LD A,0xff
0632   6217 37                                                      SCF
0633   6218 CD C2 04                                                CALL 0x04c2
0634   621B DD E1                                                   POP IX
0635   621D E5                                                      PUSH HL
0636   621E 21 96 6B                                                LD HL,TEXT_CONTINUE 
0637   6221 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0638   6224 E1                                                      POP HL
0639   6225 CD 45 63                                                CALL WAIT_KEY
0640   6228 FE 59                                                   CP 0x59
0641   622A CA 81 62                                                JP Z,CMD_LOOP
0642   622D E5          TRY_AGAIN:                                   PUSH HL
0643   622E 21 B0 6B                                                LD HL,TEXT_TRY_AGAIN 
0644   6231 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0645   6234 E1                                                      POP HL
0646   6235 E5          CHECK_YES_NO:                                PUSH HL
0647   6236 21 CB 6B                                                LD HL,TEXT_ANSWER 
0648   6239 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0649   623C E1                                                      POP HL
0650   623D CD 45 63                                                CALL WAIT_KEY
0651   6240 00                                                      NOP
0652   6241 00                                                      NOP
0653   6242 00                                                      NOP
0654   6243 FE 59                                                   CP 0x59
0655   6245 CA 6C 5D                                                JP Z,ENTRY_POINT
0656   6248 FE 4E                                                   CP 0x4e
0657   624A CA 00 00                                                JP Z,0x0000
0658   624D 18 E6                                                   JR CHECK_YES_NO
0659   624F C1          CMD_VAR_SAVE:                                POP BC ; stack pointed to VAR_PROC_PARAM (IX+PARAM0) = PARAM1
0660   6250 03                                                      INC BC
0661   6251 C5                                                      PUSH BC ; now point on next cmd
0662   6252 0A                                                      LD A,(BC) ; actually third params
0663   6253 32 43 5D                                                LD (VAR_PROC_ADDR),A ; placed in VAR_PROC
0664   6256 21 48 5D                                                LD HL,VARS
0665   6259 06 00                                                   LD B,0x0
0666   625B DD 4E F9                                                LD C,(VAR_PROC_PARAM)
0667   625E 09                                                      ADD HL,BC
0668   625F 77                                                      LD (HL),A 
0669   6260 C3 C7 61                                                JP CMD_ENDED
0670   6263 21 AD 69    CMD_ITEM_DROP_HERE:                          LD HL,ITEMS_BY_ROOM_TABLE
0671   6266 06 00                                                   LD B,0x0
0672   6268 DD 4E F9                                                LD C,(VAR_PROC_PARAM)
0673   626B 09                                                      ADD HL,BC
0674   626C DD 7E FF                                                LD A,(VAR_CURRENT_ROOM)
0675   626F 77                                                      LD (HL),A
0676   6270 C3 C7 61                                                JP CMD_ENDED
0677   6273 21 AD 69    CMD_REMOVE_ITEM:                             LD HL,ITEMS_BY_ROOM_TABLE ; item 
0678   6276 06 00                                                   LD B,0x0
0679   6278 DD 4E F9                                                LD C,(VAR_PROC_PARAM)
0680   627B 09                                                      ADD HL,BC
0681   627C 36 FC                                                   LD (HL),0xfc
0682   627E C3 C7 61                                                JP CMD_ENDED
0683   6281 C1          CMD_LOOP:                                    POP BC
0684   6282 E1                                                      POP HL
0685   6283 C3 1A 5E                                                JP PARSE_DEFAULTS
0686   6286 3A 6A 5D    CMD_SCORE:                                   LD A,(VAR_SCORE)
0687   6289 47                                                      LD B,A
0688   628A 3A 41 5D                                                LD A,(VAR_PROC_PARAM_ADDR)
0689   628D 80                                                      ADD A,B
0690   628E 27                                                      DAA
0691   628F 32 6A 5D                                                LD (VAR_SCORE),A
0692   6292 E1                                                      POP HL
0693   6293 23                                                      INC HL
0694   6294 E5                                                      PUSH HL
0695   6295 3A 6B 5D                                                LD A,(VAR_SCORE+1)
0696   6298 8E                                                      ADC A,(HL)
0697   6299 27                                                      DAA
0698   629A 32 6B 5D                                                LD (VAR_SCORE+1),A
0699   629D 21 DD 6B    CMD_GAME:                                    LD HL,TEXT_SCORE 
0700   62A0 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0701   62A3 3A 6B 5D                                                LD A,(VAR_SCORE+1)
0702   62A6 CD B7 62                                                CALL PRINT_SCORE
0703   62A9 3A 6A 5D                                                LD A,(VAR_SCORE)
0704   62AC CD B7 62                                                CALL PRINT_SCORE
0705   62AF CD DF BF                                                CALL SCREEN.PRINT_CR
0706   62B2 C1                                                      POP BC
0707   62B3 E1                                                      POP HL
0708   62B4 C3 FB 5F                                                JP NEXT_COMMAND
0709   62B7 F5          PRINT_SCORE:                                 PUSH AF
0710   62B8 1F                                                      RRA
0711   62B9 1F                                                      RRA
0712   62BA 1F                                                      RRA
0713   62BB 1F                                                      RRA
0714   62BC CD D5 BF                                                CALL SCREEN.PRINT_DIGIT
0715   62BF F1                                                      POP AF
0716   62C0             
0717   62C0 E5          CMD_DECODE:                                  PUSH HL ; HL pointed to input buffer, command code return in A, ff - command not found HL not changed
0718   62C1 21 20 20                                                LD HL,0x2020 ; two spaces
0719   62C4 22 66 5D                                                LD (VAR_CMD_BUF0),HL 
0720   62C7 22 68 5D                                                LD (VAR_CMD_BUF1),HL 
0721   62CA E1                                                      POP HL
0722   62CB 11 66 5D                                                LD DE,VAR_CMD_BUF0 
0723   62CE 06 04                                                   LD B,0x4 ; cmd length
0724   62D0 7E          CMD_COPY_LOOP:                               LD A,(HL)
0725   62D1 FE 20                                                   CP 0x20
0726   62D3 28 0D                                                   JR Z,LABEL_LINE_DELIM
0727   62D5 FE 00                                                   CP 0x0
0728   62D7 28 09                                                   JR Z,LABEL_LINE_DELIM
0729   62D9 FE 0D                                                   CP 0xd
0730   62DB 28 05                                                   JR Z,LABEL_LINE_DELIM
0731   62DD 12                                                      LD (DE),A 
0732   62DE 23                                                      INC HL
0733   62DF 13                                                      INC DE
0734   62E0 10 EE                                                   DJNZ CMD_COPY_LOOP
0735   62E2 E5          LABEL_LINE_DELIM:                            PUSH HL
0736   62E3 21 B8 6F                                                LD HL,COMMAND_LIST 
0737   62E6 3E FF                                                   LD A,0xff
0738   62E8 F5                                                      PUSH AF
0739   62E9 DD 36 FE 00 CMD_NEXT_COMMAND:                            LD (VAR_TEMP),0x0 ; equal
0740   62ED 06 04                                                   LD B,0x4
0741   62EF 11 66 5D                                                LD DE,VAR_CMD_BUF0 
0742   62F2 7E          CMD_CP_LOOP:                                 LD A,(HL) 
0743   62F3                                                         
0744   62F3 FE FF                                                   CP 0xff
0745   62F5 28 15                                                   JR Z,CMD_LIST_ENDED
0746   62F7 1A                                                      LD A,(DE) 
0747   62F8 BE                                                      CP (HL) 
0748   62F9 28 04                                                   JR Z,LAB_ram_6564
0749   62FB DD 36 FE 01                                             LD (VAR_TEMP),0x1 ; not equal
0750   62FF 23          LAB_ram_6564:                                INC HL
0751   6300 13                                                      INC DE
0752   6301 10 EF                                                   DJNZ CMD_CP_LOOP
0753   6303 AF                                                      XOR A
0754   6304 DD BE FE                                                CP (VAR_TEMP) 
0755   6307 20 06                                                   JR NZ,CMD_NOT_EQUAL
0756   6309 F1                                                      POP AF
0757   630A 7E                                                      LD A,(HL) 
0758   630B F5                                                      PUSH AF
0759   630C F1          CMD_LIST_ENDED:                              POP AF
0760   630D E1                                                      POP HL
0761   630E C9                                                      RET ; command code returned in A
0762   630F 23          CMD_NOT_EQUAL:                               INC HL
0763   6310 18 D7                                                   JR CMD_NEXT_COMMAND
0764   6312 E5          GAME_RESTORED:                               PUSH HL
0765   6313 21 F2 6B                                                LD HL,TEXT_READY_CASSETE 
0766   6316 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0767   6319 E1                                                      POP HL
0768   631A CD 45 63                                                CALL WAIT_KEY
0769   631D DD E5                                                   PUSH IX
0770   631F DD 21 46 5D                                             LD IX,GAME_STATE
0771   6323 11 29 00                                                LD DE,0x29 ;size of save
0772   6326 3E FF                                                   LD A,0xff
0773   6328 37                                                      SCF
0774   6329 CD 56 05                                                CALL 0x0556
0775   632C DD 21 AD 69                                             LD IX,ITEMS_BY_ROOM_TABLE
0776   6330 11 1D 00                                                LD DE,0x1d ;size of game state
0777   6333 3E FF                                                   LD A,0xff
0778   6335 37                                                      SCF
0779   6336 CD 56 05                                                CALL 0x0556
0780   6339 DD E1                                                   POP IX
0781   633B C9                                                      RET
0782   633C CD 93 63    GAME_INIT:                                   CALL INIT_SCREEN
0783   633F 21 02 6C                                                LD HL,TEXT_WELCOME 
0784   6342 CD 34 BF                                                CALL SCREEN.PRINT_TEXT_WRAP
0785   6345 AF          WAIT_KEY:                                    XOR A
0786   6346 32 ED BB                                                LD (KEYBOARD.LASTK),A
0787   6349 3A ED BB    WRONG_KEY:                                   LD A,(KEYBOARD.LASTK)
0788   634C B7                                                      OR A
0789   634D 28 FA                                                   JR Z,WRONG_KEY
0790   634F FE 90                                                   CP 0x90 ;
0791   6351 30 F6                                                   JR NC,WRONG_KEY
0792   6353 FE 0C                                                   CP 0xc ; "Form Feed" - next CR
0793   6355 38 F2                                                   JR C,WRONG_KEY
0794   6357 FE 60                                                   CP 0x60 ; "`"
0795   6359 D8                                                      RET C
0796   635A D6 20                                                   SUB 0x20 ; lower to caps
0797   635C C9                                                      RET
0798   635D             
0799   635D E5          READ_LINE_START:                             PUSH HL
0800   635E 06 20                                                   LD B,0x20
0801   6360 36 00       INPUT_LINE_LOOP:                             LD (HL),0x0
0802   6362 CD 45 63                                                CALL WAIT_KEY
0803   6365 FE 0C                                                   CP 0xc ; delete
0804   6367 20 18                                                   JR NZ,INPUT_CHAR
0805   6369 3E 20                                                   LD A,0x20
0806   636B B8                                                      CP B
0807   636C 28 F2                                                   JR Z,INPUT_LINE_LOOP
0808   636E 04                                                      INC B
0809   636F 2B                                                      DEC HL
0810   6370 3E 08       INPUT_LINE_FULL:                             LD A,0x8
0811   6372 CD E7 BF                                                CALL SCREEN.PRINT_CHAR
0812   6375 3E 20                                                   LD A,0x20
0813   6377 CD E7 BF                                                CALL SCREEN.PRINT_CHAR
0814   637A 3E 08                                                   LD A,0x8
0815   637C CD E7 BF                                                CALL SCREEN.PRINT_CHAR
0816   637F 18 DF                                                   JR INPUT_LINE_LOOP
0817   6381 CD E7 BF    INPUT_CHAR:                                  CALL SCREEN.PRINT_CHAR
0818   6384 FE 0D                                                   CP 0xd
0819   6386 28 09                                                   JR Z,INPUT_END_LINE
0820   6388 04                                                      INC B
0821   6389 05                                                      DEC B
0822   638A 28 E4                                                   JR Z,INPUT_LINE_FULL
0823   638C 05                                                      DEC B
0824   638D 77                                                      LD (HL),A
0825   638E 23                                                      INC HL
0826   638F 18 CF                                                   JR INPUT_LINE_LOOP
0827   6391 E1          INPUT_END_LINE:                              POP HL
0828   6392 C9                                                      RET
0829   6393 E5          INIT_SCREEN:                                 PUSH HL
0830   6394 D5                                                      PUSH DE
0831   6395 C5                                                      PUSH BC
0832   6396 F5                                                      PUSH AF
0833   6397 3E 04                                                   LD A, CLR_BLACK<<3 | CLR_GREEN
0834   6399 CD 13 BF                                                CALL SCREEN.CLEAR
0835   639C F1                                                      POP AF
0836   639D C1                                                      POP BC
0837   639E D1                                                      POP DE
0838   639F E1                                                      POP HL
0839   63A0 C9                                                      RET
0840   63A1             ROOM_DESC_POINTER:                           include text_rooms.asm
0001+  63A1 CD 63                                                   dw PLACE_MOUNTAIN_PLATEA 
0002+  63A3 32 64                                                   dw PLACE_EDGE_OF_A_DEEP_PIT 
0003+  63A5 69 64                                                   dw PLACE_DAMP_LIMESTONE_CAVE 
0004+  63A7 DF 64                                                   dw PLACE_DENSE_FOREST 
0005+  63A9 3E 65                                                   dw PLACE_BESIDE_A_LAKE 
0006+  63AB 89 65                                                   dw PLACE_STRANGE_HOUSE 
0007+  63AD BB 65                                                   dw PLACE_OLD_SHED 
0008+  63AF E8 65                                                   dw PLACE_MAZE 
0009+  63B1 E8 65                                                   dw PLACE_MAZE 
0010+  63B3 E8 65                                                   dw PLACE_MAZE 
0011+  63B5 E8 65                                                   dw PLACE_MAZE 
0012+  63B7 16 66                                                   dw PLACE_ICE_CAVERN 
0013+  63B9 4A 66                                                   dw PLACE_QUIET_CAVERN 
0014+  63BB 86 66                                                   dw PLACE_WIND_TUNNEL 
0015+  63BD E1 66                                                   dw PLACE_COMPUTER_ROOM 
0016+  63BF 40 67                                                   dw PLACE_PASSAGE 
0017+  63C1 B3 67                                                   dw PLACE_LARGE_HANGER 
0018+  63C3 18 68                                                   dw PLACE_TALL_LIFT 
0019+  63C5 58 68                                                   dw PLACE_LIFT_CONTROL_ROOM 
0020+  63C7 E3 68                                                   dw PLACE_PRISON_CELL 
0021+  63C9 FA 68                                                   dw PLACE_SPACE_SHIP 
0022+  63CB 00 00                                                   dw 0x0000
0023+  63CD             PLACE_MOUNTAIN_PLATEA:                       db "I AM ON A MOUNTAIN PLATEAU\rTO THE NORTH THERE IS A STEEP CLIFF\rOBVIOUS EXITS A"
0023+  63CD 4920414D204F4E2041204D4F554E5441494E20504C41544541550D544F205448
0023+  63ED 45204E4F525448205448455245204953204120535445455020434C4946460D4F
0023+  640D 4256494F55532045584954532041
0024+  641B                                                         db "RE DOWN,EAST AND WEST\r",0
0024+  641B 524520444F574E2C4541535420414E4420574553540D00
0025+  6432             PLACE_EDGE_OF_A_DEEP_PIT:                    db "I AM AT THE EDGE OF A DEEP PIT\rOBVIOUS EXITS ARE EAST\r",0
0025+  6432 4920414D204154205448452045444745204F4620412044454550205049540D4F
0025+  6452 4256494F55532045584954532041524520454153540D00
0026+  6469             PLACE_DAMP_LIMESTONE_CAVE:                   db "I AM IN A DAMP LIMESTONE CAVE WITH STALACTITES HANGING DOWN.\rTHE EXIT IS TO THE"
0026+  6469 4920414D20494E20412044414D50204C494D4553544F4E452043415645205749
0026+  6489 5448205354414C414354495445532048414E47494E4720444F574E2E0D544845
0026+  64A9 204558495420495320544F20544845
0027+  64B8                                                         db " WEST\rTHERE IS A PASSAGE TO THE NORTH\r",0
0027+  64B8 20574553540D54484552452049532041205041535341474520544F2054484520
0027+  64D8 4E4F5254480D00
0028+  64DF             PLACE_DENSE_FOREST:                          db "I AM IN A DENSE FOREST\rTHERE IS A ROPE HANGING FROM ONE TREE\rOBVIOUS EXITS ARE"
0028+  64DF 4920414D20494E20412044454E534520464F524553540D544845524520495320
0028+  64FF 4120524F50452048414E47494E472046524F4D204F4E4520545245450D4F4256
0028+  651F 494F555320455849545320415245
0029+  652D                                                         db " SOUTH AND WEST\r",0
0029+  652D 20534F55544820414E4420574553540D00
0030+  653E             PLACE_BESIDE_A_LAKE:                         db "I AM BESIDE A LAKE\rEXITS ARE EAST AND NORTH.THERE IS A RAVINE TO THE WEST\r",0
0030+  653E 4920414D204245534944452041204C414B450D45584954532041524520454153
0030+  655E 5420414E44204E4F5254482E5448455245204953204120524156494E4520544F
0030+  657E 2054484520574553540D00
0031+  6589             PLACE_STRANGE_HOUSE:                         db "I AM IN A STRANGE HOUSE\rTHE DOOR IS TO THE NORTH\r",0
0031+  6589 4920414D20494E204120535452414E474520484F5553450D54484520444F4F52
0031+  65A9 20495320544F20544845204E4F5254480D00
0032+  65BB             PLACE_OLD_SHED:                              db "I AM IN AN OLD SHED\rTHE EXIT IS TO THE EAST\r",0
0032+  65BB 4920414D20494E20414E204F4C4420534845440D544845204558495420495320
0032+  65DB 544F2054484520454153540D00
0033+  65E8             PLACE_MAZE:                                  db "I AM IN A MAZE.THERE ARE PASSAGES EVERYWHERE\r",0
0033+  65E8 4920414D20494E2041204D415A452E5448455245204152452050415353414745
0033+  6608 5320455645525957484552450D00
0034+  6616             PLACE_ICE_CAVERN:                            db "I AM IN AN ICE CAVERN\rTHERE IS AN EXIT TO THE EAST\r",0
0034+  6616 4920414D20494E20414E204943452043415645524E0D54484552452049532041
0034+  6636 4E204558495420544F2054484520454153540D00
0035+  664A             PLACE_QUIET_CAVERN:                          db "I AM IN A QUIET CAVERN\rTHERE ARE EXITS WEST,EAST AND SOUTH\r",0
0035+  664A 4920414D20494E20412051554945542043415645524E0D544845524520415245
0035+  666A 20455849545320574553542C4541535420414E4420534F5554480D00
0036+  6686             PLACE_WIND_TUNNEL:                           db "I AM IN A WIND TUNNEL\rTHERE IS A CLOSED DOOR AT THE END\rTHERE IS ALSO AN EXIT "
0036+  6686 4920414D20494E20412057494E442054554E4E454C0D54484552452049532041
0036+  66A6 20434C4F53454420444F4F522041542054484520454E440D5448455245204953
0036+  66C6 20414C534F20414E204558495420
0037+  66D4                                                         db "TO THE WEST\r",0
0037+  66D4 544F2054484520574553540D00
0038+  66E1             PLACE_COMPUTER_ROOM:                         db "I AM IN A ROOM WITH A COMPUTER IN\rTHE COMPUTER IS WORKING AND HAS A KEYBOARD\rT"
0038+  66E1 4920414D20494E204120524F4F4D2057495448204120434F4D50555445522049
0038+  6701 4E0D54484520434F4D505554455220495320574F524B494E4720414E44204841
0038+  6721 532041204B4559424F4152440D54
0039+  672F                                                         db "HE EXIT IS WEST\r",0
0039+  672F 4845204558495420495320574553540D00
0040+  6740             PLACE_PASSAGE:                               db "I AM IN A PASSAGE\rTHERE IS A FORCE FIELD TO THE SOUTH : BEWARE OF SECURITY\rTHE"
0040+  6740 4920414D20494E204120504153534147450D5448455245204953204120464F52
0040+  6760 4345204649454C4420544F2054484520534F555448203A20424557415245204F
0040+  6780 462053454355524954590D544845
0041+  678E                                                         db "RE ARE EXITS TO NORTH,EAST AND WEST\r",0
0041+  678E 52452041524520455849545320544F204E4F5254482C4541535420414E442057
0041+  67AE 4553540D00
0042+  67B3             PLACE_LARGE_HANGER:                          db "I AM IN A LARGE HANGER\rTHERE IS A LOCKED DOOR TO THE WEST\rTHERE ARE ALSO EXITS"
0042+  67B3 4920414D20494E2041204C415247452048414E4745520D544845524520495320
0042+  67D3 41204C4F434B454420444F4F5220544F2054484520574553540D544845524520
0042+  67F3 41524520414C534F204558495453
0043+  6801                                                         db " EAST,NORTH AND SOUTH\r",0
0043+  6801 20454153542C4E4F52544820414E4420534F5554480D00
0044+  6818             PLACE_TALL_LIFT:                             db "I AM IN A TALL LIFT.THE BUTTONS ARE VERY HIGH\rTHE EXIT IS WEST\r",0
0044+  6818 4920414D20494E20412054414C4C204C4946542E54484520425554544F4E5320
0044+  6838 415245205645525920484947480D544845204558495420495320574553540D00
0045+  6858             PLACE_LIFT_CONTROL_ROOM:                     db "I AM IN THE LIFT CONTROL ROOM\rTHERE ARE THREE SWITCHES ON THE WALL.THEY ARE ALL"
0045+  6858 4920414D20494E20544845204C49465420434F4E54524F4C20524F4F4D0D5448
0045+  6878 45524520415245205448524545205357495443484553204F4E20544845205741
0045+  6898 4C4C2E544845592041524520414C4C
0046+  68A7                                                         db " OFF\rA SIGN SAYS : 5,4 NO DUSTY BIN RULES\rTHE EXIT IS EAST\r",0
0046+  68A7 204F46460D41205349474E2053415953203A20352C34204E4F20445553545920
0046+  68C7 42494E2052554C45530D544845204558495420495320454153540D00
0047+  68E3             PLACE_PRISON_CELL:                           db "I AM IN A PRISON CELL\r",0
0047+  68E3 4920414D20494E204120505249534F4E2043454C4C0D00
0048+  68FA             PLACE_SPACE_SHIP:                            db "I AM IN A SPACE SHIP.THERE IS NO VISIBLE EXIT\rTHERE IS A SMALL OPEN WINDOW IN T"
0048+  68FA 4920414D20494E204120535041434520534849502E5448455245204953204E4F
0048+  691A 2056495349424C4520455849540D5448455245204953204120534D414C4C204F
0048+  693A 50454E2057494E444F5720494E2054
0049+  6949                                                         db "HE SIDE\rTHERE ARE ALSO TWO BUTTONS,ONE MARKED MAIN AND THE OTHER AUX.\r",0
0049+  6949 484520534944450D54484552452041524520414C534F2054574F20425554544F
0049+  6969 4E532C4F4E45204D41524B4544204D41494E20414E4420544845204F54484552
0049+  6989 204155582E0D00
0841   6990             ITEMS_BY_ROOM_TABLE_INIT:                             
0842   6990 05                                                      db 0x05 ; value = room number, where item is placed
0843   6991 11                                                      db 0x11
0844   6992 0E                                                      db 0x0E
0845   6993 06                                                      db 0x06
0846   6994 11                                                      db 0x11
0847   6995 FC                                                      db 0xFC
0848   6996 FC                                                      db 0xFC
0849   6997 0C                                                      db 0x0C
0850   6998 FC                                                      db 0xFC
0851   6999 0D                                                      db 0x0D
0852   699A FC                                                      db 0xFC
0853   699B 05                                                      db 0x05
0854   699C FC                                                      db 0xFC
0855   699D FC                                                      db 0xFC
0856   699E 0B                                                      db 0x0B
0857   699F FC                                                      db 0xFC
0858   69A0 0C                                                      db 0x0C
0859   69A1 FC                                                      db 0xFC
0860   69A2 13                                                      db 0x13
0861   69A3 FC                                                      db 0xFC
0862   69A4 13                                                      db 0x13
0863   69A5 FC                                                      db 0xFC
0864   69A6 10                                                      db 0x10
0865   69A7 10                                                      db 0x10
0866   69A8 00                                                      db 0x00
0867   69A9 01                                                      db 0x01
0868   69AA 02                                                      db 0x02
0869   69AB 0F                                                      db 0x0F
0870   69AC FF                                                      db 0xFF
0871   69AD 00          ITEMS_BY_ROOM_TABLE:                         ds 0x1d ; current state of items
0872   69CA             
0873   69CA                                                         include text_commons.asm
0001+  69CA             TEXT_RESTORE_GAME:                           db "WANT TO RESTORE A GAME?\r",0
0001+  69CA 57414E5420544F20524553544F524520412047414D453F0D00
0002+  69E3             TEXT_EVERYTHING_DARK:                        db "EVERYTHING IS DARK.I CANT SEE.\r",0
0002+  69E3 45564552595448494E47204953204441524B2E492043414E54205345452E0D00
0003+  6A03             TEXT_ALSO_SEE:                               db "I CAN ALSO SEE :\r",0
0003+  6A03 492043414E20414C534F20534545203A0D00
0004+  6A15             TEXT_TELL_ME:                                db "TELL ME WHAT TO DO \r",0
0004+  6A15 54454C4C204D45205748415420544F20444F200D00
0005+  6A2A             TEXT_DONT_UNDERSTAND:                        db "I DONT UNDERSTAND\r",0
0005+  6A2A 4920444F4E5420554E4445525354414E440D00
0006+  6A3D             TEXT_I_CANT:                                 db "I CANT\r",0
0006+  6A3D 492043414E540D00
0007+  6A45             TEXT_I_CANT_DO_YET:                          db "I CANT DO THAT YET\r",0
0007+  6A45 492043414E5420444F2054484154205945540D00
0008+  6A59             TEXT_I_CANT_GO:                              db "I CANT GO IN THAT DIRECTION\r",0
0008+  6A59 492043414E5420474F20494E205448415420444952454354494F4E0D00
0009+  6A76             TEXT_HAVE_WITH_ME:                           db "I HAVE WITH ME THE FOLLOWING:\r",0
0009+  6A76 4920484156452057495448204D452054484520464F4C4C4F57494E473A0D00
0010+  6A95             TEXT_WHICH_I_AM_WEARING:                     db " WHICH I AM WEARING",0
0010+  6A95 205748494348204920414D2057454152494E4700
0011+  6AA9             TEXT_NOTHING:                                db "NOTHING AT ALL\r",0
0011+  6AA9 4E4F5448494E4720415420414C4C0D00
0012+  6AB9             TEXT_NOT_WEARING:                            db "I AM NOT WEARING IT\r",0
0012+  6AB9 4920414D204E4F542057454152494E472049540D00
0013+  6ACE             TEXT_HAND_FULL:                              db "I CANT. MY HANDS ARE FULL\r",0
0013+  6ACE 492043414E542E204D592048414E4453204152452046554C4C0D00
0014+  6AE9             TEXT_CANT_CARRY:                             db "I CANT CARRY ANY MORE\r",0
0014+  6AE9 492043414E5420434152525920414E59204D4F52450D00
0015+  6B00             TEXT_I_DONT_SEE:                             db "I DON'T SEE IT HERE\r",0
0015+  6B00 4920444F4E27542053454520495420484552450D00
0016+  6B15             TEXT_ALREADY_HAVE:                           db "I ALREADY HAVE IT\r",0
0016+  6B15 4920414C524541445920484156452049540D00
0017+  6B28             TEXT_I_DONT_HAVE:                            db "I DONT HAVE IT\r",0
0017+  6B28 4920444F4E5420484156452049540D00
0018+  6B38             TEXT_ALREADY_WEAR:                           db "I AM ALREADY WEARING IT\r",0
0018+  6B38 4920414D20414C52454144592057454152494E472049540D00
0019+  6B51             TEXT_I_DONT_HAVE_IT:                         db "I DONT HAVE IT\r",0
0019+  6B51 4920444F4E5420484156452049540D00
0020+  6B61             TEXT_OK:                                     db "OK..\r",0
0020+  6B61 4F4B2E2E0D00
0021+  6B67             TEXT_WANT_SAVE:                              db "DO YOU WANT TO SAVE THE GAME?\r",0
0021+  6B67 444F20594F552057414E5420544F2053415645205448452047414D453F0D00
0022+  6B86             TEXT_READY_TYPE:                             db "READY CASSETTE\r",0
0022+  6B86 52454144592043415353455454450D00
0023+  6B96             TEXT_CONTINUE:                               db "DO YOU WISH TO CONTINUE?\r",0
0023+  6B96 444F20594F55205749534820544F20434F4E54494E55453F0D00
0024+  6BB0             TEXT_TRY_AGAIN:                              db "DO YOU WISH TO TRY AGAIN?\r",0
0024+  6BB0 444F20594F55205749534820544F2054525920414741494E3F0D00
0025+  6BCB             TEXT_ANSWER:                                 db "ANSWER YES OR NO\r",0
0025+  6BCB 414E5357455220594553204F52204E4F0D00
0026+  6BDD             TEXT_SCORE:                                  db "YOU HAVE A SCORE OF ",0
0026+  6BDD 594F55204841564520412053434F5245204F462000
0027+  6BF2             TEXT_READY_CASSETE:                          db "READY CASSETTE\r",0
0027+  6BF2 52454144592043415353455454450D00
0028+  6C02             TEXT_WELCOME:                                db "WELCOME TO ADVENTURE 'A'\rTHE PLANET OF DEATH\r\rIN THIS ADVENTURE YOU FIND YOUR"
0028+  6C02 57454C434F4D4520544F20414456454E54555245202741270D54484520504C41
0028+  6C22 4E4554204F462044454154480D0D494E205448495320414456454E5455524520
0028+  6C42 594F552046494E4420594F5552
0029+  6C4F                                                         db "SELF STRANDED ON AN ALIEN PLANET. YOUR AIM IS TO ESCAPE FROM THIS PLANET BY FIND"
0029+  6C4F 53454C4620535452414E444544204F4E20414E20414C49454E20504C414E4554
0029+  6C6F 2E20594F55522041494D20495320544F204553434150452046524F4D20544849
0029+  6C8F 5320504C414E45542042592046494E44
0030+  6C9F                                                         db "ING YOUR, NOW CAPTURED AND DISABLED, SPACE SHIP\rYOU WILL MEET VARIOUS HAZARDS A"
0030+  6C9F 494E4720594F55522C204E4F5720434150545552454420414E44204449534142
0030+  6CBF 4C45442C20535041434520534849500D594F552057494C4C204D454554205641
0030+  6CDF 52494F55532048415A415244532041
0031+  6CEE                                                         db "ND DANGERS ON YOUR ADVENTURE, SOME NATURAL, SOME NOT, ALL OF WHICH YOU MUST OVER"
0031+  6CEE 4E442044414E47455253204F4E20594F555220414456454E545552452C20534F
0031+  6D0E 4D45204E41545552414C2C20534F4D45204E4F542C20414C4C204F4620574849
0031+  6D2E 434820594F55204D555354204F564552
0032+  6D3E                                                         db "COME TO SUCCEED\r\rGOOD LUCK, YOU WILL NEED IT!\r\rPRESS ANY KEY TO START\r",0
0032+  6D3E 434F4D4520544F20535543434545440D0D474F4F44204C55434B2C20594F5520
0032+  6D5E 57494C4C204E454544204954210D0D505245535320414E59204B455920544F20
0032+  6D7E 53544152540D00
0874   6D85             ITEM_DESC_POINTER:                           include text_items.asm
0001+  6D85 BF 6D                                                   dw OBJECT_A_PAIR_OF_BOOTS 
0002+  6D87 CF 6D                                                   dw OBJECT_A_STARTER_MOTOR 
0003+  6D89 DF 6D                                                   dw OBJECT_A_KEY 
0004+  6D8B E5 6D                                                   dw OBJECT_A_LASER_GUN 
0005+  6D8D F1 6D                                                   dw OBJECT_AN_OUT_OF_ORDER_SIGN 
0006+  6D8F 06 6E                                                   dw OBJECT_A_METAL_BAR 
0007+  6D91 12 6E                                                   dw OBJECT_A_GOLD_COIN 
0008+  6D93 1E 6E                                                   dw OBJECT_A_MIRROR 
0009+  6D95 27 6E                                                   dw OBJECT_BROKEN_GLASS 
0010+  6D97 34 6E                                                   dw OBJECT_A_PAIR_OF_SLIMY_GLOVES 
0011+  6D99 4B 6E                                                   dw OBJECT_A_ROPE 
0012+  6D9B 52 6E                                                   dw OBJECT_A_FLOOR_BOARD 
0013+  6D9D 60 6E                                                   dw OBJECT_A_BROKEN_FLOOR_BOARD 
0014+  6D9F 75 6E                                                   dw OBJECT_STALACTITES 
0015+  6DA1 81 6E                                                   dw OBJECT_A_BLOCK_OF_ICE 
0016+  6DA3 90 6E                                                   dw OBJECT_A_POOL_OF_WATER 
0017+  6DA5 A0 6E                                                   dw OBJECT_A_SMALL_GREEN_MAN_SLEEPING 
0018+  6DA7 C9 6E                                                   dw OBJECT_A_SLEEPING_GREEN_MAN 
0019+  6DA9 DE 6E                                                   dw OBJECT_A_LOCKED_DOOR 
0020+  6DAB EC 6E                                                   dw OBJECT_AN_OPEN_DOOR 
0021+  6DAD F9 6E                                                   dw OBJECT_A_BARRED_WINDOW 
0022+  6DAF 09 6F                                                   dw OBJECT_A_HOLE_IN_THE_WALL 
0023+  6DB1 1C 6F                                                   dw OBJECT_A_SMALL_BUT_POWERFULL_SPACE_SHIP 
0024+  6DB3 3D 6F                                                   dw OBJECT_A_SLEEPING_SECURITY_MAN 
0025+  6DB5 55 6F                                                   dw OBJECT_A_PIECE_OF_SHARP_FLINT 
0026+  6DB7 6C 6F                                                   dw OBJECT_SOME_STONES 
0027+  6DB9 78 6F                                                   dw OBJECT_A_DRAWING_ON_THE_WALL 
0028+  6DBB 8E 6F                                                   dw OBJECT_A_LOUDSPEAKER_WITH_DANCE_MUSIC 
0029+  6DBD 00 00                                                   dw 0x0000
0030+  6DBF             OBJECT_A_PAIR_OF_BOOTS:                      db "A PAIR OF BOOTS",0
0030+  6DBF 412050414952204F4620424F4F545300
0031+  6DCF             OBJECT_A_STARTER_MOTOR:                      db "A STARTER MOTOR",0
0031+  6DCF 412053544152544552204D4F544F5200
0032+  6DDF             OBJECT_A_KEY:                                db "A KEY",0
0032+  6DDF 41204B455900
0033+  6DE5             OBJECT_A_LASER_GUN:                          db "A LASER GUN",0
0033+  6DE5 41204C415345522047554E00
0034+  6DF1             OBJECT_AN_OUT_OF_ORDER_SIGN:                 db "AN OUT OF ORDER SIGN",0
0034+  6DF1 414E204F5554204F46204F52444552205349474E00
0035+  6E06             OBJECT_A_METAL_BAR:                          db "A METAL BAR",0
0035+  6E06 41204D4554414C2042415200
0036+  6E12             OBJECT_A_GOLD_COIN:                          db "A GOLD COIN",0
0036+  6E12 4120474F4C4420434F494E00
0037+  6E1E             OBJECT_A_MIRROR:                             db "A MIRROR",0
0037+  6E1E 41204D4952524F5200
0038+  6E27             OBJECT_BROKEN_GLASS:                         db "BROKEN GLASS",0
0038+  6E27 42524F4B454E20474C41535300
0039+  6E34             OBJECT_A_PAIR_OF_SLIMY_GLOVES:               db "A PAIR OF SLIMY GLOVES",0
0039+  6E34 412050414952204F4620534C494D5920474C4F56455300
0040+  6E4B             OBJECT_A_ROPE:                               db "A ROPE",0
0040+  6E4B 4120524F504500
0041+  6E52             OBJECT_A_FLOOR_BOARD:                        db "A FLOOR BOARD",0
0041+  6E52 4120464C4F4F5220424F41524400
0042+  6E60             OBJECT_A_BROKEN_FLOOR_BOARD:                 db "A BROKEN FLOOR BOARD",0
0042+  6E60 412042524F4B454E20464C4F4F5220424F41524400
0043+  6E75             OBJECT_STALACTITES:                          db "STALACTITES",0
0043+  6E75 5354414C4143544954455300
0044+  6E81             OBJECT_A_BLOCK_OF_ICE:                       db "A BLOCK OF ICE",0
0044+  6E81 4120424C4F434B204F462049434500
0045+  6E90             OBJECT_A_POOL_OF_WATER:                      db "A POOL OF WATER",0
0045+  6E90 4120504F4F4C204F4620574154455200
0046+  6EA0             OBJECT_A_SMALL_GREEN_MAN_SLEEPING:           db "A SMALL GREEN MAN SLEEPING ON THE MIRROR",0
0046+  6EA0 4120534D414C4C20475245454E204D414E20534C454550494E47204F4E205448
0046+  6EC0 45204D4952524F5200
0047+  6EC9             OBJECT_A_SLEEPING_GREEN_MAN:                 db "A SLEEPING GREEN MAN",0
0047+  6EC9 4120534C454550494E4720475245454E204D414E00
0048+  6EDE             OBJECT_A_LOCKED_DOOR:                        db "A LOCKED DOOR",0
0048+  6EDE 41204C4F434B454420444F4F5200
0049+  6EEC             OBJECT_AN_OPEN_DOOR:                         db "AN OPEN DOOR",0
0049+  6EEC 414E204F50454E20444F4F5200
0050+  6EF9             OBJECT_A_BARRED_WINDOW:                      db "A BARRED WINDOW",0
0050+  6EF9 41204241525245442057494E444F5700
0051+  6F09             OBJECT_A_HOLE_IN_THE_WALL:                   db "A HOLE IN THE WALL",0
0051+  6F09 4120484F4C4520494E205448452057414C4C00
0052+  6F1C             OBJECT_A_SMALL_BUT_POWERFULL_SPACE_SHIP:     db "A SMALL BUT POWERFULL SPACE SHIP",0
0052+  6F1C 4120534D414C4C2042555420504F57455246554C4C2053504143452053484950
0052+  6F3C 00
0053+  6F3D             OBJECT_A_SLEEPING_SECURITY_MAN:              db "A SLEEPING SECURITY MAN",0
0053+  6F3D 4120534C454550494E47205345435552495459204D414E00
0054+  6F55             OBJECT_A_PIECE_OF_SHARP_FLINT:               db "A PIECE OF SHARP FLINT",0
0054+  6F55 41205049454345204F4620534841525020464C494E5400
0055+  6F6C             OBJECT_SOME_STONES:                          db "SOME STONES",0
0055+  6F6C 534F4D452053544F4E455300
0056+  6F78             OBJECT_A_DRAWING_ON_THE_WALL:                db "A DRAWING ON THE WALL",0
0056+  6F78 412044524157494E47204F4E205448452057414C4C00
0057+  6F8E             OBJECT_A_LOUDSPEAKER_WITH_DANCE_MUSIC:       db "A LOUDSPEAKER WITH DANCE MUSIC COMING OUT",0
0057+  6F8E 41204C4F5544535045414B455220574954482044414E4345204D555349432043
0057+  6FAE 4F4D494E47204F555400
0875   6FB8             COMMAND_LIST:                                include text_commands.asm
0001+  6FB8                                                         define COMMAND_DOWN 0x01
0002+  6FB8                                                         define COMMAND_NORT 0x02
0003+  6FB8                                                         define COMMAND_SOUT 0x03
0004+  6FB8                                                         define COMMAND_EAST 0x04
0005+  6FB8                                                         define COMMAND_WEST 0x05
0006+  6FB8                                                         define COMMAND_GET 0x0D
0007+  6FB8                                                         define COMMAND_PUT 0x0E
0008+  6FB8                                                         define COMMAND_FIRE 0x0F
0009+  6FB8             			                                define COMMAND_BOOT 0x10 
0010+  6FB8             			                                define COMMAND_STAR 0x11 
0011+  6FB8             			                                define COMMAND_KEY 0x12 
0012+  6FB8             			                                define COMMAND_GUN 0x13 
0013+  6FB8                                                         define COMMAND_USED 0x14 
0014+  6FB8                                                         define COMMAND_BAR 0x15    
0015+  6FB8                                                         define COMMAND_COIN 0x16 
0016+  6FB8                                                         define COMMAND_MIRR 0x17
0017+  6FB8                                                         define COMMAND_BROK 0x18
0018+  6FB8                                                         define COMMAND_GLOV 0x19
0019+  6FB8                                                         define COMMAND_ROPE 0x1A
0020+  6FB8                                                         define COMMAND_FLOO 0x1B 
0021+  6FB8                                                         define COMMAND_STAL 0x1C
0022+  6FB8                                                         define COMMAND_ICE 0x1D  
0023+  6FB8                                                         define COMMAND_WATE 0x1E     
0024+  6FB8                                                         define COMMAND_MAN 0x1F                                                                                                                                                                                                                       
0025+  6FB8                                                         define COMMAND_DOOR 0x20 
0026+  6FB8                                                         define COMMAND_OPEN 0x21 
0027+  6FB8                                                         define COMMAND_WIND 0x22 
0028+  6FB8                                                         define COMMAND_SHIP 0x23 
0029+  6FB8                                                         define COMMAND_SECU 0x24
0030+  6FB8                                                         define COMMAND_FLIN 0x25
0031+  6FB8                                                         define COMMAND_STON 0x26
0032+  6FB8                                                         define COMMAND_DRAW 0x27    
0033+  6FB8                                                         define COMMAND_HELP 0x28                                             
0034+  6FB8                                                         define COMMAND_INVE 0x29 
0035+  6FB8                                                         define COMMAND_STOP 0x2A
0036+  6FB8                                                         define COMMAND_YES 0x2B                                            
0037+  6FB8                                                         define COMMAND_NO 0x2C 
0038+  6FB8                                                         define COMMAND_KEYB 0x2D 
0039+  6FB8                                                         define COMMAND_TYPE 0x2E 
0040+  6FB8                                                         define COMMAND_TURN 0x2F  
0041+  6FB8                                                         define COMMAND_HAND 0x30                                                                                        
0042+  6FB8                                                         define COMMAND_KILL 0x31  
0043+  6FB8                                                         define COMMAND_DANC 0x32 
0044+  6FB8                                                         define COMMAND_REMO 0x33     
0045+  6FB8                                                         define COMMAND_HIT 0x34                                             
0046+  6FB8                                                         define COMMAND_BRIB 0x35
0047+  6FB8                                                         define COMMAND_USE 0x36
0048+  6FB8                                                         define COMMAND_PUSH 0x37
0049+  6FB8                                                         define COMMAND_3 0x38
0050+  6FB8                                                         define COMMAND_2 0x39
0051+  6FB8                                                         define COMMAND_1 0x3A
0052+  6FB8                                                         define COMMAND_FIX 0x3B
0053+  6FB8                                                         define COMMAND_4 0x3C
0054+  6FB8                                                         define COMMAND_LOOK 0x3D
0055+  6FB8                                                         define COMMAND_STAN 0x3E
0056+  6FB8                                                         define COMMAND_TREE 0x3F
0057+  6FB8                                                         define COMMAND_CUT 0x40
0058+  6FB8                                                         define COMMAND_WEAR 0x41
0059+  6FB8                                                         define COMMAND_CROS 0x42
0060+  6FB8                                                         define COMMAND_JUMP 0x43
0061+  6FB8                                                         define COMMAND_RAVI 0x44
0062+  6FB8                                                         define COMMAND_UP 0x45
0063+  6FB8                                                         define COMMAND_FUSE 0x46
0064+  6FB8                                                         define COMMAND_REDE 0x47
0065+  6FB8                                                         define COMMAND_MAIN 0x48
0066+  6FB8                                                         define COMMAND_AUX 0x49
0067+  6FB8                                                         define COMMAND_FIEL 0x4A
0068+  6FB8                                                         define COMMAND_ANY 0xFF                           	
0069+  6FB8             
0070+  6FB8 44 4F 57 4E 											db "DOWN"
0071+  6FBC 01                                                      db COMMAND_DOWN
0072+  6FBD 44 20 20 20                                             db "D   "
0073+  6FC1 01                                                      db COMMAND_DOWN
0074+  6FC2 4E 4F 52 54                                             db "NORT"
0075+  6FC6 02                                                      db COMMAND_NORT
0076+  6FC7 4E 20 20 20                                             db "N   "
0077+  6FCB 02                                                      db COMMAND_NORT
0078+  6FCC 53 4F 55 54                                             db "SOUT"
0079+  6FD0 03                                                      db COMMAND_SOUT
0080+  6FD1 53 20 20 20                                             db "S   "
0081+  6FD5 03                                                      db COMMAND_SOUT
0082+  6FD6 45 41 53 54                                             db "EAST"
0083+  6FDA 04                                                      db COMMAND_EAST
0084+  6FDB 45 20 20 20                                             db "E   "
0085+  6FDF 04                                                      db COMMAND_EAST
0086+  6FE0 57 45 53 54                                             db "WEST"
0087+  6FE4 05                                                      db COMMAND_WEST
0088+  6FE5 57 20 20 20                                             db "W   "
0089+  6FE9 05                                                      db COMMAND_WEST
0090+  6FEA 47 45 54 20                                             db "GET "
0091+  6FEE 0D                                                      db COMMAND_GET
0092+  6FEF 50 49 43 4B                                             db "PICK"
0093+  6FF3 0D                                                      db COMMAND_GET
0094+  6FF4 44 52 4F 50                                             db "DROP"
0095+  6FF8 0E                                                      db COMMAND_PUT
0096+  6FF9 50 55 54 20                                             db "PUT "
0097+  6FFD 0E                                                      db COMMAND_PUT
0098+  6FFE 46 49 52 45                                             db "FIRE"
0099+  7002 0F                                                      db COMMAND_FIRE
0100+  7003 53 48 4F 4F                                             db "SHOO"
0101+  7007 0F                                                      db COMMAND_FIRE
0102+  7008 42 4F 4F 54                                             db "BOOT"
0103+  700C 10                                                      db COMMAND_BOOT
0104+  700D 53 54 41 52                                             db "STAR"
0105+  7011 11                                                      db COMMAND_STAR
0106+  7012 4D 4F 54 4F                                             db "MOTO"
0107+  7016 11                                                      db COMMAND_STAR
0108+  7017 4B 45 59 20                                             db "KEY "
0109+  701B 12                                                      db COMMAND_KEY
0110+  701C 4C 41 53 45                                             db "LASE"
0111+  7020 13                                                      db COMMAND_GUN
0112+  7021 47 55 4E 20                                             db "GUN "
0113+  7025 13                                                      db COMMAND_GUN
0114+  7026 55 53 45 44                                             db "USED"
0115+  702A 14                                                      db COMMAND_USED
0116+  702B 42 41 52 20                                             db "BAR "
0117+  702F 15                                                      db COMMAND_BAR
0118+  7030 42 41 52 53                                             db "BARS"
0119+  7034 15                                                      db COMMAND_BAR
0120+  7035 47 4F 4C 44                                             db "GOLD"
0121+  7039 16                                                      db COMMAND_COIN
0122+  703A 43 4F 49 4E                                             db "COIN"
0123+  703E 16                                                      db COMMAND_COIN
0124+  703F 4D 49 52 52                                             db "MIRR"
0125+  7043 17                                                      db COMMAND_MIRR
0126+  7044 42 52 4F 4B                                             db "BROK"
0127+  7048 18                                                      db COMMAND_BROK
0128+  7049 47 4C 4F 56                                             db "GLOV"
0129+  704D 19                                                      db COMMAND_GLOV
0130+  704E 52 4F 50 45                                             db "ROPE"
0131+  7052 1A                                                      db COMMAND_ROPE
0132+  7053 46 4C 4F 4F                                             db "FLOO"
0133+  7057 1B                                                      db COMMAND_FLOO
0134+  7058 42 4F 41 52                                             db "BOAR"
0135+  705C 1B                                                      db COMMAND_FLOO
0136+  705D 50 4C 41 4E                                             db "PLAN"
0137+  7061 1B                                                      db COMMAND_FLOO
0138+  7062 53 54 41 4C                                             db "STAL"
0139+  7066 1C                                                      db COMMAND_STAL
0140+  7067 42 4C 4F 43                                             db "BLOC"
0141+  706B 1D                                                      db COMMAND_ICE
0142+  706C 49 43 45 20                                             db "ICE "
0143+  7070 1D                                                      db COMMAND_ICE
0144+  7071 50 4F 4F 4C                                             db "POOL"
0145+  7075 1E                                                      db COMMAND_WATE
0146+  7076 57 41 54 45                                             db "WATE"
0147+  707A 1E                                                      db COMMAND_WATE
0148+  707B 4C 41 4B 45                                             db "LAKE"
0149+  707F 1E                                                      db COMMAND_WATE
0150+  7080 53 4C 45 45                                             db "SLEE"
0151+  7084 1F                                                      db COMMAND_MAN
0152+  7085 47 52 45 45                                             db "GREE"
0153+  7089 1F                                                      db COMMAND_MAN
0154+  708A 4D 41 4E 20                                             db "MAN "
0155+  708E 1F                                                      db COMMAND_MAN
0156+  708F 44 4F 4F 52                                             db "DOOR"
0157+  7093 20                                                      db COMMAND_DOOR
0158+  7094 4F 50 45 4E                                             db "OPEN"
0159+  7098 21                                                      db COMMAND_OPEN
0160+  7099 55 4E 4C 4F                                             db "UNLO"
0161+  709D 21                                                      db COMMAND_OPEN
0162+  709E 57 49 4E 44                                             db "WIND"
0163+  70A2 22                                                      db COMMAND_WIND
0164+  70A3 53 4D 41 4C                                             db "SMAL"
0165+  70A7 23                                                      db COMMAND_SHIP
0166+  70A8 53 50 41 43                                             db "SPAC"
0167+  70AC 23                                                      db COMMAND_SHIP
0168+  70AD 53 48 49 50                                             db "SHIP"
0169+  70B1 23                                                      db COMMAND_SHIP
0170+  70B2 53 45 43 55                                             db "SECU"
0171+  70B6 24                                                      db COMMAND_SECU
0172+  70B7 46 4C 49 4E                                             db "FLIN"
0173+  70BB 25                                                      db COMMAND_FLIN
0174+  70BC 53 54 4F 4E                                             db "STON"
0175+  70C0 26                                                      db COMMAND_STON
0176+  70C1 44 52 41 57                                             db "DRAW"
0177+  70C5 27                                                      db COMMAND_DRAW
0178+  70C6 48 45 4C 50                                             db "HELP"
0179+  70CA 28                                                      db COMMAND_HELP
0180+  70CB 49 4E 56 45                                             db "INVE"
0181+  70CF 29                                                      db COMMAND_INVE
0182+  70D0 49 20 20 20                                             db "I   "
0183+  70D4 29                                                      db COMMAND_INVE
0184+  70D5 51 55 49 54                                             db "QUIT"
0185+  70D9 2A                                                      db COMMAND_STOP
0186+  70DA 53 54 4F 50                                             db "STOP"
0187+  70DE 2A                                                      db COMMAND_STOP
0188+  70DF 41 42 4F 52                                             db "ABOR"
0189+  70E3 2A                                                      db COMMAND_STOP
0190+  70E4 59 45 53 20                                             db "YES "
0191+  70E8 2B                                                      db COMMAND_YES
0192+  70E9 59 20 20 20                                             db "Y   "
0193+  70ED 2B                                                      db COMMAND_YES
0194+  70EE 4E 4F 20 20                                             db "NO  "
0195+  70F2 2C                                                      db COMMAND_NO
0196+  70F3 43 4F 4D 50                                             db "COMP"
0197+  70F7 2D                                                      db COMMAND_KEYB
0198+  70F8 4B 45 59 42                                             db "KEYB"
0199+  70FC 2D                                                      db COMMAND_KEYB
0200+  70FD 54 59 50 45                                             db "TYPE"
0201+  7101 2E                                                      db COMMAND_TYPE
0202+  7102 54 55 52 4E                                             db "TURN"
0203+  7106 2F                                                      db COMMAND_TURN
0204+  7107 48 41 4E 44                                             db "HAND"
0205+  710B 30                                                      db COMMAND_HAND
0206+  710C 4B 49 4C 4C                                             db "KILL"
0207+  7110 31                                                      db COMMAND_KILL
0208+  7111 44 41 4E 43                                             db "DANC"
0209+  7115 32                                                      db COMMAND_DANC
0210+  7116 57 41 4C 54                                             db "WALT"
0211+  711A 32                                                      db COMMAND_DANC
0212+  711B 52 45 4D 4F                                             db "REMO"
0213+  711F 33                                                      db COMMAND_REMO
0214+  7120 4B 49 43 4B                                             db "KICK"
0215+  7124 34                                                      db COMMAND_HIT
0216+  7125 42 52 45 41                                             db "BREA"
0217+  7129 34                                                      db COMMAND_HIT
0218+  712A 48 49 54 20                                             db "HIT "
0219+  712E 34                                                      db COMMAND_HIT
0220+  712F 42 41 4E 47                                             db "BANG"
0221+  7133 34                                                      db COMMAND_HIT
0222+  7134 42 52 49 42                                             db "BRIB"
0223+  7138 35                                                      db COMMAND_BRIB
0224+  7139 55 53 45 20                                             db "USE "
0225+  713D 36                                                      db COMMAND_USE
0226+  713E 57 49 54 48                                             db "WITH"
0227+  7142 36                                                      db COMMAND_USE
0228+  7143 50 55 53 48                                             db "PUSH"
0229+  7147 37                                                      db COMMAND_PUSH
0230+  7148 54 48 52 45                                             db "THRE"
0231+  714C 38                                                      db COMMAND_3
0232+  714D 33 20 20 20                                             db "3   "
0233+  7151 38                                                      db COMMAND_3
0234+  7152 54 57 4F 20                                             db "TWO "
0235+  7156 39                                                      db COMMAND_2
0236+  7157 32 20 20 20                                             db "2   "
0237+  715B 39                                                      db COMMAND_2
0238+  715C 4F 4E 45 20                                             db "ONE "
0239+  7160 3A                                                      db COMMAND_1
0240+  7161 31 20 20 20                                             db "1   "
0241+  7165 3A                                                      db COMMAND_1
0242+  7166 4D 45 4E 44                                             db "MEND"
0243+  716A 3B                                                      db COMMAND_FIX
0244+  716B 46 49 58 20                                             db "FIX "
0245+  716F 3B                                                      db COMMAND_FIX
0246+  7170 52 45 50 41                                             db "REPA"
0247+  7174 3B                                                      db COMMAND_FIX
0248+  7175 46 4F 55 52                                             db "FOUR"
0249+  7179 3C                                                      db COMMAND_4
0250+  717A 34 20 20 20                                             db "4   "
0251+  717E 3C                                                      db COMMAND_4
0252+  717F 4C 4F 4F 4B                                             db "LOOK"
0253+  7183 3D                                                      db COMMAND_LOOK
0254+  7184 53 54 41 4E                                             db "STAN"
0255+  7188 3E                                                      db COMMAND_STAN
0256+  7189 54 52 45 45                                             db "TREE"
0257+  718D 3F                                                      db COMMAND_TREE
0258+  718E 43 55 54 20                                             db "CUT "
0259+  7192 40                                                      db COMMAND_CUT
0260+  7193 53 41 57 20                                             db "SAW "
0261+  7197 40                                                      db COMMAND_CUT
0262+  7198 57 45 41 52                                             db "WEAR"
0263+  719C 41                                                      db COMMAND_WEAR
0264+  719D 43 52 4F 53                                             db "CROS"
0265+  71A1 42                                                      db COMMAND_CROS
0266+  71A2 4A 55 4D 50                                             db "JUMP"
0267+  71A6 43                                                      db COMMAND_JUMP
0268+  71A7 52 41 56 49                                             db "RAVI"
0269+  71AB 44                                                      db COMMAND_RAVI
0270+  71AC 55 50 20 20                                             db "UP  "
0271+  71B0 45                                                      db COMMAND_UP
0272+  71B1 55 20 20 20                                             db "U   "
0273+  71B5 45                                                      db COMMAND_UP
0274+  71B6 43 4C 49 4D                                             db "CLIM"
0275+  71BA 45                                                      db COMMAND_UP
0276+  71BB 46 55 53 45                                             db "FUSE"
0277+  71BF 46                                                      db COMMAND_FUSE
0278+  71C0 52 45 44 45                                             db "REDE"
0279+  71C4 47                                                      db COMMAND_REDE
0280+  71C5 52 20 20 20                                             db "R   "
0281+  71C9 47                                                      db COMMAND_REDE
0282+  71CA 4D 41 49 4E                                             db "MAIN"
0283+  71CE 48                                                      db COMMAND_MAIN
0284+  71CF 41 55 58 20                                             db "AUX "
0285+  71D3 49                                                      db COMMAND_AUX
0286+  71D4 46 49 45 4C                                             db "FIEL"
0287+  71D8 4A                                                      db COMMAND_FIEL
0288+  71D9 53 48 49 45                                             db "SHIE"
0289+  71DD 4A                                                      db COMMAND_FIEL
0290+  71DE FF                                                      db 0xFF
0876   71DF             ROOM_NAV_POINTER:                            include navigations.asm
0001+  71DF 09 72                                                   dw ROOM_00_NAV 
0002+  71E1 10 72                                                   dw ROOM_01_NAV 
0003+  71E3 13 72                                                   dw ROOM_02_NAV 
0004+  71E5 18 72                                                   dw ROOM_03_NAV 
0005+  71E7 1D 72                                                   dw ROOM_04_NAV 
0006+  71E9 22 72                                                   dw ROOM_05_NAV 
0007+  71EB 25 72                                                   dw ROOM_06_NAV 
0008+  71ED 26 72                                                   dw ROOM_07_NAV 
0009+  71EF 31 72                                                   dw ROOM_08_NAV 
0010+  71F1 3C 72                                                   dw ROOM_09_NAV 
0011+  71F3 47 72                                                   dw ROOM_10_NAV 
0012+  71F5 52 72                                                   dw ROOM_11_NAV 
0013+  71F7 55 72                                                   dw ROOM_12_NAV 
0014+  71F9 5C 72                                                   dw ROOM_13_NAV 
0015+  71FB 5D 72                                                   dw ROOM_14_NAV 
0016+  71FD 60 72                                                   dw ROOM_15_NAV 
0017+  71FF 65 72                                                   dw ROOM_16_NAV 
0018+  7201 6C 72                                                   dw ROOM_17_NAV 
0019+  7203 6F 72                                                   dw ROOM_18_NAV 
0020+  7205 72 72                                                   dw ROOM_19_NAV 
0021+  7207 72 72                                                   dw ROOM_19_NAV 
0022+  7209 01          ROOM_00_NAV:                               db 0x01 ; cmd "DOWN"
0023+  720A 03                                                      db 0x03 ; to room 3
0024+  720B 04                                                      db 0x04 ; cmd "EAST"
0025+  720C 02                                                      db 0x02 ; to room 2
0026+  720D 05                                                      db 0x05 ; "WEST"
0027+  720E 01                                                      db 0x01 ; to room 1
0028+  720F FF                                                      db 0xFF
0029+  7210 04          ROOM_01_NAV:                               db 0x04 ; cmd "EAST"
0030+  7211 00                                                      db 0x00 ;  to room 0
0031+  7212 FF                                                      db 0xFF
0032+  7213 02          ROOM_02_NAV:                               db 0x02
0033+  7214 07                                                      db 0x07
0034+  7215 05                                                      db 0x05
0035+  7216 00                                                      db 0x00
0036+  7217 FF                                                      db 0xFF
0037+  7218 03          ROOM_03_NAV:                               db 0x03
0038+  7219 04                                                      db 0x04
0039+  721A 05                                                      db 0x05
0040+  721B 00                                                      db 0x00
0041+  721C FF                                                      db 0xFF
0042+  721D 02          ROOM_04_NAV:                               db 0x02
0043+  721E 03                                                      db 0x03
0044+  721F 04                                                      db 0x04
0045+  7220 05                                                      db 0x05
0046+  7221 FF                                                      db 0xFF
0047+  7222 02          ROOM_05_NAV:                               db 0x02
0048+  7223 04                                                      db 0x04
0049+  7224 FF                                                      db 0xFF
0050+  7225 FF          ROOM_06_NAV:                               db 0xFF
0051+  7226 01          ROOM_07_NAV:                               db 0x01
0052+  7227 07                                                      db 0x07
0053+  7228 02                                                      db 0x02
0054+  7229 08                                                      db 0x08
0055+  722A 03                                                      db 0x03
0056+  722B 07                                                      db 0x07
0057+  722C 04                                                      db 0x04
0058+  722D 07                                                      db 0x07
0059+  722E 05                                                      db 0x05
0060+  722F 07                                                      db 0x07
0061+  7230 FF                                                      db 0xFF
0062+  7231 01          ROOM_08_NAV:                               db 0x01
0063+  7232 07                                                      db 0x07
0064+  7233 02                                                      db 0x02
0065+  7234 07                                                      db 0x07
0066+  7235 03                                                      db 0x03
0067+  7236 09                                                      db 0x09
0068+  7237 04                                                      db 0x04
0069+  7238 07                                                      db 0x07
0070+  7239 05                                                      db 0x05
0071+  723A 07                                                      db 0x07
0072+  723B FF                                                      db 0xFF
0073+  723C 01          ROOM_09_NAV:                               db 0x01
0074+  723D 07                                                      db 0x07
0075+  723E 02                                                      db 0x02
0076+  723F 07                                                      db 0x07
0077+  7240 03                                                      db 0x03
0078+  7241 07                                                      db 0x07
0079+  7242 04                                                      db 0x04
0080+  7243 0A                                                      db 0x0A
0081+  7244 05                                                      db 0x05
0082+  7245 07                                                      db 0x07
0083+  7246 FF                                                      db 0xFF
0084+  7247 01          ROOM_10_NAV:                               db 0x01
0085+  7248 07                                                      db 0x07
0086+  7249 02                                                      db 0x02
0087+  724A 02                                                      db 0x02
0088+  724B 03                                                      db 0x03
0089+  724C 07                                                      db 0x07
0090+  724D 04                                                      db 0x04
0091+  724E 07                                                      db 0x07
0092+  724F 05                                                      db 0x05
0093+  7250 0B                                                      db 0x0B
0094+  7251 FF                                                      db 0xFF
0095+  7252 04          ROOM_11_NAV:                               db 0x04
0096+  7253 07                                                      db 0x07
0097+  7254 FF                                                      db 0xFF
0098+  7255 03          ROOM_12_NAV:                               db 0x03
0099+  7256 0F                                                      db 0x0F
0100+  7257 04                                                      db 0x04
0101+  7258 0D                                                      db 0x0D
0102+  7259 05                                                      db 0x05
0103+  725A 13                                                      db 0x13
0104+  725B FF                                                      db 0xFF
0105+  725C FF          ROOM_13_NAV:                               db 0xFF
0106+  725D 05          ROOM_14_NAV:                               db 0x05
0107+  725E 0D                                                      db 0x0D
0108+  725F FF                                                      db 0xFF
0109+  7260 04          ROOM_15_NAV:                               db 0x04
0110+  7261 13                                                      db 0x13
0111+  7262 05                                                      db 0x05
0112+  7263 13                                                      db 0x13
0113+  7264 FF                                                      db 0xFF
0114+  7265 02          ROOM_16_NAV:                               db 0x02
0115+  7266 0F                                                      db 0x0F
0116+  7267 03                                                      db 0x03
0117+  7268 13                                                      db 0x13
0118+  7269 04                                                      db 0x04
0119+  726A 11                                                      db 0x11
0120+  726B FF                                                      db 0xFF
0121+  726C 05          ROOM_17_NAV:                               db 0x05
0122+  726D 10                                                      db 0x10
0123+  726E FF                                                      db 0xFF
0124+  726F 04          ROOM_18_NAV:                               db 0x04
0125+  7270 10                                                      db 0x10
0126+  7271 FF                                                      db 0xFF
0127+  7272 FF          ROOM_19_NAV:                               db 0xFF
0877   7273             ACTION_TABLE:                                include actions.asm
0001+  7273 0D                                                      db COMMAND_GET
0002+  7274 10                                                      db COMMAND_BOOT
0003+  7275 63 75                                                   dw VALID_BOOT_AVAILABLE 
0004+  7277 22 76                                                   dw ACTION_GET_BOOT
0005+  7279             
0006+  7279 0D                                                      db COMMAND_GET
0007+  727A 11                                                      db COMMAND_STAR
0008+  727B 66 75                                                   dw VALID_STAR_AVAILABLE 
0009+  727D 25 76                                                   dw ACTION_GET_STAR
0010+  727F             
0011+  727F 0D                                                      db COMMAND_GET
0012+  7280 12                                                      db COMMAND_KEY
0013+  7281 69 75                                                   dw VALID_KEY_AVAILABLE 
0014+  7283 28 76                                                   dw ACTION_GET_KEY
0015+  7285             
0016+  7285 0D                                                      db COMMAND_GET
0017+  7286 13                                                      db COMMAND_GUN
0018+  7287 6C 75                                                   dw VALID_GUN_AVAILABLE 
0019+  7289 2B 76                                                   dw ACTION_GET_GUN
0020+  728B             
0021+  728B 0D                                                      db COMMAND_GET
0022+  728C 15                                                      db COMMAND_BAR
0023+  728D 6F 75                                                   dw VALID_BAR_AVAILABLE 
0024+  728F 2E 76                                                   dw ACTION_GET_BAR
0025+  7291             
0026+  7291 0D                                                      db COMMAND_GET
0027+  7292 16                                                      db COMMAND_COIN
0028+  7293 72 75                                                   dw VALID_COIN_AVAILABLE 
0029+  7295 31 76                                                   dw ACTION_GET_COIN
0030+  7297             
0031+  7297 0D                                                      db COMMAND_GET
0032+  7298 17                                                      db COMMAND_MIRR
0033+  7299 75 75                                                   dw VALID_MIRROR_IN_HANGAR 
0034+  729B 34 76                                                   dw ACTION_GET_MIRR
0035+  729D             
0036+  729D 0D                                                      db COMMAND_GET
0037+  729E 17                                                      db COMMAND_MIRR
0038+  729F 7A 75                                                   dw VALID_BROKEN_GLASS_AVAILABLE 
0039+  72A1 D2 76                                                   dw ACTION_GET_BROKEN_GLASS
0040+  72A3             
0041+  72A3 0D                                                      db COMMAND_GET
0042+  72A4 18                                                      db COMMAND_BROK
0043+  72A5 7A 75                                                   dw VALID_BROKEN_GLASS_AVAILABLE 
0044+  72A7 37 76                                                   dw ACTION_GET_BROKEN_GLASS_CLONE
0045+  72A9             
0046+  72A9 0D                                                      db COMMAND_GET
0047+  72AA 19                                                      db COMMAND_GLOV
0048+  72AB 7D 75                                                   dw VALID_GLOV_AVAILABLE 
0049+  72AD 3A 76                                                   dw ACTION_GET_GLOV
0050+  72AF             
0051+  72AF 0D                                                      db COMMAND_GET
0052+  72B0 1A                                                      db COMMAND_ROPE
0053+  72B1 80 75                                                   dw VALID_ROPE_AVAILABLE 
0054+  72B3 3D 76                                                   dw ACTION_GET_ROPE
0055+  72B5             
0056+  72B5 0D                                                      db COMMAND_GET
0057+  72B6 1B                                                      db COMMAND_FLOO
0058+  72B7 83 75                                                   dw VALID_FLOO_AVAILABLE 
0059+  72B9 40 76                                                   dw ACTION_GET_FLOO
0060+  72BB             
0061+  72BB 0D                                                      db COMMAND_GET
0062+  72BC 1B                                                      db COMMAND_FLOO
0063+  72BD 86 75                                                   dw VALID_BROKEN_FLOO_AVAILABLE 
0064+  72BF 43 76                                                   dw ACTION_GET_BROK
0065+  72C1             
0066+  72C1 0D                                                      db COMMAND_GET
0067+  72C2 18                                                      db COMMAND_BROK
0068+  72C3 86 75                                                   dw VALID_BROKEN_FLOO_AVAILABLE 
0069+  72C5 43 76                                                   dw ACTION_GET_BROK
0070+  72C7             
0071+  72C7 0D                                                      db COMMAND_GET
0072+  72C8 1C                                                      db COMMAND_STAL
0073+  72C9 89 75                                                   dw VALID_STAL_AVAILABLE 
0074+  72CB 46 76                                                   dw ACTION_GET_STAL
0075+  72CD             
0076+  72CD 0D                                                      db COMMAND_GET
0077+  72CE 1D                                                      db COMMAND_ICE
0078+  72CF 8C 75                                                   dw VALID_ICE_AVAILABLE 
0079+  72D1 49 76                                                   dw ACTION_GET_ICE
0080+  72D3             
0081+  72D3 0D                                                      db COMMAND_GET
0082+  72D4 25                                                      db COMMAND_FLIN
0083+  72D5 8F 75                                                   dw VALID_FLIN_AVAILABLE 
0084+  72D7 4F 76                                                   dw ACTION_GET_FLIN
0085+  72D9             
0086+  72D9 0D                                                      db COMMAND_GET
0087+  72DA 26                                                      db COMMAND_STON
0088+  72DB 92 75                                                   dw VALID_STON_AVAILABLE 
0089+  72DD 52 76                                                   dw ACTION_GET_STON
0090+  72DF             
0091+  72DF 29                                                      db COMMAND_INVE
0092+  72E0 FF                                                      db COMMAND_ANY
0093+  72E1 62 75                                                   dw VALID_NONE 
0094+  72E3 55 76                                                   dw ACTION_INVENTORY
0095+  72E5             
0096+  72E5 2A                                                      db COMMAND_STOP
0097+  72E6 FF                                                      db COMMAND_ANY
0098+  72E7 62 75                                                   dw VALID_NONE 
0099+  72E9 57 76                                                   dw ACTION_STOP
0100+  72EB             
0101+  72EB 0E                                                      db COMMAND_PUT
0102+  72EC 10                                                      db COMMAND_BOOT
0103+  72ED 63 75                                                   dw VALID_BOOT_AVAILABLE 
0104+  72EF 58 76                                                   dw ACTION_PUT_BOOT
0105+  72F1             
0106+  72F1 0E                                                      db COMMAND_PUT
0107+  72F2 11                                                      db COMMAND_STAR
0108+  72F3 66 75                                                   dw VALID_STAR_AVAILABLE 
0109+  72F5 5B 76                                                   dw ACTION_PUT_STAR
0110+  72F7             
0111+  72F7 0E                                                      db COMMAND_PUT
0112+  72F8 12                                                      db COMMAND_KEY
0113+  72F9 69 75                                                   dw VALID_KEY_AVAILABLE 
0114+  72FB 5E 76                                                   dw ACTION_PUT_KEY
0115+  72FD             
0116+  72FD 0E                                                      db COMMAND_PUT
0117+  72FE 13                                                      db COMMAND_GUN
0118+  72FF 6C 75                                                   dw VALID_GUN_AVAILABLE 
0119+  7301 61 76                                                   dw ACTION_PUT_GUN
0120+  7303             
0121+  7303 0E                                                      db COMMAND_PUT
0122+  7304 15                                                      db COMMAND_BAR
0123+  7305 6F 75                                                   dw VALID_BAR_AVAILABLE 
0124+  7307 64 76                                                   dw ACTION_PUT_BAR
0125+  7309             
0126+  7309 0E                                                      db COMMAND_PUT
0127+  730A 16                                                      db COMMAND_COIN
0128+  730B 72 75                                                   dw VALID_COIN_AVAILABLE 
0129+  730D 67 76                                                   dw ACTION_PUT_COIN
0130+  730F             
0131+  730F 0E                                                      db COMMAND_PUT
0132+  7310 17                                                      db COMMAND_MIRR
0133+  7311 95 75                                                   dw VALID_MIRROR_AVAILABLE 
0134+  7313 6A 76                                                   dw ACTION_PUT_MIRR
0135+  7315             
0136+  7315 0E                                                      db COMMAND_PUT
0137+  7316 17                                                      db COMMAND_MIRR
0138+  7317 7A 75                                                   dw VALID_BROKEN_GLASS_AVAILABLE 
0139+  7319 6D 76                                                   dw ACTION_PUT_BROKEN_GLASS
0140+  731B             
0141+  731B 0E                                                      db COMMAND_PUT
0142+  731C 18                                                      db COMMAND_BROK
0143+  731D 7A 75                                                   dw VALID_BROKEN_GLASS_AVAILABLE 
0144+  731F 6D 76                                                   dw ACTION_PUT_BROKEN_GLASS
0145+  7321             
0146+  7321 0E                                                      db COMMAND_PUT
0147+  7322 19                                                      db COMMAND_GLOV
0148+  7323 7D 75                                                   dw VALID_GLOV_AVAILABLE 
0149+  7325 70 76                                                   dw ACTION_PUT_GLOV
0150+  7327             
0151+  7327 0E                                                      db COMMAND_PUT
0152+  7328 1A                                                      db COMMAND_ROPE
0153+  7329 80 75                                                   dw VALID_ROPE_AVAILABLE 
0154+  732B 73 76                                                   dw ACTION_PUT_ROPE
0155+  732D             
0156+  732D 0E                                                      db COMMAND_PUT
0157+  732E 1B                                                      db COMMAND_FLOO
0158+  732F 83 75                                                   dw VALID_FLOO_AVAILABLE 
0159+  7331 76 76                                                   dw ACTION_PUT_FLOO
0160+  7333             
0161+  7333 0E                                                      db COMMAND_PUT
0162+  7334 1B                                                      db COMMAND_FLOO
0163+  7335 86 75                                                   dw VALID_BROKEN_FLOO_AVAILABLE 
0164+  7337 79 76                                                   dw ACTION_PUT_BROKEN_FLOO
0165+  7339             
0166+  7339 0F                                                      db COMMAND_FIRE
0167+  733A 18                                                      db COMMAND_BROK
0168+  733B 86 75                                                   dw VALID_BROKEN_FLOO_AVAILABLE 
0169+  733D 79 76                                                   dw ACTION_PUT_BROKEN_FLOO
0170+  733F             
0171+  733F 0E                                                      db COMMAND_PUT
0172+  7340 1C                                                      db COMMAND_STAL
0173+  7341 89 75                                                   dw VALID_STAL_AVAILABLE 
0174+  7343 7C 76                                                   dw ACTION_PUT_STAL
0175+  7345             
0176+  7345 0E                                                      db COMMAND_PUT
0177+  7346 1D                                                      db COMMAND_ICE
0178+  7347 8C 75                                                   dw VALID_ICE_AVAILABLE 
0179+  7349 7F 76                                                   dw ACTION_PUT_ICE
0180+  734B             
0181+  734B 0E                                                      db COMMAND_PUT
0182+  734C 25                                                      db COMMAND_FLIN
0183+  734D 8F 75                                                   dw VALID_FLIN_AVAILABLE 
0184+  734F 82 76                                                   dw ACTION_PUT_FLIN
0185+  7351             
0186+  7351 0E                                                      db COMMAND_PUT
0187+  7352 26                                                      db COMMAND_STON
0188+  7353 92 75                                                   dw VALID_STON_AVAILABLE 
0189+  7355 85 76                                                   dw ACTION_PUT_STON
0190+  7357             
0191+  7357 3D                                                      db COMMAND_LOOK
0192+  7358 27                                                      db COMMAND_DRAW
0193+  7359 98 75                                                   dw VALID_IS_CAVE
0194+  735B 88 76                                                   dw ACTION_LOOK_DRAW
0195+  735D             
0196+  735D 34                                                      db COMMAND_HIT
0197+  735E 1C                                                      db COMMAND_STAL
0198+  735F 98 75                                                   dw VALID_IS_CAVE
0199+  7361 8B 76                                                   dw ACTION_HIT_STAL
0200+  7363             
0201+  7363 36                                                      db COMMAND_USE
0202+  7364 1D                                                      db COMMAND_ICE
0203+  7365 9B 75                                                   dw VALID_USE_ICE
0204+  7367 8E 76                                                   dw ACTION_USE_ICE
0205+  7369             
0206+  7369 40                                                      db COMMAND_CUT
0207+  736A 1A                                                      db COMMAND_ROPE
0208+  736B A0 75                                                   dw VALID_CUT_ROPE
0209+  736D 93 76                                                   dw ACTION_CUT_ROPE
0210+  736F             
0211+  736F 36                                                      db COMMAND_USE
0212+  7370 25                                                      db COMMAND_FLIN
0213+  7371 A3 75                                                   dw VALID_USE_FLINT
0214+  7373 96 76                                                   dw ACTION_USE_FLINT
0215+  7375             
0216+  7375 41                                                      db COMMAND_WEAR
0217+  7376 10                                                      db COMMAND_BOOT
0218+  7377 62 75                                                   dw VALID_NONE 
0219+  7379 9B 76                                                   dw ACTIO_WEAR_BOOT 
0220+  737B             
0221+  737B 33                                                      db COMMAND_REMO
0222+  737C 10                                                      db COMMAND_BOOT
0223+  737D 62 75                                                   dw VALID_NONE 
0224+  737F 9E 76                                                   dw ACTION_REMOVE_BOOT
0225+  7381             
0226+  7381 42                                                      db COMMAND_CROS
0227+  7382 44                                                      db COMMAND_RAVI
0228+  7383 A8 75                                                   dw VALID_IS_LAKE
0229+  7385 A1 76                                                   dw ACTION_DEATH
0230+  7387             
0231+  7387 42                                                      db COMMAND_CROS
0232+  7388 44                                                      db COMMAND_RAVI
0233+  7389 AB 75                                                   dw VALID_IS_SHAD
0234+  738B A1 76                                                   dw ACTION_DEATH 
0235+  738D             
0236+  738D 36                                                      db COMMAND_USE
0237+  738E 1B                                                      db COMMAND_FLOO
0238+  738F AE 75                                                   dw VALID_IS_LAKE_WITH_FLOOR
0239+  7391 A4 76                                                   dw ACTION_USE_FLOO_IN_LAKE
0240+  7393             
0241+  7393 36                                                      db COMMAND_USE
0242+  7394 1B                                                      db COMMAND_FLOO
0243+  7395 B3 75                                                   dw VALID_IS_SHAD_WITH_FLOOR
0244+  7397 A7 76                                                   dw ACTION_USE_FLOO_IN_SHED 
0245+  7399             
0246+  7399 43                                                      db COMMAND_JUMP
0247+  739A 44                                                      db COMMAND_RAVI
0248+  739B AE 75                                                   dw VALID_IS_LAKE_WITH_FLOOR
0249+  739D AE 76                                                   dw ACTION_DIE_BY_FALL 
0250+  739F             
0251+  739F 43                                                      db COMMAND_JUMP
0252+  73A0 44                                                      db COMMAND_RAVI
0253+  73A1 AB 75                                                   dw VALID_IS_SHAD
0254+  73A3 AE 76                                                   dw ACTION_DIE_BY_FALL
0255+  73A5             
0256+  73A5 01                                                      db COMMAND_DOWN
0257+  73A6 FF                                                      db COMMAND_ANY
0258+  73A7 B8 75                                                   dw VALID_IS_ICE_CAVERN
0259+  73A9 A1 76                                                   dw ACTION_DEATH
0260+  73AB             
0261+  73AB 36                                                      db COMMAND_USE
0262+  73AC 1D                                                      db COMMAND_ICE
0263+  73AD BB 75                                                   dw VALID_IS_ICE_CAVERN_WITH_ICE_BLOCK
0264+  73AF B1 76                                                   dw ACTION_USE_ICE_IN_CAVERN 
0265+  73B1             
0266+  73B1 0D                                                      db COMMAND_GET
0267+  73B2 1F                                                      db COMMAND_MAN
0268+  73B3 C0 75                                                   dw VALID_IS_MAN_AND_WEARED_GLOVES 
0269+  73B5 BB 76                                                   dw ACTION_GET_SLIME_MEN
0270+  73B7             
0271+  73B7 0D                                                      db COMMAND_GET
0272+  73B8 1F                                                      db COMMAND_MAN
0273+  73B9 C7 75                                                   dw VALID_IS_MAN_AND_GLOVES 
0274+  73BB C7 76                                                   dw ACTION_GET_MEN
0275+  73BD             
0276+  73BD 0D                                                      db COMMAND_GET
0277+  73BE 1F                                                      db COMMAND_MAN
0278+  73BF CC 75                                                   dw VALID_IS_MAN_ONLY 
0279+  73C1 BB 76                                                   dw ACTION_GET_SLIME_MEN
0280+  73C3             
0281+  73C3 0E                                                      db COMMAND_PUT
0282+  73C4 1F                                                      db COMMAND_MAN
0283+  73C5 CF 75                                                   dw VALID_IS_MAN_AVAILABLE 
0284+  73C7 CC 76                                                   dw ACTION_PUT_MAN
0285+  73C9             
0286+  73C9 0D                                                      db COMMAND_GET
0287+  73CA 17                                                      db COMMAND_MIRR
0288+  73CB D2 75                                                   dw VALID_IS_MIRR_WITH_MAN 
0289+  73CD CF 76                                                   dw ACTION_GET_MIRR_WITH_MAN
0290+  73CF             
0291+  73CF 0D                                                      db COMMAND_GET
0292+  73D0 18                                                      db COMMAND_BROK
0293+  73D1 7A 75                                                   dw VALID_BROKEN_GLASS_AVAILABLE 
0294+  73D3 37 76                                                   dw ACTION_GET_BROKEN_GLASS_CLONE
0295+  73D5             
0296+  73D5 0E                                                      db COMMAND_PUT
0297+  73D6 17                                                      db COMMAND_MIRR
0298+  73D7 95 75                                                   dw VALID_MIRROR_AVAILABLE 
0299+  73D9 D5 76                                                   dw ACTION_DROP_MIRR
0300+  73DB             
0301+  73DB 0E                                                      db COMMAND_PUT
0302+  73DC 18                                                      db COMMAND_BROK
0303+  73DD 7A 75                                                   dw VALID_BROKEN_GLASS_AVAILABLE 
0304+  73DF D8 76                                                   dw ACTION_DROP_BROKEN_GLASS
0305+  73E1             
0306+  73E1 31                                                      db COMMAND_KILL
0307+  73E2 1F                                                      db COMMAND_MAN
0308+  73E3 D7 75                                                   dw VALID_IS_MAN_AVAILABLE_TO_KILL 
0309+  73E5 DB 76                                                   dw ACTION_ASK_HOW
0310+  73E7             
0311+  73E7 31                                                      db COMMAND_KILL
0312+  73E8 1F                                                      db COMMAND_MAN
0313+  73E9 CF 75                                                   dw VALID_IS_MAN_AVAILABLE 
0314+  73EB DB 76                                                   dw ACTION_ASK_HOW
0315+  73ED             
0316+  73ED 36                                                      db COMMAND_USE
0317+  73EE 13                                                      db COMMAND_GUN
0318+  73EF DA 75                                                   dw VALID_IS_MAN_AND_GUN_AVAILABLE 
0319+  73F1 DE 76                                                   dw ACTION_KILL_MAN_MIRROR_BROKEN
0320+  73F3             
0321+  73F3 36                                                      db COMMAND_USE
0322+  73F4 13                                                      db COMMAND_GUN
0323+  73F5 DF 75                                                   dw VALID_IS_GUN_AVAIL_MAN_POCKETED 
0324+  73F7 E7 76                                                   dw ACTION_ASK_WHAT_AT
0325+  73F9             
0326+  73F9 36                                                      db COMMAND_USE
0327+  73FA 13                                                      db COMMAND_GUN
0328+  73FB E6 75                                                   dw VALID_IS_SLEEPING_MAN_AND_GUN_AVAILABLE 
0329+  73FD EA 76                                                   dw ACTION_JUST_KILL_MAN
0330+  73FF             
0331+  73FF 2E                                                      db COMMAND_TYPE
0332+  7400 28                                                      db COMMAND_HELP
0333+  7401 EB 75                                                   dw VALID_IS_COMPUTER_ROOM
0334+  7403 EF 76                                                   dw ACTION_TYPE_HELP 
0335+  7405             
0336+  7405 0F                                                      db COMMAND_FIRE
0337+  7406 13                                                      db COMMAND_GUN
0338+  7407 EE 75                                                   dw VALID_IS_PASSAGE
0339+  7409 E7 76                                                   dw ACTION_ASK_WHAT_AT
0340+  740B             
0341+  740B 4A                                                      db COMMAND_FIEL
0342+  740C FF                                                      db COMMAND_ANY
0343+  740D F1 75                                                   dw VALID_IS_PASSAGE_AND_GUN_AND_7
0344+  740F F2 76                                                   dw ACTION_SHIELD_WEAKENED_0
0345+  7411             
0346+  7411 4A                                                      db COMMAND_FIEL
0347+  7412 FF                                                      db COMMAND_ANY
0348+  7413 F8 75                                                   dw VALID_IS_PASSAGE_AND_GUN_AND_7_AND_8 
0349+  7415 F7 76                                                   dw ACTION_SHIELD_WEAKENED_1
0350+  7417             
0351+  7417 4A                                                      db COMMAND_FIEL
0352+  7418 FF                                                      db COMMAND_ANY
0353+  7419 01 76                                                   dw VALID_IS_PASSAGE_AND_GUN_AND_8 
0354+  741B FC 76                                                   dw ACTION_NO_EFFECT 
0355+  741D             
0356+  741D 32                                                      db COMMAND_DANC
0357+  741E FF                                                      db COMMAND_ANY
0358+  741F 08 76                                                   dw VALID_IS_PASSAGE_AND_MIRR_AND_8
0359+  7421 FF 76                                                   dw ACTION_ENTER_HANGAR
0360+  7423             
0361+  7423 32                                                      db COMMAND_DANC
0362+  7424 FF                                                      db COMMAND_ANY
0363+  7425 0F 76                                                   dw VALID_IS_PASSAGE_ONLY
0364+  7427 05 77                                                   dw ACTION_ENTER_PRISON
0365+  7429             
0366+  7429 21                                                      db COMMAND_OPEN
0367+  742A 20                                                      db COMMAND_DOOR
0368+  742B 12 76                                                   dw VALID_IS_HANGER
0369+  742D DB 76                                                   dw ACTION_ASK_HOW
0370+  742F             
0371+  742F 36                                                      db COMMAND_USE
0372+  7430 12                                                      db COMMAND_KEY
0373+  7431 15 76                                                   dw VALID_IS_HANGER_AND_KEY
0374+  7433 0A 77                                                   dw ACTION_ENTER_LIFT_CONTROL_ROOM 
0375+  7435             
0376+  7435 31                                                      db COMMAND_KILL
0377+  7436 24                                                      db COMMAND_SECU
0378+  7437 1A 76                                                   dw VALID_IS_HANGER_AND_GUN
0379+  7439 0D 77                                                   dw ACTION_KILL_SECU 
0380+  743B             
0381+  743B 3D                                                      db COMMAND_LOOK
0382+  743C 45                                                      db COMMAND_UP
0383+  743D 1F 76                                                   dw VALID_IS_PRISON_CELL
0384+  743F 10 77                                                   dw ACTION_LOOK_UP 
0385+  7441             
0386+  7441 34                                                      db COMMAND_HIT
0387+  7442 15                                                      db COMMAND_BAR
0388+  7443 1F 76                                                   dw VALID_IS_PRISON_CELL
0389+  7445 13 77                                                   dw ACTION_HIT_BAR
0390+  7447             
0391+  7447 45                                                      db COMMAND_UP
0392+  7448 FF                                                      db COMMAND_ANY
0393+  7449 18 77                                                   dw VALID_IS_PRISON_CELL_AND_HOLE
0394+  744B BB 77                                                   dw ACTION_UP_IN_PRISON
0395+  744D             
0396+  744D 35                                                      db COMMAND_BRIB
0397+  744E 24                                                      db COMMAND_SECU
0398+  744F 1D 77                                                   dw VALID_IS_PRISON_CELL_FOR_BRIBE
0399+  7451 C0 77                                                   dw ACTION_BRIB_SECU
0400+  7453                                                         
0401+  7453 36                                                      db COMMAND_USE
0402+  7454 16                                                      db COMMAND_COIN
0403+  7455 20 77                                                   dw VALID_IS_PRISON_AND_COIN
0404+  7457 C3 77                                                   dw ACTION_USE_COIN
0405+  7459             
0406+  7459 20                                                      db COMMAND_DOOR
0407+  745A FF                                                      db COMMAND_ANY
0408+  745B 25 77                                                   dw VALID_IS_PRISON_AND_OPEN_DOOR
0409+  745D C8 77                                                   dw ACTION_DOOR
0410+  745F             
0411+  745F 3D                                                      db COMMAND_LOOK
0412+  7460 1E                                                      db COMMAND_WATE
0413+  7461 2A 77                                                   dw VALID_IS_LAKE_AND_COIN
0414+  7463 CD 77                                                   dw ACTION_LOOK_WATE 
0415+  7465             
0416+  7465 0D                                                      db COMMAND_GET
0417+  7466 16                                                      db COMMAND_COIN
0418+  7467 2A 77                                                   dw VALID_IS_LAKE_AND_COIN
0419+  7469 D0 77                                                   dw ACTION_CANT_REACH
0420+  746B             
0421+  746B 1E                                                      db COMMAND_WATE
0422+  746C FF                                                      db COMMAND_ANY
0423+  746D 2F 77                                                   dw VALID_IS_LAKE_AND_BOOT_WEARED
0424+  746F D6 77                                                   dw ACTION_WATER_WITH_WEARED_BOOT
0425+  7471             
0426+  7471 1E                                                      db COMMAND_WATE
0427+  7472 FF                                                      db COMMAND_ANY
0428+  7473 38 77                                                   dw VALID_IS_LAKE_AND_BOOT_NOT_WEARED
0429+  7475 D3 77                                                   dw ACTION_WATER_WITHOUT_WEARED_BOOT 
0430+  7477             
0431+  7477 1E                                                      db COMMAND_WATE
0432+  7478 FF                                                      db COMMAND_ANY
0433+  7479 2A 77                                                   dw VALID_IS_LAKE_AND_COIN
0434+  747B DB 77                                                   dw ACTION_WATER_TOO_COLD
0435+  747D                                                         
0436+  747D 21                                                      db COMMAND_OPEN
0437+  747E 20                                                      db COMMAND_DOOR
0438+  747F 3F 77                                                   dw VALID_IS_WIND_TUNNEL
0439+  7481 DE 77                                                   dw ACTION_NAV_TO_COMP_ROOM
0440+  7483                                                         
0441+  7483 37                                                      db COMMAND_PUSH
0442+  7484 38                                                      db COMMAND_3
0443+  7485 42 77                                                   dw VALID_IS_LIFT_CONTROL_AND_9_A
0444+  7487 E1 77                                                   dw ACTION_PUSH_3_FIRST
0445+  7489                                                         
0446+  7489 37                                                      db COMMAND_PUSH
0447+  748A 38                                                      db COMMAND_3
0448+  748B 49 77                                                   dw VALID_IS_LIFT_CONTROL_AND_A
0449+  748D E5 77                                                   dw ACTION_FUSE_BLOWN 
0450+  748F             
0451+  748F 37                                                      db COMMAND_PUSH
0452+  7490 39                                                      db COMMAND_2
0453+  7491 4E 77                                                   dw VALID_IS_LIFT_CONTROL_AND_A_9_1
0454+  7493 EC 77                                                   dw ACTION_PUSH_2_FIRST
0455+  7495             
0456+  7495 37                                                      db COMMAND_PUSH
0457+  7496 39                                                      db COMMAND_2
0458+  7497 49 77                                                   dw VALID_IS_LIFT_CONTROL_AND_A
0459+  7499 E5 77                                                   dw ACTION_FUSE_BLOWN
0460+  749B                                                         
0461+  749B 37                                                      db COMMAND_PUSH
0462+  749C 3A                                                      db COMMAND_1
0463+  749D 56 77                                                   dw VALID_IS_LIFT_CONTROL_AND_A_9_2
0464+  749F F0 77                                                   dw ACTION_LIFT_ACTIVATE 
0465+  74A1             
0466+  74A1 37                                                      db COMMAND_PUSH
0467+  74A2 3A                                                      db COMMAND_1
0468+  74A3 49 77                                                   dw VALID_IS_LIFT_CONTROL_AND_A
0469+  74A5 E5 77                                                   dw ACTION_FUSE_BLOWN 
0470+  74A7             
0471+  74A7 3B                                                      db COMMAND_FIX
0472+  74A8 46                                                      db COMMAND_FUSE
0473+  74A9 5E 77                                                   dw VALID_IS_LIFT_CONTROL_AND_A_FIX
0474+  74AB F6 77                                                   dw ACTION_SHOW_WHAT_WITH 
0475+  74AD             
0476+  74AD 36                                                      db COMMAND_USE
0477+  74AE 15                                                      db COMMAND_BAR
0478+  74AF 63 77                                                   dw VALID_IS_LIFT_CONTROL_AND_A_BAR
0479+  74B1 F9 77                                                   dw ACTION_USE_BAR 
0480+  74B3             
0481+  74B3 3D                                                      db COMMAND_LOOK
0482+  74B4 FF                                                      db COMMAND_ANY
0483+  74B5 6A 77                                                   dw VALID_IS_ICE_CAVERN_LOOK
0484+  74B7 FE 77                                                   dw ACTION_LOOK_IN_CAVERN 
0485+  74B9             
0486+  74B9 28                                                      db COMMAND_HELP
0487+  74BA FF                                                      db COMMAND_ANY
0488+  74BB 6D 77                                                   dw VALID_IS_LIFT_FOR_HELP
0489+  74BD 01 78                                                   dw ACTION_HELP_ABOUT_KEEP_OFF 
0490+  74BF             
0491+  74BF 28                                                      db COMMAND_HELP
0492+  74C0 FF                                                      db COMMAND_ANY
0493+  74C1 70 77                                                   dw VALID_IS_PASSAGE_FOR_HELP
0494+  74C3 04 78                                                   dw ACTION_HELP_ABOUT_VANITY_WALTZ 
0495+  74C5             
0496+  74C5 28                                                      db COMMAND_HELP
0497+  74C6 FF                                                      db COMMAND_ANY
0498+  74C7 73 77                                                   dw VALID_IS_COMP_ROOM_FOR_HELP
0499+  74C9 07 78                                                   dw ACTION_HELP_TRY_HELP 
0500+  74CB             
0501+  74CB 28                                                      db COMMAND_HELP
0502+  74CC FF                                                      db COMMAND_ANY
0503+  74CD 76 77                                                   dw VALID_IS_MAZE1_FOR_HELP
0504+  74CF 0A 78                                                   dw ACTION_HELP_ABOUT_COMPASS 
0505+  74D1             
0506+  74D1 28                                                      db COMMAND_HELP
0507+  74D2 FF                                                      db COMMAND_ANY
0508+  74D3 79 77                                                   dw VALID_IS_MAZE2_FOR_HELP
0509+  74D5 0A 78                                                   dw ACTION_HELP_ABOUT_COMPASS 
0510+  74D7             
0511+  74D7 28                                                      db COMMAND_HELP
0512+  74D8 FF                                                      db COMMAND_ANY
0513+  74D9 7C 77                                                   dw VALID_IS_MAZE3_FOR_HELP
0514+  74DB 0A 78                                                   dw ACTION_HELP_ABOUT_COMPASS 
0515+  74DD             
0516+  74DD 28                                                      db COMMAND_HELP
0517+  74DE FF                                                      db COMMAND_ANY
0518+  74DF 7F 77                                                   dw VALID_IS_MAZE4_FOR_HELP
0519+  74E1 0A 78                                                   dw ACTION_HELP_ABOUT_COMPASS 
0520+  74E3             
0521+  74E3 28                                                      db COMMAND_HELP
0522+  74E4 FF                                                      db COMMAND_ANY
0523+  74E5 82 77                                                   dw VALID_IS_SPACESHIP_AND_C
0524+  74E7 01 78                                                   dw ACTION_HELP_ABOUT_KEEP_OFF 
0525+  74E9             
0526+  74E9 3D                                                      db COMMAND_LOOK
0527+  74EA 45                                                      db COMMAND_UP
0528+  74EB 87 77                                                   dw VALID_IS_QUIET_CAVERN_AND_B 
0529+  74ED 0D 78                                                   dw ACTION_MSG_I_SEE_ROPE
0530+  74EF             
0531+  74EF 05                                                      db COMMAND_WEST
0532+  74F0 FF                                                      db COMMAND_ANY
0533+  74F1 8C 77                                                   dw VALID_IS_TUNNEL_FOR_WEST
0534+  74F3 10 78                                                   dw ACTION_NAV_CAVERN_AND_2_SET 
0535+  74F5             
0536+  74F5 02                                                      db COMMAND_NORT
0537+  74F6 FF                                                      db COMMAND_ANY
0538+  74F7 70 77                                                   dw VALID_IS_PASSAGE_FOR_HELP
0539+  74F9 10 78                                                   dw ACTION_NAV_CAVERN_AND_2_SET 
0540+  74FB             
0541+  74FB 41                                                      db COMMAND_WEAR
0542+  74FC 19                                                      db COMMAND_GLOV
0543+  74FD 62 75                                                   dw VALID_NONE 
0544+  74FF 16 78                                                   dw ACTION_WEAR_GLOV
0545+  7501                                                         
0546+  7501 33                                                      db COMMAND_REMO
0547+  7502 19                                                      db COMMAND_GLOV
0548+  7503 62 75                                                   dw VALID_NONE 
0549+  7505 19 78                                                   dw ACTION_REMO_GLOV
0550+  7507             
0551+  7507 47                                                      db COMMAND_REDE
0552+  7508 FF                                                      db COMMAND_ANY
0553+  7509 62 75                                                   dw VALID_NONE 
0554+  750B 1C 78                                                   dw ACTION_REDESCRIBE 
0555+  750D             
0556+  750D 01                                                      db COMMAND_DOWN
0557+  750E FF                                                      db COMMAND_ANY
0558+  750F 8F 77                                                   dw VALID_IS_EDGE_OF_PIT
0559+  7511 1D 78                                                   dw ACTION_ASK_HOW_DOWN 
0560+  7513             
0561+  7513 36                                                      db COMMAND_USE
0562+  7514 1A                                                      db COMMAND_ROPE
0563+  7515 92 77                                                   dw VALID_IS_PIT_AND_ROPE
0564+  7517 20 78                                                   dw ACTION_USE_ROPE
0565+  7519             
0566+  7519 43                                                      db COMMAND_JUMP
0567+  751A FF                                                      db COMMAND_ANY
0568+  751B 8F 77                                                   dw VALID_IS_EDGE_OF_PIT
0569+  751D 27 78                                                   dw ACTION_SHOW_ITS_TOO_DEEP 
0570+  751F             
0571+  751F 45                                                      db COMMAND_UP
0572+  7520 1A                                                      db COMMAND_ROPE
0573+  7521 97 77                                                   dw VALID_IS_CAVERN_AND_B
0574+  7523 2A 78                                                   dw ACTION_NAV_TO_PIT 
0575+  7525             
0576+  7525 23                                                      db COMMAND_SHIP
0577+  7526 FF                                                      db COMMAND_ANY
0578+  7527 9C 77                                                   dw VALID_IS_SHIP_AVAILABLE 
0579+  7529 2D 78                                                   dw ACTION_NAV_TO_SHIP
0580+  752B             
0581+  752B 37                                                      db COMMAND_PUSH
0582+  752C 48                                                      db COMMAND_MAIN
0583+  752D 9F 77                                                   dw VALID_IS_SHIP_AND_STARTER
0584+  752F 30 78                                                   dw ACTION_SHIP_BLOW_UP 
0585+  7531             
0586+  7531 37                                                      db COMMAND_PUSH
0587+  7532 49                                                      db COMMAND_AUX
0588+  7533 9F 77                                                   dw VALID_IS_SHIP_AND_STARTER
0589+  7535 33 78                                                   dw ACTION_SHIP_NAV_TO_LIFT
0590+  7537             
0591+  7537 37                                                      db COMMAND_PUSH
0592+  7538 38                                                      db COMMAND_3
0593+  7539 A4 77                                                   dw VALID_IS_SPACE_SHIP_AND_C
0594+  753B 38 78                                                   dw ACTION_KILL_BY_GUARD_ALARMED 
0595+  753D             
0596+  753D 37                                                      db COMMAND_PUSH
0597+  753E 39                                                      db COMMAND_2
0598+  753F A4 77                                                   dw VALID_IS_SPACE_SHIP_AND_C
0599+  7541 38 78                                                   dw ACTION_KILL_BY_GUARD_ALARMED 
0600+  7543             
0601+  7543 37                                                      db COMMAND_PUSH
0602+  7544 3C                                                      db COMMAND_4
0603+  7545 A9 77                                                   dw VALID_IS_SPACE_SHIP_AND_C_AND_9_3
0604+  7547 3B 78                                                   dw ACTION_GAME_WIN 
0605+  7549             
0606+  7549 37                                                      db COMMAND_PUSH
0607+  754A 3A                                                      db COMMAND_1
0608+  754B B1 77                                                   dw VALID_IS_SPACE_SHIP_AND_C_AND_9_3_BOOT
0609+  754D 43 78                                                   dw ACTION_GAME_WIN_BOOTS 
0610+  754F             
0611+  754F 37                                                      db COMMAND_PUSH
0612+  7550 3A                                                      db COMMAND_1
0613+  7551 A9 77                                                   dw VALID_IS_SPACE_SHIP_AND_C_AND_9_3
0614+  7553 3E 78                                                   dw ACTION_DEATH_BY_ELECTRICITY 
0615+  7555             
0616+  7555 28                                                      db COMMAND_HELP
0617+  7556 FF                                                      db COMMAND_ANY
0618+  7557 62 75                                                   dw VALID_NONE 
0619+  7559 4A 78                                                   dw ACTION_HELP 
0620+  755B             
0621+  755B 3D                                                      db COMMAND_LOOK
0622+  755C FF                                                      db COMMAND_ANY
0623+  755D 62 75                                                   dw VALID_NONE 
0624+  755F 4D 78                                                   dw ACTION_LOOK 
0625+  7561             
0626+  7561 00                                                      db 0x00
0627+  7562 FF          VALID_NONE:                               db 0xFF
0628+  7563 01          VALID_BOOT_AVAILABLE:                              db 0x01 ; PROC_01
0629+  7564 00                                                      db 0x00 ; with zero
0630+  7565 FF                                                      db 0xFF
0631+  7566 01          VALID_STAR_AVAILABLE:                               db 0x01
0632+  7567 01                                                      db 0x01
0633+  7568 FF                                                      db 0xFF
0634+  7569 01          VALID_KEY_AVAILABLE:                               db 0x01
0635+  756A 02                                                      db 0x02
0636+  756B FF                                                      db 0xFF
0637+  756C 01          VALID_GUN_AVAILABLE:                               db 0x01
0638+  756D 03                                                      db 0x03
0639+  756E FF                                                      db 0xFF
0640+  756F 01          VALID_BAR_AVAILABLE:                               db 0x01
0641+  7570 05                                                      db 0x05
0642+  7571 FF                                                      db 0xFF
0643+  7572 01          VALID_COIN_AVAILABLE:                               db 0x01
0644+  7573 06                                                      db 0x06
0645+  7574 FF                                                      db 0xFF
0646+  7575 01          VALID_MIRROR_IN_HANGAR:                               db 0x01 ; is item avail
0647+  7576 07                                                      db 0x07 ; OBJECT_A_MIRROR
0648+  7577 03                                                      db 0x03 ; is item in room
0649+  7578 10                                                      db 0x10 ; PLACE_LARGE_HANGER
0650+  7579 FF                                                      db 0xFF
0651+  757A 01          VALID_BROKEN_GLASS_AVAILABLE:                               db 0x01 ; is item avail
0652+  757B 08                                                      db 0x08 ; OBJECT_BROKEN_GLASS
0653+  757C FF                                                      db 0xFF
0654+  757D 01          VALID_GLOV_AVAILABLE:                               db 0x01
0655+  757E 09                                                      db 0x09
0656+  757F FF                                                      db 0xFF
0657+  7580 01          VALID_ROPE_AVAILABLE:                               db 0x01
0658+  7581 0A                                                      db 0x0A
0659+  7582 FF                                                      db 0xFF
0660+  7583 01          VALID_FLOO_AVAILABLE:                               db 0x01
0661+  7584 0B                                                      db 0x0B
0662+  7585 FF                                                      db 0xFF
0663+  7586 01          VALID_BROKEN_FLOO_AVAILABLE:                               db 0x01 ; is item avail
0664+  7587 0C                                                      db 0x0C ; OBJECT_A_BROKEN_FLOOR_BOARD
0665+  7588 FF                                                      db 0xFF
0666+  7589 01          VALID_STAL_AVAILABLE:                               db 0x01
0667+  758A 0D                                                      db 0x0D
0668+  758B FF                                                      db 0xFF
0669+  758C 01          VALID_ICE_AVAILABLE:                               db 0x01
0670+  758D 0E                                                      db 0x0E
0671+  758E FF                                                      db 0xFF
0672+  758F 01          VALID_FLIN_AVAILABLE:                               db 0x01
0673+  7590 18                                                      db 0x18
0674+  7591 FF                                                      db 0xFF
0675+  7592 01          VALID_STON_AVAILABLE:                               db 0x01 ; is item avail
0676+  7593 19                                                      db 0x19 ; OBJECT_SOME_STONES
0677+  7594 FF                                                      db 0xFF
0678+  7595 01          VALID_MIRROR_AVAILABLE:                               db 0x01
0679+  7596 07                                                      db 0x07
0680+  7597 FF                                                      db 0xFF
0681+  7598 00          VALID_IS_CAVE:                               db 0x00 ; is room == 2 
0682+  7599 02                                                      db 0x02 ; PLACE_DAMP_LIMESTONE_CAVE
0683+  759A FF                                                      db 0xFF
0684+  759B 00          VALID_USE_ICE:                               db 0x00 ; is room == 2 
0685+  759C 02                                                      db 0x02 ; PLACE_DAMP_LIMESTONE_CAVE
0686+  759D 01                                                      db 0x01 ; is item avail
0687+  759E 0E                                                      db 0x0E ; OBJECT_A_BLOCK_OF_ICE
0688+  759F FF                                                      db 0xFF
0689+  75A0 00          VALID_CUT_ROPE:                              db 0x00
0690+  75A1 03                                                      db 0x03
0691+  75A2 FF                                                      db 0xFF
0692+  75A3 00          VALID_USE_FLINT:                             db 0x00 ; is room == 3 
0693+  75A4 03                                                      db 0x03
0694+  75A5 01                                                      db 0x01 ; is item avail
0695+  75A6 18                                                      db 0x18 ; OBJECT_A_PIECE_OF_SHARP_FLINT
0696+  75A7 FF                                                      db 0xFF
0697+  75A8 00          VALID_IS_LAKE:                               db 0x00 ; is room == 4 
0698+  75A9 04                                                      db 0x04 ; PLACE_BESIDE_A_LAKE
0699+  75AA FF                                                      db 0xFF
0700+  75AB 00          VALID_IS_SHAD:                               db 0x00 ; is room == 6 
0701+  75AC 06                                                      db 0x06 ; PLACE_OLD_SHED
0702+  75AD FF                                                      db 0xFF
0703+  75AE 00          VALID_IS_LAKE_WITH_FLOOR:                               db 0x00 ; is room == 4
0704+  75AF 04                                                      db 0x04 ; PLACE_BESIDE_A_LAKE
0705+  75B0 01                                                      db 0x01 ; is item avail
0706+  75B1 0B                                                      db 0x0B ; OBJECT_A_FLOOR_BOARD
0707+  75B2 FF                                                      db 0xFF
0708+  75B3 00          VALID_IS_SHAD_WITH_FLOOR:                    db 0x00 ; is room == 6
0709+  75B4 06                                                      db 0x06 ; PLACE_OLD_SHED
0710+  75B5 01                                                      db 0x01 ; is item avail
0711+  75B6 0B                                                      db 0x0B ; OBJECT_A_FLOOR_BOARD
0712+  75B7 FF                                                      db 0xFF
0713+  75B8 00          VALID_IS_ICE_CAVERN:                         db 0x00 ; is room == 0x0B 
0714+  75B9 0B                                                      db 0x0B ; PLACE_ICE_CAVERN
0715+  75BA FF                                                      db 0xFF
0716+  75BB 00          VALID_IS_ICE_CAVERN_WITH_ICE_BLOCK:          db 0x00 ; is room == 0x0B 
0717+  75BC 0B                                                      db 0x0B ; PLACE_ICE_CAVERN
0718+  75BD 08                                                      db 0x08 ; is item in inventory of weared
0719+  75BE 0E                                                      db 0x0E ; OBJECT_A_BLOCK_OF_ICE
0720+  75BF FF                                                      db 0xFF
0721+  75C0 01          VALID_IS_MAN_AND_WEARED_GLOVES:              db 0x01 ; is item avail
0722+  75C1 10                                                      db 0x10 ; OBJECT_A_SMALL_GREEN_MAN_SLEEPING
0723+  75C2 01                                                      db 0x01 ; is item avail 
0724+  75C3 09                                                      db 0x09 ; OBJECT_A_PAIR_OF_SLIMY_GLOVES
0725+  75C4 04                                                      db 0x04 ; is weared
0726+  75C5 09                                                      db 0x09 ; OBJECT_A_PAIR_OF_SLIMY_GLOVES
0727+  75C6 FF                                                      db 0xFF
0728+  75C7 01          VALID_IS_MAN_AND_GLOVES:                     db 0x01 ; is item avail
0729+  75C8 10                                                      db 0x10 ; OBJECT_A_SMALL_GREEN_MAN_SLEEPING
0730+  75C9 01                                                      db 0x01 ; is item avail
0731+  75CA 09                                                      db 0x09 ; OBJECT_A_PAIR_OF_SLIMY_GLOVES
0732+  75CB FF                                                      db 0xFF
0733+  75CC 01          VALID_IS_MAN_ONLY:                           db 0x01 ; is item avail
0734+  75CD 10                                                      db 0x10 ; OBJECT_A_SMALL_GREEN_MAN_SLEEPING
0735+  75CE FF                                                      db 0xFF
0736+  75CF 01          VALID_IS_MAN_AVAILABLE:                      db 0x01 ; is item avail
0737+  75D0 11                                                      db 0x11 ; OBJECT_A_SLEEPING_GREEN_MAN
0738+  75D1 FF                                                      db 0xFF
0739+  75D2 01          VALID_IS_MIRR_WITH_MAN:                               db 0x01 ; is item avail
0740+  75D3 07                                                      db 0x07 ; OBJECT_A_MIRROR
0741+  75D4 03                                                      db 0x03 ; item in room, but not in inventory or weared
0742+  75D5 10                                                      db 0x10 ; OBJECT_A_SMALL_GREEN_MAN_SLEEPING
0743+  75D6 FF                                                      db 0xFF ; 
0744+  75D7 01          VALID_IS_MAN_AVAILABLE_TO_KILL:              db 0x01 ; is item avail
0745+  75D8 10                                                      db 0x10 ; OBJECT_A_SMALL_GREEN_MAN_SLEEPING
0746+  75D9 FF                                                      db 0xFF
0747+  75DA 01          VALID_IS_MAN_AND_GUN_AVAILABLE:              db 0x01 ; is item avail
0748+  75DB 10                                                      db 0x10 ; OBJECT_A_SMALL_GREEN_MAN_SLEEPING
0749+  75DC 01                                                      db 0x01 ; is item avail
0750+  75DD 03                                                      db 0x03 ; OBJECT_A_LASER_GUN
0751+  75DE FF                                                      db 0xFF
0752+  75DF 01          VALID_IS_GUN_AVAIL_MAN_POCKETED:             db 0x01 ; is item avail
0753+  75E0 11                                                      db 0x11 ; OBJECT_A_SLEEPING_GREEN_MAN
0754+  75E1 01                                                      db 0x01 ; is item avail
0755+  75E2 03                                                      db 0x03 ; OBJECT_A_LASER_GUN
0756+  75E3 08                                                      db 0x08 ; is object weared or in pocket
0757+  75E4 11                                                      db 0x11 ; OBJECT_A_SLEEPING_GREEN_MAN
0758+  75E5 FF                                                      db 0xFF
0759+  75E6 01          VALID_IS_SLEEPING_MAN_AND_GUN_AVAILABLE:                               db 0x01 ; is item avail
0760+  75E7 11                                                      db 0x11 ; OBJECT_A_SLEEPING_GREEN_MAN
0761+  75E8 01                                                      db 0x01 ; is item avail
0762+  75E9 03                                                      db 0x03 ; OBJECT_A_LASER_GUN
0763+  75EA FF                                                      db 0xFF
0764+  75EB 00          VALID_IS_COMPUTER_ROOM:                      db 0x00 ; is current room 0e
0765+  75EC 0E                                                      db 0x0E ; PLACE_COMPUTER_ROOM
0766+  75ED FF                                                      db 0xFF
0767+  75EE 00          VALID_IS_PASSAGE:                            db 0x00 ; is current room 0f
0768+  75EF 0F                                                      db 0x0F ; PLACE_PASSAGE
0769+  75F0 FF                                                      db 0xFF
0770+  75F1 00          VALID_IS_PASSAGE_AND_GUN_AND_7:              db 0x00 ; is current room 0f
0771+  75F2 0F                                                      db 0x0F ; PLACE_PASSAGE
0772+  75F3 07                                                      db 0x07 ; (IX+7) = 0
0773+  75F4 07                                                      db 0x07
0774+  75F5 01                                                      db 0x01 ; is item avail
0775+  75F6 03                                                      db 0x03 ; OBJECT_A_LASER_GUN
0776+  75F7 FF                                                      db 0xFF
0777+  75F8 05          VALID_IS_PASSAGE_AND_GUN_AND_7_AND_8:        db 0x05 ; (IX+7) !=0
0778+  75F9 07                                                      db 0x07
0779+  75FA 07                                                      db 0x07 ; (IX+8) ==0
0780+  75FB 08                                                      db 0x08
0781+  75FC 00                                                      db 0x00 ; is current room 0f
0782+  75FD 0F                                                      db 0x0F ; PLACE_PASSAGE
0783+  75FE 01                                                      db 0x01 ; is item avail
0784+  75FF 03                                                      db 0x03 ; OBJECT_A_LASER_GUN
0785+  7600 FF                                                      db 0xFF
0786+  7601 05          VALID_IS_PASSAGE_AND_GUN_AND_8:              db 0x05 ; (IX+8) !=0
0787+  7602 08                                                      db 0x08 ; 
0788+  7603 00                                                      db 0x00 ; is current room 0f 
0789+  7604 0F                                                      db 0x0F ; PLACE_PASSAGE
0790+  7605 01                                                      db 0x01 ; is item avail
0791+  7606 03                                                      db 0x03 ; OBJECT_A_LASER_GUN
0792+  7607 FF                                                      db 0xFF
0793+  7608 00          VALID_IS_PASSAGE_AND_MIRR_AND_8:             db 0x00 ; is current room 0f 
0794+  7609 0F                                                      db 0x0F ; PLACE_PASSAGE
0795+  760A 08                                                      db 0x08 ; is wear or in pocket
0796+  760B 07                                                      db 0x07 ; OBJECT_A_MIRROR
0797+  760C 05                                                      db 0x05 ; (IX+8) !=0
0798+  760D 08                                                      db 0x08
0799+  760E FF                                                      db 0xFF
0800+  760F 00          VALID_IS_PASSAGE_ONLY:                       db 0x00 ; is current room 0f 
0801+  7610 0F                                                      db 0x0F ; PLACE_PASSAGE
0802+  7611 FF                                                      db 0xFF
0803+  7612 00          VALID_IS_HANGER:                            db 0x00 ; is current room 10 
0804+  7613 10                                                      db 0x10 ; PLACE_LARGE_HANGER
0805+  7614 FF                                                      db 0xFF
0806+  7615 00          VALID_IS_HANGER_AND_KEY:                               db 0x00 ; is current room 10
0807+  7616 10                                                      db 0x10 ; PLACE_LARGE_HANGER
0808+  7617 01                                                      db 0x01 ; is item avail
0809+  7618 02                                                      db 0x02 ; OBJECT_A_KEY
0810+  7619 FF                                                      db 0xFF
0811+  761A 00          VALID_IS_HANGER_AND_GUN:                               db 0x00 ; is current room 10
0812+  761B 10                                                      db 0x10 ; PLACE_LARGE_HANGER
0813+  761C 01                                                      db 0x01 ; is item avail
0814+  761D 03                                                      db 0x03 ; OBJECT_A_LASER_GUN
0815+  761E FF                                                      db 0xFF
0816+  761F 00          VALID_IS_PRISON_CELL:                        db 0x00 ; is current room 13
0817+  7620 13                                                      db 0x13 ; PLACE_PRISON_CELL
0818+  7621 FF                                                      db 0xFF
0819+  7622 02          ACTION_GET_BOOT:                             db 0x02 ; cmd CMD_GET_ITEM
0820+  7623 00                                                      db 0x00 ; item 0 - OBJECT_A_PAIR_OF_BOOTS
0821+  7624 0D                                                      db 0x0D ; CMD_OK
0822+  7625 02          ACTION_GET_STAR:                               db 0x02
0823+  7626 01                                                      db 0x01
0824+  7627 0D                                                      db 0x0D
0825+  7628 02          ACTION_GET_KEY:                               db 0x02
0826+  7629 02                                                      db 0x02
0827+  762A 0D                                                      db 0x0D
0828+  762B 02          ACTION_GET_GUN:                               db 0x02
0829+  762C 03                                                      db 0x03
0830+  762D 0D                                                      db 0x0D
0831+  762E 02          ACTION_GET_BAR:                               db 0x02
0832+  762F 05                                                      db 0x05
0833+  7630 0D                                                      db 0x0D
0834+  7631 02          ACTION_GET_COIN:                               db 0x02
0835+  7632 06                                                      db 0x06
0836+  7633 0D                                                      db 0x0D
0837+  7634 02          ACTION_GET_MIRR:                             db 0x02 ; CMD_GET_ITEM
0838+  7635 07                                                      db 0x07 ; OBJECT_A_MIRROR
0839+  7636 0D                                                      db 0x0D
0840+  7637 02          ACTION_GET_BROKEN_GLASS_CLONE:                               db 0x02
0841+  7638 08                                                      db 0x08
0842+  7639 0D                                                      db 0x0D
0843+  763A 02          ACTION_GET_GLOV:                               db 0x02
0844+  763B 09                                                      db 0x09
0845+  763C 0D                                                      db 0x0D
0846+  763D 02          ACTION_GET_ROPE:                               db 0x02
0847+  763E 0A                                                      db 0x0A
0848+  763F 0D                                                      db 0x0D
0849+  7640 02          ACTION_GET_FLOO:                               db 0x02 ; CMD_GET_ITEM
0850+  7641 0B                                                      db 0x0B ; OBJECT_A_FLOOR_BOARD
0851+  7642 0D                                                      db 0x0D
0852+  7643 02          ACTION_GET_BROK:                               db 0x02
0853+  7644 0C                                                      db 0x0C
0854+  7645 0D                                                      db 0x0D
0855+  7646 02          ACTION_GET_STAL:                               db 0x02
0856+  7647 0D                                                      db 0x0D
0857+  7648 0D                                                      db 0x0D
0858+  7649 02          ACTION_GET_ICE:                               db 0x02
0859+  764A 0E                                                      db 0x0E
0860+  764B 0F                                                      db 0x0F
0861+  764C 02                                                      db 0x02
0862+  764D 09                                                      db 0x09
0863+  764E 0D                                                      db 0x0D
0864+  764F 02          ACTION_GET_FLIN:                               db 0x02
0865+  7650 18                                                      db 0x18
0866+  7651 0D                                                      db 0x0D
0867+  7652 02          ACTION_GET_STON:                               db 0x02
0868+  7653 19                                                      db 0x19
0869+  7654 0D                                                      db 0x0D
0870+  7655 00          ACTION_INVENTORY:                               db 0x00
0871+  7656 07                                                      db 0x07
0872+  7657 0E          ACTION_STOP:                               db 0x0E
0873+  7658 03          ACTION_PUT_BOOT:                               db 0x03
0874+  7659 00                                                      db 0x00
0875+  765A 0D                                                      db 0x0D
0876+  765B 03          ACTION_PUT_STAR:                               db 0x03
0877+  765C 01                                                      db 0x01
0878+  765D 0D                                                      db 0x0D
0879+  765E 03          ACTION_PUT_KEY:                               db 0x03
0880+  765F 02                                                      db 0x02
0881+  7660 0D                                                      db 0x0D
0882+  7661 03          ACTION_PUT_GUN:                               db 0x03
0883+  7662 03                                                      db 0x03
0884+  7663 0D                                                      db 0x0D
0885+  7664 03          ACTION_PUT_BAR:                               db 0x03
0886+  7665 05                                                      db 0x05
0887+  7666 0D                                                      db 0x0D
0888+  7667 03          ACTION_PUT_COIN:                               db 0x03
0889+  7668 06                                                      db 0x06
0890+  7669 0D                                                      db 0x0D
0891+  766A 03          ACTION_PUT_MIRR:                               db 0x03
0892+  766B 07                                                      db 0x07
0893+  766C 0D                                                      db 0x0D
0894+  766D 03          ACTION_PUT_BROKEN_GLASS:                               db 0x03
0895+  766E 08                                                      db 0x08
0896+  766F 0D                                                      db 0x0D
0897+  7670 03          ACTION_PUT_GLOV:                               db 0x03
0898+  7671 09                                                      db 0x09
0899+  7672 0D                                                      db 0x0D
0900+  7673 03          ACTION_PUT_ROPE:                               db 0x03
0901+  7674 0A                                                      db 0x0A
0902+  7675 0D                                                      db 0x0D
0903+  7676 03          ACTION_PUT_FLOO:                               db 0x03
0904+  7677 0B                                                      db 0x0B
0905+  7678 0D                                                      db 0x0D
0906+  7679 03          ACTION_PUT_BROKEN_FLOO:                      db 0x03 ; 
0907+  767A 0C                                                      db 0x0C
0908+  767B 0D                                                      db 0x0D
0909+  767C 03          ACTION_PUT_STAL:                               db 0x03
0910+  767D 0D                                                      db 0x0D
0911+  767E 0D                                                      db 0x0D
0912+  767F 03          ACTION_PUT_ICE:                               db 0x03
0913+  7680 0E                                                      db 0x0E
0914+  7681 0D                                                      db 0x0D
0915+  7682 03          ACTION_PUT_FLIN:                               db 0x03
0916+  7683 18                                                      db 0x18
0917+  7684 0D                                                      db 0x0D
0918+  7685 03          ACTION_PUT_STON:                               db 0x03
0919+  7686 19                                                      db 0x19
0920+  7687 0D                                                      db 0x0D
0921+  7688 05          ACTION_LOOK_DRAW:                               db 0x05
0922+  7689 00                                                      db 0x00
0923+  768A 07                                                      db 0x07
0924+  768B 05          ACTION_HIT_STAL:                               db 0x05
0925+  768C 01                                                      db 0x01
0926+  768D 07                                                      db 0x07
0927+  768E 10          ACTION_USE_ICE:                               db 0x10
0928+  768F 0D                                                      db 0x0D
0929+  7690 05                                                      db 0x05
0930+  7691 02                                                      db 0x02
0931+  7692 07                                                      db 0x07
0932+  7693 05          ACTION_CUT_ROPE:                               db 0x05
0933+  7694 03                                                      db 0x03
0934+  7695 07                                                      db 0x07
0935+  7696 10          ACTION_USE_FLINT:                               db 0x10
0936+  7697 0A                                                      db 0x0A
0937+  7698 05                                                      db 0x05
0938+  7699 02                                                      db 0x02
0939+  769A 07                                                      db 0x07
0940+  769B 04          ACTIO_WEAR_BOOT:                               db 0x04
0941+  769C 00                                                      db 0x00
0942+  769D 0D                                                      db 0x0D
0943+  769E 01          ACTION_REMOVE_BOOT:                               db 0x01
0944+  769F 00                                                      db 0x00
0945+  76A0 0D                                                      db 0x0D
0946+  76A1 05          ACTION_DEATH:                                db 0x05 ; CMD_PRINT_ANSWER
0947+  76A2 03                                                      db 0x03 ; HOW
0948+  76A3 07                                                      db 0x07 ; CMD_NOTHING
0949+  76A4 08          ACTION_USE_FLOO_IN_LAKE:                     db 0x08 ; 
0950+  76A5 06                                                      db 0x06
0951+  76A6 06                                                      db 0x06
0952+  76A7 08          ACTION_USE_FLOO_IN_SHED:                     db 0x08
0953+  76A8 04                                                      db 0x04
0954+  76A9 11                                                      db 0x11
0955+  76AA 0B                                                      db 0x0B
0956+  76AB 10                                                      db 0x10
0957+  76AC 0C                                                      db 0x0C
0958+  76AD 06                                                      db 0x06
0959+  76AE 05          ACTION_DIE_BY_FALL:                          db 0x05 ; CMD_PRINT_ANSWER
0960+  76AF 04                                                      db 0x04 ; ITS_TOO_WIDE.I_FELL_AND_BROKE
0961+  76B0 0C                                                      db 0x0C ; CMD_END
0962+  76B1 08          ACTION_USE_ICE_IN_CAVERN:                    db 0x08
0963+  76B2 0C                                                      db 0x0C
0964+  76B3 03                                                      db 0x03
0965+  76B4 0E                                                      db 0x0E
0966+  76B5 0B                                                      db 0x0B
0967+  76B6 0E                                                      db 0x0E
0968+  76B7 0F                                                      db 0x0F
0969+  76B8 02                                                      db 0x02
0970+  76B9 07                                                      db 0x07
0971+  76BA 06                                                      db 0x06
0972+  76BB 02          ACTION_GET_SLIME_MEN:                        db 0x02 ; CMD_GET_ITEM
0973+  76BC 10                                                      db 0x10 ; OBJECT_A_SMALL_GREEN_MAN_SLEEPING
0974+  76BD 0B                                                      db 0x0B ; CMD_SWAP_ITEM with next item (OBJECT_A_SLEEPING_GREEN_MAN)
0975+  76BE 10                                                      db 0x10 ; OBJECT_A_SMALL_GREEN_MAN_SLEEPING
0976+  76BF 05                                                      db 0x05 ; CMD_PRINT_ANSWER
0977+  76C0 05                                                      db 0x05 ; UGH!_HE_IS_ALL_SLIMY
0978+  76C1 0F                                                      db 0x0F ; CMD_VAR_SAVE - three params (IX+5) = 0x0A
0979+  76C2 05                                                      db 0x05 ; first param
0980+  76C3 0A                                                      db 0x0A ; second param
0981+  76C4 0A                                                      db 0x0A ; CMD_VAR_CLEAR (IX+6) = 0
0982+  76C5 06                                                      db 0x06 ; 6
0983+  76C6 07                                                      db 0x07 ; CMD_NOTHING
0984+  76C7 02          ACTION_GET_MEN:                              db 0x02 ; CMD_GET_ITEM
0985+  76C8 10                                                      db 0x10 ; OBJECT_A_SMALL_GREEN_MAN_SLEEPING
0986+  76C9 0B                                                      db 0x0B ; CMD_SWAP_ITEM with next item (OBJECT_A_SLEEPING_GREEN_MAN)
0987+  76CA 10                                                      db 0x10 ; OBJECT_A_SMALL_GREEN_MAN_SLEEPING
0988+  76CB 0D                                                      db 0x0D ; CMD_OK
0989+  76CC 03          ACTION_PUT_MAN:                              db 0x03 ; CMD_DROP_ITEM
0990+  76CD 11                                                      db 0x11 ; OBJECT_A_SLEEPING_GREEN_MAN
0991+  76CE 0D                                                      db 0x0D ; CMD_OK
0992+  76CF 02          ACTION_GET_MIRR_WITH_MAN:                    db 0x02 ; CMD_GET_ITEM
0993+  76D0 07                                                      db 0x07 ; OBJECT_A_MIRROR
0994+  76D1 0D                                                      db 0x0D ; CMD_OK
0995+  76D2 02          ACTION_GET_BROKEN_GLASS:                     db 0x02 ; CMD_GET_ITEM
0996+  76D3 08                                                      db 0x08 ; OBJECT_BROKEN_GLASS
0997+  76D4 0D                                                      db 0x0D ; CMD_OK
0998+  76D5 03          ACTION_DROP_MIRR:                               db 0x03 ; CMD_DROP_ITEM
0999+  76D6 07                                                      db 0x07 ; OBJECT_A_MIRROR
1000+  76D7 0D                                                      db 0x0D ; CMD_OK
1001+  76D8 03          ACTION_DROP_BROKEN_GLASS:                               db 0x03 ; CMD_DROP_ITEM
1002+  76D9 08                                                      db 0x08 ; OBJECT_BROKEN_GLASS
1003+  76DA 0D                                                      db 0x0D ; CMD_OK
1004+  76DB 05          ACTION_ASK_HOW:                               db 0x05 ; CMD_PRINT_ANSWER
1005+  76DC 03                                                      db 0x03 ; HOW
1006+  76DD 07                                                      db 0x07 ; CMD_NOTHING
1007+  76DE 11          ACTION_KILL_MAN_MIRROR_BROKEN:                               db 0x11 ; CMD_REMOVE_ITEM
1008+  76DF 10                                                      db 0x10 ; OBJECT_A_SMALL_GREEN_MAN_SLEEPING
1009+  76E0 0B                                                      db 0x0B ; CMD_SWAP_ITEM
1010+  76E1 07                                                      db 0x07 ; OBJECT_A_MIRROR
1011+  76E2 05                                                      db 0x05 ; CMD_PRINT_ANSWER
1012+  76E3 06                                                      db 0x06 ; HE_VANISHED_IN_A_PUFF_OF_SMOKE
1013+  76E4 05                                                      db 0x05 ; CMD_PRINT_ANSWER
1014+  76E5 07                                                      db 0x07 ; YOU_ALSO_BROKE_THE_MIRROR
1015+  76E6 07                                                      db 0x07 ; CMD_NOTHING
1016+  76E7 05          ACTION_ASK_WHAT_AT:                          db 0x05 ; CMD_PRINT_ANSWER
1017+  76E8 26                                                      db 0x26 ; s_WHAT_AT?_ram_7e94
1018+  76E9 07                                                      db 0x07 ; CMD_NOTHING
1019+  76EA 11          ACTION_JUST_KILL_MAN:                               db 0x11 ; CMD_REMOVE_ITEM
1020+  76EB 11                                                      db 0x11 ; OBJECT_A_SLEEPING_GREEN_MAN
1021+  76EC 05                                                      db 0x05 ; CMD_PRINT_ANSWER
1022+  76ED 06                                                      db 0x06 ; HE_VANISHED_IN_A_PUFF_OF_SMOKE
1023+  76EE 07                                                      db 0x07 ; CMD_NOTHING 
1024+  76EF 05          ACTION_TYPE_HELP:                            db 0x05 ; CMD_PRINT_ANSWER
1025+  76F0 08                                                      db 0x08 ; COMPUTER_SAYS
1026+  76F1 07                                                      db 0x07
1027+  76F2 09          ACTION_SHIELD_WEAKENED_0:                    db 0x09 ; (IX+7) = ff
1028+  76F3 07                                                      db 0x07 
1029+  76F4 05                                                      db 0x05 ; CMD_PRINT_ANSWER
1030+  76F5 09                                                      db 0x09 ; IT_HAS_WEAKENED_IT
1031+  76F6 07                                                      db 0x07 ; CMD_NOTHING 
1032+  76F7 09          ACTION_SHIELD_WEAKENED_1:                    db 0x09 ; (IX+8) = ff
1033+  76F8 08                                                      db 0x08
1034+  76F9 05                                                      db 0x05 ; CMD_PRINT_ANSWER
1035+  76FA 09                                                      db 0x09 ; IT_HAS_WEAKENED_IT
1036+  76FB 07                                                      db 0x07 ; CMD_NOTHING
1037+  76FC 05          ACTION_NO_EFFECT:                            db 0x05 ; CMD_PRINT_ANSWER
1038+  76FD 0A                                                      db 0x0A ; IT_HAD_NO_EFFECT
1039+  76FE 07                                                      db 0x07 ; CMD_NOTHING
1040+  76FF 08          ACTION_ENTER_HANGAR:                         db 0x08 ; CMD_SET_CURRENT_ROOM
1041+  7700 10                                                      db 0x10 ; PLACE_LARGE_HANGER
1042+  7701 0F                                                      db 0x0F ; CMD_VAR_SAVE (IX+2) = 9
1043+  7702 02                                                      db 0x02 ; IX+2
1044+  7703 09                                                      db 0x09
1045+  7704 06                                                      db 0x06 ; CMD_LOOK_AROUND
1046+  7705 05          ACTION_ENTER_PRISON:                               db 0x05 ; CMD_PRINT_ANSWER
1047+  7706 0B                                                      db 0x0B ; I_FELL_AND_KNOCKED_MYSELF_OUT
1048+  7707 08                                                      db 0x08 ; CMD_SET_CURRENT_ROOM
1049+  7708 13                                                      db 0x13 ; PLACE_PRISON_CELL
1050+  7709 06                                                      db 0x06 ; CMD_LOOK_AROUND
1051+  770A 08          ACTION_ENTER_LIFT_CONTROL_ROOM:                               db 0x08 ; CMD_SET_CURRENT_ROOM
1052+  770B 12                                                      db 0x12 ; PLACE_LIFT_CONTROL_ROOM
1053+  770C 06                                                      db 0x06 ; CMD_LOOK_AROUND
1054+  770D 11          ACTION_KILL_SECU:                               db 0x11 ; CMD_REMOVE_ITEM
1055+  770E 17                                                      db 0x17 ; OBJECT_A_SLEEPING_SECURITY_MAN
1056+  770F 0D                                                      db 0x0D
1057+  7710 05          ACTION_LOOK_UP:                               db 0x05
1058+  7711 0C                                                      db 0x0C
1059+  7712 07                                                      db 0x07
1060+  7713 0B          ACTION_HIT_BAR:                               db 0x0B
1061+  7714 14                                                      db 0x14
1062+  7715 10                                                      db 0x10
1063+  7716 05                                                      db 0x05
1064+  7717 06                                                      db 0x06
1065+  7718 00          VALID_IS_PRISON_CELL_AND_HOLE:               db 0x00 ; is current room 13
1066+  7719 13                                                      db 0x13 ; PLACE_PRISON_CELL
1067+  771A 01                                                      db 0x01 ; is available
1068+  771B 15                                                      db 0x15 ; OBJECT_A_HOLE_IN_THE_WALL
1069+  771C FF                                                      db 0xFF
1070+  771D 00          VALID_IS_PRISON_CELL_FOR_BRIBE:              db 0x00 ; is current room 13
1071+  771E 13                                                      db 0x13 ; PLACE_PRISON_CELL
1072+  771F FF                                                      db 0xFF
1073+  7720 00          VALID_IS_PRISON_AND_COIN:                    db 0x00 ; is current room 13
1074+  7721 13                                                      db 0x13 ; PLACE_PRISON_CELL
1075+  7722 01                                                      db 0x01 ; is available
1076+  7723 06                                                      db 0x06 ; OBJECT_A_GOLD_COIN
1077+  7724 FF                                                      db 0xFF
1078+  7725 00          VALID_IS_PRISON_AND_OPEN_DOOR:               db 0x00 ; is current room 13
1079+  7726 13                                                      db 0x13 ; PLACE_PRISON_CELL
1080+  7727 01                                                      db 0x01 ; is available
1081+  7728 13                                                      db 0x13 ; OBJECT_AN_OPEN_DOOR
1082+  7729 FF                                                      db 0xFF
1083+  772A 00          VALID_IS_LAKE_AND_COIN:                      db 0x00 ; is current room 4
1084+  772B 04                                                      db 0x04 ; PLACE_BESIDE_A_LAKE
1085+  772C 03                                                      db 0x03 ; is item in room
1086+  772D 06                                                      db 0x06 ; OBJECT_A_GOLD_COIN
1087+  772E FF                                                      db 0xFF
1088+  772F 00          VALID_IS_LAKE_AND_BOOT_WEARED:               db 0x00 ; is current room 4
1089+  7730 04                                                      db 0x04 ; PLACE_BESIDE_A_LAKE
1090+  7731 03                                                      db 0x03 ; is item in room
1091+  7732 06                                                      db 0x06 ; OBJECT_A_GOLD_COIN
1092+  7733 04                                                      db 0x04 ; is weared
1093+  7734 00                                                      db 0x00 ; OBJECT_A_PAIR_OF_BOOTS
1094+  7735 01                                                      db 0x01 ; is available 
1095+  7736 00                                                      db 0x00 ; OBJECT_A_PAIR_OF_BOOTS
1096+  7737 FF                                                      db 0xFF
1097+  7738 00          VALID_IS_LAKE_AND_BOOT_NOT_WEARED:           db 0x00 ; is current room 4
1098+  7739 04                                                      db 0x04 ; PLACE_BESIDE_A_LAKE
1099+  773A 03                                                      db 0x03 ; is item in room
1100+  773B 06                                                      db 0x06 ; OBJECT_A_GOLD_COIN
1101+  773C 01                                                      db 0x01 ; is available 
1102+  773D 00                                                      db 0x00 ; OBJECT_A_PAIR_OF_BOOTS
1103+  773E FF                                                      db 0xFF
1104+  773F 00          VALID_IS_WIND_TUNNEL:                        db 0x00 ; is current room 0x0D
1105+  7740 0D                                                      db 0x0D ; PLACE_WIND_TUNNEL
1106+  7741 FF                                                      db 0xFF
1107+  7742 00          VALID_IS_LIFT_CONTROL_AND_9_A:               db 0x00 ; is current room 0x12
1108+  7743 12                                                      db 0x12 ; PLACE_LIFT_CONTROL_ROOM
1109+  7744 07                                                      db 0x07 ; (IX+9)==0
1110+  7745 09                                                      db 0x09 ; 
1111+  7746 07                                                      db 0x07 ; (IX+0x0A)==0
1112+  7747 0A                                                      db 0x0A
1113+  7748 FF                                                      db 0xFF
1114+  7749 00          VALID_IS_LIFT_CONTROL_AND_A:                 db 0x00 ; is current room 0x12
1115+  774A 12                                                      db 0x12 ; PLACE_LIFT_CONTROL_ROOM
1116+  774B 07                                                      db 0x07 ; (IX+0x0A)==0
1117+  774C 0A                                                      db 0x0A
1118+  774D FF                                                      db 0xFF
1119+  774E 00          VALID_IS_LIFT_CONTROL_AND_A_9_1:             db 0x00 ; is current room 0x12
1120+  774F 12                                                      db 0x12 ; PLACE_LIFT_CONTROL_ROOM
1121+  7750 06                                                      db 0x06 ; (IX+9)==1 
1122+  7751 09                                                      db 0x09 ; 
1123+  7752 01                                                      db 0x01 ; 
1124+  7753 07                                                      db 0x07 ; (IX+0x0A)==0
1125+  7754 0A                                                      db 0x0A ;
1126+  7755 FF                                                      db 0xFF
1127+  7756 00          VALID_IS_LIFT_CONTROL_AND_A_9_2:             db 0x00 ; is current room 0x12
1128+  7757 12                                                      db 0x12 ; PLACE_LIFT_CONTROL_ROOM
1129+  7758 06                                                      db 0x06 ; (IX+9)==2 
1130+  7759 09                                                      db 0x09
1131+  775A 02                                                      db 0x02
1132+  775B 07                                                      db 0x07 ; (IX+0x0A)==0
1133+  775C 0A                                                      db 0x0A
1134+  775D FF                                                      db 0xFF
1135+  775E 00          VALID_IS_LIFT_CONTROL_AND_A_FIX:             db 0x00 ; is current room 0x12
1136+  775F 12                                                      db 0x12 ; PLACE_LIFT_CONTROL_ROOM
1137+  7760 05                                                      db 0x05 ; (IX+0x0A)==0
1138+  7761 0A                                                      db 0x0A
1139+  7762 FF                                                      db 0xFF
1140+  7763 00          VALID_IS_LIFT_CONTROL_AND_A_BAR:                               db 0x00 ; is current room 0x12
1141+  7764 12                                                      db 0x12 ; PLACE_LIFT_CONTROL_ROOM
1142+  7765 01                                                      db 0x01 ; is available 
1143+  7766 05                                                      db 0x05 ; OBJECT_A_METAL_BAR
1144+  7767 05                                                      db 0x05 ; (IX+0x0A)==0
1145+  7768 0A                                                      db 0x0A
1146+  7769 FF                                                      db 0xFF
1147+  776A 00          VALID_IS_ICE_CAVERN_LOOK:                    db 0x00 ; is current room 0x12
1148+  776B 0B                                                      db 0x0B ; PLACE_ICE_CAVERN
1149+  776C FF                                                      db 0xFF
1150+  776D 00          VALID_IS_LIFT_FOR_HELP:                               db 0x00 ; is current room 0x11
1151+  776E 11                                                      db 0x11 ; PLACE_TALL_LIFT
1152+  776F FF                                                      db 0xFF
1153+  7770 00          VALID_IS_PASSAGE_FOR_HELP:                               db 0x00 ; is current room 0x0f
1154+  7771 0F                                                      db 0x0F ; PLACE_PASSAGE
1155+  7772 FF                                                      db 0xFF
1156+  7773 00          VALID_IS_COMP_ROOM_FOR_HELP:                               db 0x00 ; is current room 0x0e
1157+  7774 0E                                                      db 0x0E ; PLACE_COMPUTER_ROOM
1158+  7775 FF                                                      db 0xFF
1159+  7776 00          VALID_IS_MAZE1_FOR_HELP:                               db 0x00 ; is current room 0x07
1160+  7777 07                                                      db 0x07 ; PLACE_MAZE
1161+  7778 FF                                                      db 0xFF
1162+  7779 00          VALID_IS_MAZE2_FOR_HELP:                               db 0x00 ; is current room 0x08
1163+  777A 08                                                      db 0x08 ; PLACE_MAZE
1164+  777B FF                                                      db 0xFF
1165+  777C 00          VALID_IS_MAZE3_FOR_HELP:                               db 0x00 ; is current room 0x09
1166+  777D 09                                                      db 0x09 ; PLACE_MAZE
1167+  777E FF                                                      db 0xFF
1168+  777F 00          VALID_IS_MAZE4_FOR_HELP:                     db 0x00 ; is current room 0x0A
1169+  7780 0A                                                      db 0x0A ; PLACE_MAZE 
1170+  7781 FF                                                      db 0xFF
1171+  7782 00          VALID_IS_SPACESHIP_AND_C:                               db 0x00 ; is current room 0x14
1172+  7783 14                                                      db 0x14 ; PLACE_SPACE_SHIP
1173+  7784 05                                                      db 0x05 ; (IX+0x0C)==0
1174+  7785 0C                                                      db 0x0C
1175+  7786 FF                                                      db 0xFF
1176+  7787 05          VALID_IS_QUIET_CAVERN_AND_B:                               db 0x05 ; (IX+0x0B)==0
1177+  7788 0B                                                      db 0x0B
1178+  7789 00                                                      db 0x00 ; is current room 0x0c
1179+  778A 0C                                                      db 0x0C ; PLACE_QUIET_CAVERN
1180+  778B FF                                                      db 0xFF
1181+  778C 00          VALID_IS_TUNNEL_FOR_WEST:                               db 0x00 ; is current room 0x14
1182+  778D 0D                                                      db 0x0D ; PLACE_WIND_TUNNEL
1183+  778E FF                                                      db 0xFF
1184+  778F 00          VALID_IS_EDGE_OF_PIT:                               db 0x00 ; is current room 0x01
1185+  7790 01                                                      db 0x01 ; PLACE_EDGE_OF_A_DEEP_PIT
1186+  7791 FF                                                      db 0xFF
1187+  7792 00          VALID_IS_PIT_AND_ROPE:                               db 0x00 ; is current room 0x01
1188+  7793 01                                                      db 0x01 ; PLACE_EDGE_OF_A_DEEP_PIT
1189+  7794 08                                                      db 0x08 ; is item here or wear
1190+  7795 0A                                                      db 0x0A ; OBJECT_A_ROPE
1191+  7796 FF                                                      db 0xFF
1192+  7797 00          VALID_IS_CAVERN_AND_B:                               db 0x00 ; is current room 0x0C
1193+  7798 0C                                                      db 0x0C ; PLACE_QUIET_CAVERN
1194+  7799 05                                                      db 0x05 ; (IX+0x0B)==0
1195+  779A 0B                                                      db 0x0B
1196+  779B FF                                                      db 0xFF
1197+  779C 01          VALID_IS_SHIP_AVAILABLE:                               db 0x01 ; is item avail
1198+  779D 16                                                      db 0x16 ; OBJECT_A_SMALL_BUT_POWERFULL_SPACE_SHIP
1199+  779E FF                                                      db 0xFF
1200+  779F 00          VALID_IS_SHIP_AND_STARTER:                               db 0x00 ; is current room 0x14
1201+  77A0 14                                                      db 0x14 ; PLACE_SPACE_SHIP
1202+  77A1 01                                                      db 0x01 ; is item avail
1203+  77A2 01                                                      db 0x01 ; OBJECT_A_STARTER_MOTOR
1204+  77A3 FF                                                      db 0xFF
1205+  77A4 00          VALID_IS_SPACE_SHIP_AND_C:                               db 0x00 ; is current room 0x14 
1206+  77A5 14                                                      db 0x14 ; PLACE_SPACE_SHIP
1207+  77A6 05                                                      db 0x05 ; (IX+0x0C)==0
1208+  77A7 0C                                                      db 0x0C
1209+  77A8 FF                                                      db 0xFF
1210+  77A9 00          VALID_IS_SPACE_SHIP_AND_C_AND_9_3:                               db 0x00 ; is current room 0x14 
1211+  77AA 14                                                      db 0x14 ; LACE_SPACE_SHIP 
1212+  77AB 05                                                      db 0x05 ; (IX+0x0C)==0
1213+  77AC 0C                                                      db 0x0C
1214+  77AD 06                                                      db 0x06 ; (IX+9)==3
1215+  77AE 09                                                      db 0x09
1216+  77AF 03                                                      db 0x03
1217+  77B0 FF                                                      db 0xFF
1218+  77B1 00          VALID_IS_SPACE_SHIP_AND_C_AND_9_3_BOOT:                               db 0x00 ; is current room 0x14 
1219+  77B2 14                                                      db 0x14 ; LACE_SPACE_SHIP 
1220+  77B3 05                                                      db 0x05 ; (IX+0x0C)==0
1221+  77B4 0C                                                      db 0x0C
1222+  77B5 04                                                      db 0x04 ; is item weared
1223+  77B6 00                                                      db 0x00 ; OBJECT_A_PAIR_OF_BOOTS
1224+  77B7 06                                                      db 0x06 ;  (IX+9)==3
1225+  77B8 09                                                      db 0x09
1226+  77B9 03                                                      db 0x03
1227+  77BA FF                                                      db 0xFF
1228+  77BB 08          ACTION_UP_IN_PRISON:                               db 0x08
1229+  77BC 0C                                                      db 0x0C
1230+  77BD 0B                                                      db 0x0B
1231+  77BE 14                                                      db 0x14
1232+  77BF 06                                                      db 0x06
1233+  77C0 05          ACTION_BRIB_SECU:                               db 0x05
1234+  77C1 0D                                                      db 0x0D
1235+  77C2 07                                                      db 0x07
1236+  77C3 0B          ACTION_USE_COIN:                               db 0x0B
1237+  77C4 12                                                      db 0x12
1238+  77C5 11                                                      db 0x11
1239+  77C6 06                                                      db 0x06
1240+  77C7 06                                                      db 0x06
1241+  77C8 08          ACTION_DOOR:                               db 0x08
1242+  77C9 0C                                                      db 0x0C
1243+  77CA 0B                                                      db 0x0B
1244+  77CB 12                                                      db 0x12
1245+  77CC 06                                                      db 0x06
1246+  77CD 05          ACTION_LOOK_WATE:                               db 0x05
1247+  77CE 0E                                                      db 0x0E
1248+  77CF 07                                                      db 0x07
1249+  77D0 05          ACTION_CANT_REACH:                               db 0x05 ; CMD_PRINT_ANSWER
1250+  77D1 01                                                      db 0x01 ; HOW_I_CANT_REACH
1251+  77D2 07                                                      db 0x07
1252+  77D3 05          ACTION_WATER_WITHOUT_WEARED_BOOT:            db 0x05
1253+  77D4 0F                                                      db 0x0F
1254+  77D5 07                                                      db 0x07
1255+  77D6 10          ACTION_WATER_WITH_WEARED_BOOT:               db 0x10
1256+  77D7 06                                                      db 0x06
1257+  77D8 02                                                      db 0x02
1258+  77D9 06                                                      db 0x06
1259+  77DA 0D                                                      db 0x0D
1260+  77DB 05          ACTION_WATER_TOO_COLD:                       db 0x05 ; CMD_PRINT_ANSWER
1261+  77DC 0F                                                      db 0x0F ; BRRR.THE_WATERS_TOO_COLD
1262+  77DD 07                                                      db 0x07
1263+  77DE 08          ACTION_NAV_TO_COMP_ROOM:                     db 0x08 ; CMD_SET_CURRENT_ROOM
1264+  77DF 0E                                                      db 0x0E ; PLACE_COMPUTER_ROOM
1265+  77E0 06                                                      db 0x06 ; CMD_LOOK_AROUND
1266+  77E1 0F          ACTION_PUSH_3_FIRST:                         db 0x0F ; CMD_VAR_SAVE (IX+9)=1
1267+  77E2 09                                                      db 0x09 ; 
1268+  77E3 01                                                      db 0x01
1269+  77E4 0D                                                      db 0x0D
1270+  77E5 05          ACTION_FUSE_BLOWN:                           db 0x05 ; CMD_PRINT_ANSWER
1271+  77E6 10                                                      db 0x10 ; THE_FUSE_HAS_JUST_BLOWN
1272+  77E7 0A                                                      db 0x0A ; CMD_VAR_CLEAR (IX+9) = 0
1273+  77E8 09                                                      db 0x09
1274+  77E9 09                                                      db 0x09 ; CMD_VAR_TO_FF (IX+A) = ff
1275+  77EA 0A                                                      db 0x0A
1276+  77EB 07                                                      db 0x07
1277+  77EC 0F          ACTION_PUSH_2_FIRST:                         db 0x0F ; CMD_VAR_SAVE (IX+9)=2
1278+  77ED 09                                                      db 0x09 ; 
1279+  77EE 02                                                      db 0x02
1280+  77EF 0D                                                      db 0x0D
1281+  77F0 05          ACTION_LIFT_ACTIVATE:                        db 0x05 ; CMD_PRINT_ANSWER
1282+  77F1 11                                                      db 0x11 ; THE_LIFT_HAS_BEEN_ACTIVATED
1283+  77F2 0F                                                      db 0x0F ; CMD_VAR_SAVE (IX+9) = 3
1284+  77F3 09                                                      db 0x09
1285+  77F4 03                                                      db 0x03
1286+  77F5 07                                                      db 0x07 ; CMD_NOTHING
1287+  77F6 05          ACTION_SHOW_WHAT_WITH:                       db 0x05 ; CMD_PRINT_ANSWER
1288+  77F7 0D                                                      db 0x0D ; WHAT_WITH
1289+  77F8 07                                                      db 0x07
1290+  77F9 0A          ACTION_USE_BAR:                              db 0x0A ; CMD_VAR_CLEAR (IX+0x0A) = 0
1291+  77FA 0A                                                      db 0x0A ; 
1292+  77FB 11                                                      db 0x11 ; CMD_REMOVE_ITEM
1293+  77FC 05                                                      db 0x05 ; OBJECT_A_METAL_BAR
1294+  77FD 0D                                                      db 0x0D
1295+  77FE 05          ACTION_LOOK_IN_CAVERN:                               db 0x05 ; CMD_PRINT_ANSWER
1296+  77FF 18                                                      db 0x18 ; I_CAN_SEE_A_STEEP_SLOPE
1297+  7800 07                                                      db 0x07
1298+  7801 05          ACTION_HELP_ABOUT_KEEP_OFF:                               db 0x05 ; CMD_PRINT_ANSWER
1299+  7802 13                                                      db 0x13 ; KEEP_OFF_THE_MIDDLE_MEN
1300+  7803 07                                                      db 0x07
1301+  7804 05          ACTION_HELP_ABOUT_VANITY_WALTZ:                               db 0x05 ; CMD_PRINT_ANSWER
1302+  7805 14                                                      db 0x14 ; VANITY_WALTZ
1303+  7806 07                                                      db 0x07
1304+  7807 05          ACTION_HELP_TRY_HELP:                               db 0x05 ; CMD_PRINT_ANSWER
1305+  7808 15                                                      db 0x15 ; TRY_HELP
1306+  7809 07                                                      db 0x07
1307+  780A 05          ACTION_HELP_ABOUT_COMPASS:                               db 0x05 ; CMD_PRINT_ANSWER
1308+  780B 16                                                      db 0x16 ; POINTS_OF_COMPASS
1309+  780C 07                                                      db 0x07
1310+  780D 05          ACTION_MSG_I_SEE_ROPE:                               db 0x05 ; CMD_PRINT_ANSWER
1311+  780E 1A                                                      db 0x1A ; I_CAN_SEE_A_ROPE_HANGING_DOWN
1312+  780F 07                                                      db 0x07
1313+  7810 08          ACTION_NAV_CAVERN_AND_2_SET:                               db 0x08 ; CMD_SET_CURRENT_ROOM
1314+  7811 0C                                                      db 0x0C ; PLACE_QUIET_CAVERN
1315+  7812 0F                                                      db 0x0F ; CMD_VAR_SAVE
1316+  7813 02                                                      db 0x02 ; (IX+2)=7
1317+  7814 07                                                      db 0x07
1318+  7815 06                                                      db 0x06
1319+  7816 04          ACTION_WEAR_GLOV:                               db 0x04 ; CMD_WEAR_ITEM
1320+  7817 09                                                      db 0x09
1321+  7818 0D                                                      db 0x0D
1322+  7819 01          ACTION_REMO_GLOV:                               db 0x01 ; CMD_UNWEAR_ITEM
1323+  781A 09                                                      db 0x09
1324+  781B 0D                                                      db 0x0D
1325+  781C 06          ACTION_REDESCRIBE:                               db 0x06
1326+  781D 05          ACTION_ASK_HOW_DOWN:                               db 0x05 ; CMD_PRINT_ANSWER
1327+  781E 03                                                      db 0x03 ; HOW
1328+  781F 07                                                      db 0x07
1329+  7820 09          ACTION_USE_ROPE:                               db 0x09
1330+  7821 0B                                                      db 0x0B
1331+  7822 03                                                      db 0x03
1332+  7823 0A                                                      db 0x0A
1333+  7824 08                                                      db 0x08
1334+  7825 0C                                                      db 0x0C
1335+  7826 06                                                      db 0x06
1336+  7827 05          ACTION_SHOW_ITS_TOO_DEEP:                               db 0x05 ; CMD_PRINT_ANSWER
1337+  7828 1B                                                      db 0x1B ; I_AM_NOT_THAT_DAFT
1338+  7829 07                                                      db 0x07 ; 
1339+  782A 08          ACTION_NAV_TO_PIT:                               db 0x08 ; CMD_SET_CURRENT_ROOM
1340+  782B 01                                                      db 0x01 ; PLACE_EDGE_OF_A_DEEP_PIT
1341+  782C 06                                                      db 0x06 ; 
1342+  782D 08          ACTION_NAV_TO_SHIP:                               db 0x08 ; CMD_SET_CURRENT_ROOM
1343+  782E 14                                                      db 0x14 ; PLACE_SPACE_SHIP
1344+  782F 06                                                      db 0x06
1345+  7830 05          ACTION_SHIP_BLOW_UP:                               db 0x05 ; CMD_PRINT_ANSWER
1346+  7831 1C                                                      db 0x1C ; THE_SPACE_SHIP_BLEW_UP
1347+  7832 0C                                                      db 0x0C ; CMD_END
1348+  7833 09          ACTION_SHIP_NAV_TO_LIFT:                               db 0x09 ; CMD_VAR_TO_FF (IX+0x0C)=ff
1349+  7834 0C                                                      db 0x0C 
1350+  7835 05                                                      db 0x05 ; CMD_PRINT_ANSWER
1351+  7836 1D                                                      db 0x1D ; THE_SHIP_HAS_FLOWN
1352+  7837 07                                                      db 0x07
1353+  7838 05          ACTION_KILL_BY_GUARD_ALARMED:                               db 0x05 ; CMD_PRINT_ANSWER
1354+  7839 19                                                      db 0x19 ; AN_ALARM_SOUNDS
1355+  783A 0C                                                      db 0x0C ; CMD_END
1356+  783B 05          ACTION_GAME_WIN:                               db 0x05 ; CMD_PRINT_ANSWER
1357+  783C 1E                                                      db 0x1E ; THE_LIFT_HAS_TAKEN_ME_UP
1358+  783D 0E                                                      db 0x0E ; CMD_SAVE
1359+  783E 05          ACTION_DEATH_BY_ELECTRICITY:                               db 0x05 ; CMD_PRINT_ANSWER 
1360+  783F 1F                                                      db 0x1F ; THE_LIFT_HAS_BECOME_ELECTRIFIED
1361+  7840 05                                                      db 0x05 ; CMD_PRINT_ANSWER
1362+  7841 20                                                      db 0x20 ; I_HAVE_BEEN_ELECTROCUTED
1363+  7842 0C                                                      db 0x0C ; CMD_END
1364+  7843 05          ACTION_GAME_WIN_BOOTS:                               db 0x05 ; CMD_PRINT_ANSWER
1365+  7844 1F                                                      db 0x1F ; THE_LIFT_HAS_BECOME_ELECTRIFIED
1366+  7845 05                                                      db 0x05 ; CMD_PRINT_ANSWER
1367+  7846 21                                                      db 0x21 ; IT_IS_A_GOOD_JOB_I_WAS_WEARING
1368+  7847 05                                                      db 0x05 ; CMD_PRINT_ANSWER
1369+  7848 1E                                                      db 0x1E ; THE_LIFT_HAS_TAKEN_ME_UP
1370+  7849 0E                                                      db 0x0E ; CMD_SAVE
1371+  784A 05          ACTION_HELP:                               db 0x05
1372+  784B 17                                                      db 0x17
1373+  784C 07                                                      db 0x07
1374+  784D 05          ACTION_LOOK:                               db 0x05
1375+  784E 12                                                      db 0x12
1376+  784F 07                                                      db 0x07
0878   7850             ANSWER_POINTER:                              include text_answers.asm
0001+  7850 A0 78                                                   dw IT_SHOWS_A_MAN_CLIMBING 
0002+  7852 D1 78                                                   dw HOW_I_CANT_REACH 
0003+  7854 E4 78                                                   dw IT_HAS_FALLEN_TO_THE_FLOOR 
0004+  7856 00 79                                                   dw HOW 
0005+  7858 06 79                                                   dw ITS_TOO_WIDE.I_FELL_AND_BROKE 
0006+  785A 2D 79                                                   dw UGH!_HE_IS_ALL_SLIMY 
0007+  785C 43 79                                                   dw HE_VANISHED_IN_A_PUFF_OF_SMOKE 
0008+  785E 63 79                                                   dw YOU_ALSO_BROKE_THE_MIRROR 
0009+  7860 7E 79                                                   dw COMPUTER_SAYS 
0010+  7862 AE 79                                                   dw IT_HAS_WEAKENED_IT 
0011+  7864 C2 79                                                   dw IT_HAD_NO_EFFECT 
0012+  7866 D4 79                                                   dw I_FELL_AND_KNOCKED_MYSELF_OUT 
0013+  7868 F4 79                                                   dw THE_BARS_LOOK_LOOSE 
0014+  786A 09 7A                                                   dw WHAT_WITH 
0015+  786C 15 7A                                                   dw I_SEE_A_GOLD_COIN 
0016+  786E 28 7A                                                   dw BRRR.THE_WATERS_TOO_COLD 
0017+  7870 42 7A                                                   dw THE_FUSE_HAS_JUST_BLOWN 
0018+  7872 5B 7A                                                   dw THE_LIFT_HAS_BEEN_ACTIVATED 
0019+  7874 78 7A                                                   dw I_SEE_NOTHING_SPECIAL 
0020+  7876 8F 7A                                                   dw KEEP_OFF_THE_MIDDLE_MEN 
0021+  7878 BD 7A                                                   dw VANITY_WALTZ 
0022+  787A CC 7A                                                   dw TRY_HELP 
0023+  787C D6 7A                                                   dw POINTS_OF_COMPASS 
0024+  787E E9 7A                                                   dw TRY_LOOKING_AROUND 
0025+  7880 FD 7A                                                   dw I_CAN_SEE_A_STEEP_SLOPE 
0026+  7882 16 7B                                                   dw AN_ALARM_SOUNDS 
0027+  7884 53 7B                                                   dw I_CAN_SEE_A_ROPE_HANGING_DOWN 
0028+  7886 7F 7B                                                   dw I_AM_NOT_THAT_DAFT 
0029+  7888 A3 7B                                                   dw THE_SPACE_SHIP_BLEW_UP 
0030+  788A CA 7B                                                   dw THE_SHIP_HAS_FLOWN 
0031+  788C 46 7C                                                   dw THE_LIFT_HAS_TAKEN_ME_UP 
0032+  788E C3 7C                                                   dw THE_LIFT_HAS_BECOME_ELECTRIFIED 
0033+  7890 E4 7C                                                   dw I_HAVE_BEEN_ELECTROCUTED 
0034+  7892 FE 7C                                                   dw IT_IS_A_GOOD_JOB_I_WAS_WEARING 
0035+  7894 32 7D                                                   dw I_WOULD_KILL_MYSELF_IF_I_DID 
0036+  7896 51 7D                                                   dw I_HAVE_TURNED_GREEN_AND_DROPPED 
0037+  7898 78 7D                                                   dw s_THE_GREEN_MAN_AWOKE_AND_THROTTLE_ram_7e50 
0038+  789A 9F 7D                                                   dw s_THE_GUARD_WOKE_AND_SHOT_ME._ram_7e77 
0039+  789C BC 7D                                                   dw s_WHAT_AT?_ram_7e94 
0040+  789E 00 00                                                   dw 0x0000
0041+  78A0             IT_SHOWS_A_MAN_CLIMBING:                     db "IT SHOWS A MAN CLIMBING DOWN A PIT USING A ROPE\r",0
0041+  78A0 49542053484F57532041204D414E20434C494D42494E4720444F574E20412050
0041+  78C0 4954205553494E47204120524F50450D00
0042+  78D1             HOW_I_CANT_REACH:                            db "HOW? I CANT REACH\r",0
0042+  78D1 484F573F20492043414E542052454143480D00
0043+  78E4             IT_HAS_FALLEN_TO_THE_FLOOR:                  db "IT HAS FALLEN TO THE FLOOR\r",0
0043+  78E4 4954204841532046414C4C454E20544F2054484520464C4F4F520D00
0044+  7900             HOW:                                         db "HOW?\r",0
0044+  7900 484F573F0D00
0045+  7906             ITS_TOO_WIDE.I_FELL_AND_BROKE:               db "ITS TOO WIDE.I FELL AND BROKE MY NECK\r",0
0045+  7906 49545320544F4F20574944452E492046454C4C20414E442042524F4B45204D59
0045+  7926 204E45434B0D00
0046+  792D             UGH!_HE_IS_ALL_SLIMY:                        db "UGH! HE IS ALL SLIMY\r",0
0046+  792D 5547482120484520495320414C4C20534C494D590D00
0047+  7943             HE_VANISHED_IN_A_PUFF_OF_SMOKE:              db "HE VANISHED IN A PUFF OF SMOKE\r",0
0047+  7943 48452056414E495348454420494E20412050554646204F4620534D4F4B450D00
0048+  7963             YOU_ALSO_BROKE_THE_MIRROR:                   db "YOU ALSO BROKE THE MIRROR\r",0
0048+  7963 594F5520414C534F2042524F4B4520544845204D4952524F520D00
0049+  797E             COMPUTER_SAYS:                               db "COMPUTER SAYS: 2 WEST,2 SOUTH FOR SPACE FLIGHT\r",0
0049+  797E 434F4D505554455220534159533A203220574553542C3220534F55544820464F
0049+  799E 5220535041434520464C494748540D00
0050+  79AE             IT_HAS_WEAKENED_IT:                          db "IT HAS WEAKENED IT\r",0
0050+  79AE 495420484153205745414B454E45442049540D00
0051+  79C2             IT_HAD_NO_EFFECT:                            db "IT HAD NO EFFECT\r",0
0051+  79C2 495420484144204E4F204546464543540D00
0052+  79D4             I_FELL_AND_KNOCKED_MYSELF_OUT:               db "I FELL AND KNOCKED MYSELF OUT.\r",0
0052+  79D4 492046454C4C20414E44204B4E4F434B4544204D5953454C46204F55542E0D00
0053+  79F4             THE_BARS_LOOK_LOOSE:                         db "THE BARS LOOK LOOSE\r",0
0053+  79F4 5448452042415253204C4F4F4B204C4F4F53450D00
0054+  7A09             WHAT_WITH:                                   db "WHAT WITH?\r",0
0054+  7A09 5748415420574954483F0D00
0055+  7A15             I_SEE_A_GOLD_COIN:                           db "I SEE A GOLD COIN\r",0
0055+  7A15 4920534545204120474F4C4420434F494E0D00
0056+  7A28             BRRR.THE_WATERS_TOO_COLD:                    db "BRRR.THE WATERS TOO COLD\r",0
0056+  7A28 425252522E5448452057415445525320544F4F20434F4C440D00
0057+  7A42             THE_FUSE_HAS_JUST_BLOWN:                     db "THE FUSE HAS JUST BLOWN\r",0
0057+  7A42 544845204655534520484153204A55535420424C4F574E0D00
0058+  7A5B             THE_LIFT_HAS_BEEN_ACTIVATED:                 db "THE LIFT HAS BEEN ACTIVATED\r",0
0058+  7A5B 544845204C49465420484153204245454E204143544956415445440D00
0059+  7A78             I_SEE_NOTHING_SPECIAL:                       db "I SEE NOTHING SPECIAL\r",0
0059+  7A78 4920534545204E4F5448494E47205350454349414C0D00
0060+  7A8F             KEEP_OFF_THE_MIDDLE_MEN:                     db "KEEP OFF THE MIDDLE MEN,ONE MAY BE SHOCKING!\r",0
0060+  7A8F 4B454550204F464620544845204D4944444C45204D454E2C4F4E45204D415920
0060+  7AAF 42452053484F434B494E47210D00
0061+  7ABD             VANITY_WALTZ:                                db "VANITY WALTZ!\r",0
0061+  7ABD 56414E4954592057414C545A210D00
0062+  7ACC             TRY_HELP:                                    db "TRY HELP\r",0
0062+  7ACC 5452592048454C500D00
0063+  7AD6             POINTS_OF_COMPASS:                           db "POINTS OF COMPASS\r",0
0063+  7AD6 504F494E5453204F4620434F4D504153530D00
0064+  7AE9             TRY_LOOKING_AROUND:                          db "TRY LOOKING AROUND\r",0
0064+  7AE9 545259204C4F4F4B494E472041524F554E440D00
0065+  7AFD             I_CAN_SEE_A_STEEP_SLOPE:                     db "I CAN SEE A STEEP SLOPE\r",0
0065+  7AFD 492043414E20534545204120535445455020534C4F50450D00
0066+  7B16             AN_ALARM_SOUNDS:                             db "AN ALARM SOUNDS.THE SECURITY GUARD SHOT ME FOR TRESPASSING.\r",0
0066+  7B16 414E20414C41524D20534F554E44532E54484520534543555249545920475541
0066+  7B36 52442053484F54204D4520464F52205452455350415353494E472E0D00
0067+  7B53             I_CAN_SEE_A_ROPE_HANGING_DOWN:               db "I CAN SEE A ROPE HANGING DOWN THE CHIMNEY.\r",0
0067+  7B53 492043414E20534545204120524F50452048414E47494E4720444F574E205448
0067+  7B73 45204348494D4E45592E0D00
0068+  7B7F             I_AM_NOT_THAT_DAFT:                          db "I AM NOT THAT DAFT.IT IS TOO DEEP.\r",0
0068+  7B7F 4920414D204E4F54205448415420444146542E495420495320544F4F20444545
0068+  7B9F 502E0D00
0069+  7BA3             THE_SPACE_SHIP_BLEW_UP:                      db "THE SPACE SHIP BLEW UP AND KILLED ME.\r",0
0069+  7BA3 544845205350414345205348495020424C455720555020414E44204B494C4C45
0069+  7BC3 44204D452E0D00
0070+  7BCA             THE_SHIP_HAS_FLOWN:                          db "THE SHIP HAS FLOWN INTO THE LARGE LIFT AND IS HOVERING THERE.\rTHERE ARE FOUR BU"
0070+  7BCA 54484520534849502048415320464C4F574E20494E544F20544845204C415247
0070+  7BEA 45204C49465420414E4420495320484F564552494E472054484552452E0D5448
0070+  7C0A 4552452041524520464F5552204255
0071+  7C19                                                         db "TTONS OUTSIDE THE WINDOW MARKED 1,2,3 AND 4\r",0
0071+  7C19 54544F4E53204F555453494445205448452057494E444F57204D41524B454420
0071+  7C39 312C322C3320414E4420340D00
0072+  7C46             THE_LIFT_HAS_TAKEN_ME_UP:                    db "THE LIFT HAS TAKEN ME UP TO A PLATEAU.\rCONGRATULATIONS, YOU HAVE MANAGED TO COM"
0072+  7C46 544845204C494654204841532054414B454E204D4520555020544F204120504C
0072+  7C66 41544541552E0D434F4E47524154554C4154494F4E532C20594F552048415645
0072+  7C86 204D414E4147454420544F20434F4D
0073+  7C95                                                         db "PLETE THIS ADVENTURE\rWITHOUT GETTING KILLED.\r",0
0073+  7C95 504C455445205448495320414456454E545552450D574954484F555420474554
0073+  7CB5 54494E47204B494C4C45442E0D00
0074+  7CC3             THE_LIFT_HAS_BECOME_ELECTRIFIED:             db "THE LIFT HAS BECOME ELECTRIFIED\r",0
0074+  7CC3 544845204C49465420484153204245434F4D4520454C4543545249464945440D
0074+  7CE3 00
0075+  7CE4             I_HAVE_BEEN_ELECTROCUTED:                    db "I HAVE BEEN ELECTROCUTED\r",0
0075+  7CE4 492048415645204245454E20454C454354524F43555445440D00
0076+  7CFE             IT_IS_A_GOOD_JOB_I_WAS_WEARING:              db "IT IS A GOOD JOB I WAS WEARING RUBBER SOLED BOOTS.\r",0
0076+  7CFE 4954204953204120474F4F44204A4F422049205741532057454152494E472052
0076+  7D1E 554242455220534F4C454420424F4F54532E0D00
0077+  7D32             I_WOULD_KILL_MYSELF_IF_I_DID:                db "I WOULD KILL MYSELF IF I DID.\r",0
0077+  7D32 4920574F554C44204B494C4C204D5953454C462049462049204449442E0D00
0078+  7D51             I_HAVE_TURNED_GREEN_AND_DROPPED:             db "I HAVE TURNED GREEN AND DROPPED DEAD.\r",0
0078+  7D51 492048415645205455524E454420475245454E20414E442044524F5050454420
0078+  7D71 444541442E0D00
0079+  7D78             s_THE_GREEN_MAN_AWOKE_AND_THROTTLE_ram_7e50: db "THE GREEN MAN AWOKE AND THROTTLED ME.\r",0
0079+  7D78 54484520475245454E204D414E2041574F4B4520414E44205448524F54544C45
0079+  7D98 44204D452E0D00
0080+  7D9F             s_THE_GUARD_WOKE_AND_SHOT_ME._ram_7e77:      db "THE GUARD WOKE AND SHOT ME.\r",0
0080+  7D9F 54484520475541524420574F4B4520414E442053484F54204D452E0D00
0081+  7DBC             s_WHAT_AT?_ram_7e94:                         db "WHAT AT?\r",0
0081+  7DBC 574841542041543F0D00
0879   7DC6             DEFAULT_TABLE:                               include actions_default.asm
0001+  7DC6             
0002+  7DC6 FF                                                      db COMMAND_ANY 
0003+  7DC7 FF                                                      db COMMAND_ANY 
0004+  7DC8 EB 7D                                                   dw VALIDATOR0 
0005+  7DCA 0A 7E                                                   dw ACTION_DIE_GREEN 
0006+  7DCC FF                                                      db COMMAND_ANY
0007+  7DCD FF                                                      db COMMAND_ANY
0008+  7DCE F1 7D                                                   dw VALIDATOR1 
0009+  7DD0 0D 7E                                                   dw ACTION_DIE_THROTT 
0010+  7DD2 FF                                                      db COMMAND_ANY
0011+  7DD3 FF                                                      db COMMAND_ANY
0012+  7DD4 F7 7D                                                   dw VALIDATOR2 
0013+  7DD6 0D 7E                                                   dw ACTION_DIE_THROTT 
0014+  7DD8 FF                                                      db COMMAND_ANY
0015+  7DD9 FF                                                      db COMMAND_ANY
0016+  7DDA FD 7D                                                   dw VALIDATOR3 
0017+  7DDC 10 7E                                                   dw ACTION_DIE_SHOT 
0018+  7DDE FF                                                      db COMMAND_ANY
0019+  7DDF FF                                                      db COMMAND_ANY
0020+  7DE0 03 7E                                                   dw VALIDATOR4 
0021+  7DE2 13 7E                                                   dw ACTION_SWAP_ICE 
0022+  7DE4 FF                                                      db COMMAND_ANY
0023+  7DE5 FF                                                      db COMMAND_ANY
0024+  7DE6 09 7E                                                   dw VALIDATOR5 
0025+  7DE8 15 7E                                                   dw ACTION_TELL_ME 
0026+  7DEA 00                                                      db 0x00
0027+  7DEB             
0028+  7DEB 06          VALIDATOR0:                                  db 0x06 ; PROC6(5,1)
0029+  7DEC 05                                                      db 0x05 ; IX+5
0030+  7DED 01                                                      db 0x01 ; ==1
0031+  7DEE 05                                                      db 0x05 ; PROC5(6)
0032+  7DEF 06                                                      db 0x06 ; IX+6!=0
0033+  7DF0 FF                                                      db 0xFF
0034+  7DF1 06          VALIDATOR1:                                  db 0x06 ; PROC6(2,1)
0035+  7DF2 02                                                      db 0x02 ; IX+2
0036+  7DF3 01                                                      db 0x01 ; ==1
0037+  7DF4 01                                                      db 0x01 ; PROC1(0x10) is item available
0038+  7DF5 10                                                      db 0x10 ; OBJECT_A_SMALL_GREEN_MAN_SLEEPING
0039+  7DF6 FF                                                      db 0xFF
0040+  7DF7 06          VALIDATOR2:                                  db 0x06 ; PROC6(2,1)
0041+  7DF8 02                                                      db 0x02 ; IX+2
0042+  7DF9 01                                                      db 0x01 ; ==1
0043+  7DFA 01                                                      db 0x01 ; PROC1(0x11) is item available
0044+  7DFB 11                                                      db 0x11 ; OBJECT_A_SLEEPING_GREEN_MAN
0045+  7DFC FF                                                      db 0xFF
0046+  7DFD 06          VALIDATOR3:                                  db 0x06 ; PROC6(2,1)
0047+  7DFE 02                                                      db 0x02 ; IX+2
0048+  7DFF 01                                                      db 0x01 ; ==1
0049+  7E00 01                                                      db 0x01 ; PROC1(0x17) is item available
0050+  7E01 17                                                      db 0x17 ; OBJECT_A_SLEEPING_SECURITY_MAN
0051+  7E02 FF                                                      db 0xFF
0052+  7E03 06          VALIDATOR4:                                  db 0x06 ; PROC6(2,1)
0053+  7E04 02                                                      db 0x02 ; IX+2
0054+  7E05 01                                                      db 0x01 ; ==1
0055+  7E06 01                                                      db 0x01 ; PROC1(0x0e)
0056+  7E07 0E                                                      db 0x0E ; OBJECT_A_BLOCK_OF_ICE
0057+  7E08 FF                                                      db 0xFF
0058+  7E09 FF          VALIDATOR5:                                  db 0xFF ; no validation
0059+  7E0A 05          ACTION_DIE_GREEN:                            db 0x05 ; CMD_PRINT_ANSWER
0060+  7E0B 23                                                      db 0x23 ; I_HAVE_TURNED_GREEN_AND_DROPPED
0061+  7E0C 0C                                                      db 0x0C ; CMD_END
0062+  7E0D 05          ACTION_DIE_THROTT:                           db 0x05 ; CMD_PRINT_ANSWER
0063+  7E0E 24                                                      db 0x24 ; s_THE_GREEN_MAN_AWOKE_AND_THROTTLE_ram_7e50
0064+  7E0F 0C                                                      db 0x0C ; CMD_END
0065+  7E10 05          ACTION_DIE_SHOT:                             db 0x05 ; CMD_PRINT_ANSWER
0066+  7E11 25                                                      db 0x25 ; s_THE_GUARD_WOKE_AND_SHOT_ME._ram_7e77
0067+  7E12 0C                                                      db 0x0C ; CMD_END
0068+  7E13 0B          ACTION_SWAP_ICE:                             db 0x0B ; CMD_SWAP_ITEM
0069+  7E14 0E                                                      db 0x0E ; item number OBJECT_A_BLOCK_OF_ICE and OBJECT_A_POOL_OF_WATER
0070+  7E15 15          ACTION_TELL_ME:                              db 0x15 ; CMD_TELL_ME
0880   7E16             END_OF_DATA:                                 endmodule
0881   7E16             
0882   7E16 21 3B 5C    BASIC_RUNNER                                LD HL,0x5C3b
0883   7E19 36 CC                                                   LD (HL),0xCC
0884   7E1B                                                         ; im2
0885   7E1B F3                                                      DI  
0886   7E1C 3E BA                                                   LD A,0xBA
0887   7E1E ED 47                                                   LD I,A
0888   7E20 ED 5E                                                   IM 2
0889   7E22 FB                                                      EI
0890   7E23 C3 6C 5D                                                JP GAME.ENTRY_POINT
0891   7E26                                                         ;JP DEBUG_TEXT
0892   7E26             
0893   7E26                                                         ORG  0xBA00
0894   BA00 BB                                                      DEFS 257,0xBB
0895   BB01             
0896   BB01                                                         ORG 0xBBBB
0897   BBBB F3                                                      DI
0898   BBBC F5                                                      PUSH AF                
0899   BBBD C5                                                      PUSH BC                                               
0900   BBBE D5                                                      PUSH DE                                               
0901   BBBF DD E5                                                   PUSH IX                                               
0902   BBC1 FD E5                                                   PUSH IY                                              
0903   BBC3 E5                                                      PUSH HL  
0904   BBC4             
0905   BBC4 CD 21 BC                                                call KEYBOARD.KEYBOARD
0906   BBC7             
0907   BBC7                                                         ;XOR A
0908   BBC7                                                         ;LD (23560),A
0909   BBC7                                                         ;LD IY,#5C3A
0910   BBC7                                                         ;RST 56
0911   BBC7 3A 08 5C                                                LD a,(23560) 
0912   BBCA 32 01 40                                                LD (16385),A
0913   BBCD 3A ED BB                                                LD a,(KEYBOARD.LASTK) 
0914   BBD0 32 66 06                                                LD (1638),A
0915   BBD3             
0916   BBD3 3A 00 40                                                LD a,(16384)
0917   BBD6 EE FF                                                   xor 255
0918   BBD8 32 00 40                                                ld (16384),a
0919   BBDB             
0920   BBDB E1                                                      POP HL 
0921   BBDC FD E1                                                   POP IY
0922   BBDE DD E1                                                   POP IX     
0923   BBE0 D1                                                      POP DE
0924   BBE1 C1                                                      POP BC                                                                                                                                        
0925   BBE2 F1                                                      POP AF                                                                                                                                                                                                   
0926   BBE3 FB                                                      EI
0927   BBE4 C9                                                      RET
0928   BBE5             
0929   BBE5                                                         include keyboard.asm
0001+  BBE5             	module KEYBOARD
0002+  BBE5             	
0003+  BBE5             	; + FF if the set is unused, or a main code from the main key table otherwise
0004+  BBE5             	;Call counter; initially + 05, and decremented on each call to KEYBOARD
0005+  BBE5             	;Repeat delay counter; initially REPDEL, decremented on each call to KEYBOARD, reset to REPPER whenever it reaches zero
0006+  BBE5             	;Final code from the key tables (as computed by K_DECODE)
0007+  BBE5 FF 00 00 00 KSTATE_0:  db $FF, $00, $00, $00
0008+  BBE9 FF 00 00 00 KSTATE_4:  db $FF, $00, $00, $00
0009+  BBED             	;Read by the routine at KEY_INPUT, and updated by the routine at KEYBOARD.
0010+  BBED 00          LASTK:  db $00
0011+  BBEE             	;REPDEL - Time that a key must be held down before it repeats
0012+  BBEE 23          REPDEL:  db $23
0013+  BBEF             	;Delay between successive repeats of a key held down
0014+  BBEF             	;Initialised by the routine at NEW, and read by the routine at KEYBOARD.
0015+  BBEF 05          REPPER:  db $05
0016+  BBF0             	
0017+  BBF0             	
0018+  BBF0             	; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
0019+  BBF0             	; * * Part 2. KEYBOARD ROUTINES * * 
0020+  BBF0             	; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
0021+  BBF0             	
0022+  BBF0             	; Using shift keys and a combination of modes the Spectrum 40 - key keyboard
0023+  BBF0             	; can be mapped to 256 input characters
0024+  BBF0             	
0025+  BBF0             	; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
0026+  BBF0             	;
0027+  BBF0             	; 0 1 2 3 4 - Bits - 4 3 2 1 0
0028+  BBF0             	; PORT PORT
0029+  BBF0             	;
0030+  BBF0             	; F7FE [ 1 ] [ 2 ] [ 3 ] [ 4 ] [ 5 ] | [ 6 ] [ 7 ] [ 8 ] [ 9 ] [ 0 ] EFFE
0031+  BBF0             	; ^ | v
0032+  BBF0             	; FBFE [ Q ] [ W ] [ E ] [ R ] [ T ] | [ Y ] [ U ] [ I ] [ O ] [ P ] DFFE
0033+  BBF0             	; ^ | v
0034+  BBF0             	; FDFE [ A ] [ S ] [ D ] [ F ] [ G ] | [ H ] [ J ] [ K ] [ L ] [ ENT ] BFFE
0035+  BBF0             	; ^ | v
0036+  BBF0             	; FEFE [SHI] [ Z ] [ X ] [ C ] [ V ] | [ B ] [ N ] [ M ] [sym] [ SPC ] 7FFE
0037+  BBF0             	; ^ $27 $18 v
0038+  BBF0             	; Start End
0039+  BBF0             	; 00100111 00011000
0040+  BBF0             	;
0041+  BBF0             	; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
0042+  BBF0             	; The above map may help in reading.
0043+  BBF0             	; The neat arrangement of ports means that the B register need only be
0044+  BBF0             	; rotated left to work up the left hand side and then down the right
0045+  BBF0             	; hand side of the keyboard. When the reset bit drops into the carry
0046+  BBF0             	; then all 8 half - rows have been read. Shift is the first key to be
0047+  BBF0             	; read. The lower six bits of the shifts are unambiguous.
0048+  BBF0             	
0049+  BBF0             	; - - - - - - - - - - - - - - - - - - 
0050+  BBF0             	; Keyboard scanning
0051+  BBF0             	; - - - - - - - - - - - - - - - - - - 
0052+  BBF0             	; from keyboard and S_INKEY
0053+  BBF0             	; returns 1 or 2 keys in DE, most significant shift first if any
0054+  BBF0             	; key values 0 - 39 else 255P
0055+  BBF0             	
0056+  BBF0             	;;;$028E
0057+  BBF0 2E 2F       KEY_SCAN:  LD L, $2F           ; initial key value
0058+  BBF2             	; valid values are obtained by subtracting
0059+  BBF2             	; eight five times.
0060+  BBF2 11 FF FF    	LD DE, $FFFF                 ; a buffer to receive 2 keys.
0061+  BBF5 01 FE FE    	LD BC, $FEFE                 ; the commencing port address
0062+  BBF8             	; B holds 11111110 initially and is also
0063+  BBF8             	; used to count the 8 half - rows
0064+  BBF8             	;;;$0296
0065+  BBF8 ED 78       KEY_LINE:  IN A, (C)           ; read the port to A - bits will be reset
0066+  BBFA             	; if a key is pressed else set.
0067+  BBFA 2F          	CPL                          ; complement - pressed key - bits are now set
0068+  BBFB E6 1F       	AND $1F                      ; apply 00011111 mask to pick up the
0069+  BBFD             	; relevant set bits.
0070+  BBFD 28 0E       	JR Z, KEY_DONE               ; forward to KEY_DONE if zero and therefore
0071+  BBFF             	; no keys pressed in row at all.
0072+  BBFF 67          	LD H, A                      ; transfer row bits to H
0073+  BC00 7D          	LD A, L                      ; load the initial key value to A
0074+  BC01             	
0075+  BC01             	;;;$029F
0076+  BC01 14          KEY_3KEYS:  INC D              ; now test the key buffer
0077+  BC02 C0          	RET NZ                       ; if we have collected 2 keys already
0078+  BC03             	; then too many so quit.
0079+  BC03             	
0080+  BC03             	;;;$02A1
0081+  BC03 D6 08       KEY_BITS:  SUB $08             ; subtract 8 from the key value
0082+  BC05             	; cycling through key values (top = $27)
0083+  BC05             	; e.g. 2F> 27>1F>17>0F>07
0084+  BC05             	; 2E> 26>1E>16>0E>06
0085+  BC05 CB 3C       	SRL H                        ; shift key bits right into carry.
0086+  BC07 30 FA       	JR NC, KEY_BITS              ; back to KEY_BITS if not pressed
0087+  BC09             	; but if pressed we have a value (0 - 39d)
0088+  BC09 53          	LD D, E                      ; transfer a possible previous key to D
0089+  BC0A 5F          	LD E, A                      ; transfer the new key to E
0090+  BC0B 20 F4       	JR NZ, KEY_3KEYS             ; back to KEY_3KEYS if there were more
0091+  BC0D             	; set bits - H was not yet zero.
0092+  BC0D             	
0093+  BC0D             	;;;$02AB
0094+  BC0D 2D          KEY_DONE:  DEC L               ; cycles 2F>2E>2D>2C>2B>2A>29>28 for
0095+  BC0E             	; each half - row.
0096+  BC0E CB 00       	RLC B                        ; form next port address e.g. FEFE > FDFE
0097+  BC10 38 E6       	JR C, KEY_LINE               ; back to KEY_LINE if still more rows to do.
0098+  BC12             	
0099+  BC12 7A          	LD A, D                      ; now test if D is still FF ?
0100+  BC13 3C          	INC A                        ; if it is zero we have at most 1 key
0101+  BC14             	; range now $01 - $28 (1 - 40d)
0102+  BC14 C8          	RET Z                        ; return if one key or no key.
0103+  BC15             	
0104+  BC15 FE 28       	CP $28                       ; is it capsshift (was $27) ?
0105+  BC17 C8          	RET Z                        ; return if so.
0106+  BC18             	
0107+  BC18 FE 19       	CP $19                       ; is it symbol shift (was $18) ?
0108+  BC1A C8          	RET Z                        ; return also
0109+  BC1B             	
0110+  BC1B 7B          	LD A, E                      ; now test E
0111+  BC1C 5A          	LD E, D                      ; but first switch
0112+  BC1D 57          	LD D, A                      ; the two keys.
0113+  BC1E FE 18       	CP $18                       ; is it symbol shift ?
0114+  BC20 C9          	RET                          ; return (with zero set if it was).
0115+  BC21             	; but with symbol shift now in D
0116+  BC21             	
0117+  BC21             	; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
0118+  BC21             	; Scan keyboard and decode value
0119+  BC21             	; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
0120+  BC21             	; from interrupt 50 times a second
0121+  BC21             	
0122+  BC21             	;;;$02BF
0123+  BC21 CD F0 BB    KEYBOARD:  CALL KEY_SCAN       ; routine KEY_SCAN
0124+  BC24 C0          	RET NZ                       ; return if invalid combinations
0125+  BC25             	
0126+  BC25             	; then decrease the counters within the two key - state maps
0127+  BC25             	; as this could cause one to become free.
0128+  BC25             	; if the keyboard has not been pressed during the last five interrupts
0129+  BC25             	; then both sets will be free.
0130+  BC25             	
0131+  BC25             	
0132+  BC25 21 E5 BB    	LD HL, KSTATE_0              ; point to KSTATE_0
0133+  BC28             	
0134+  BC28             	;;;$02C6
0135+  BC28 CB 7E       K_ST_LOOP:  BIT 7, (HL)        ; is it free ? ($FF)
0136+  BC2A 20 07       	JR NZ, K_CH_SET              ; forward to K_CH_SET if so
0137+  BC2C             	
0138+  BC2C 23          	INC HL                       ; address 5 - counter
0139+  BC2D 35          	DEC (HL)                     ; decrease counter
0140+  BC2E 2B          	DEC HL                       ; step back
0141+  BC2F 20 02       	JR NZ, K_CH_SET              ; forward to K_CH_SET if not at end of count
0142+  BC31             	
0143+  BC31 36 FF       	LD (HL), $FF                 ; else mark it free.
0144+  BC33             	
0145+  BC33             	;;;$02D1
0146+  BC33 7D          K_CH_SET:  LD A, L             ; store low address byte.
0147+  BC34 21 E9 BB    	LD HL, KSTATE_4              ; point to KSTATE_4
0148+  BC37             	; (ld l, $04)
0149+  BC37 BD          	CP L                         ; have 2 been done ?
0150+  BC38 20 EE       	JR NZ, K_ST_LOOP             ; back to K_ST_LOOP to consider this 2nd set
0151+  BC3A             	
0152+  BC3A             	; now the raw key (0 - 38) is converted to a main key (uppercase).
0153+  BC3A             	
0154+  BC3A CD 80 BC    	CALL K_TEST                  ; routine K_TEST to get main key in A
0155+  BC3D D0          	RET NC                       ; return if single shift
0156+  BC3E             	
0157+  BC3E 21 E5 BB    	LD HL, KSTATE_0              ; point to KSTATE_0
0158+  BC41 BE          	CP (HL)                      ; does it match ?
0159+  BC42 28 2E       	JR Z, K_REPEAT               ; forward to K_REPEAT if so
0160+  BC44             	
0161+  BC44             	; if not consider the second key map.
0162+  BC44             	
0163+  BC44 EB          	EX DE, HL                    ; save KSTATE_0 in DE
0164+  BC45 21 E9 BB    	LD HL, KSTATE_4              ; point to KSTATE_4
0165+  BC48 BE          	CP (HL)                      ; does it match ?
0166+  BC49 28 27       	JR Z, K_REPEAT               ; forward to K_REPEAT if so
0167+  BC4B             	
0168+  BC4B             	; having excluded a repeating key we can now consider a new key.
0169+  BC4B             	; the second set is always examined before the first.
0170+  BC4B             	
0171+  BC4B CB 7E       	BIT 7, (HL)                  ; is it free ?
0172+  BC4D 20 04       	JR NZ, K_NEW                 ; forward to K_NEW if so.
0173+  BC4F             	
0174+  BC4F EB          	EX DE, HL                    ; bring back KSTATE_0
0175+  BC50 CB 7E       	BIT 7, (HL)                  ; is it free ?
0176+  BC52 C8          	RET Z                        ; return if not.
0177+  BC53             	; as we have a key but nowhere to put it yet.
0178+  BC53             	
0179+  BC53             	; continue or jump to here if one of the buffers was free.
0180+  BC53             	
0181+  BC53             	;;;$02F1
0182+  BC53 5F          K_NEW:  LD E, A                ; store key in E
0183+  BC54 77          	LD (HL), A                   ; place in free location
0184+  BC55 23          	INC HL                       ; advance to interrupt counter
0185+  BC56 36 05       	LD (HL), $05                 ; and initialize to 5
0186+  BC58 23          	INC HL                       ; advance to delay
0187+  BC59 3A EE BB    	LD A, (REPDEL)               ; pick up system variable REPDEL
0188+  BC5C 77          	LD (HL), A                   ; and insert that for first repeat delay.
0189+  BC5D 23          	INC HL                       ; advance to last location of state map.
0190+  BC5E FD 4E 07    	LD C, (IY + $07)             ; pick up MODE (3 bytes)
0191+  BC61 FD 56 01    	LD D, (IY + $01)             ; pick up FLAGS (3 bytes)
0192+  BC64 E5          	PUSH HL                      ; save state map location
0193+  BC65             	; Note. could now have used.
0194+  BC65             	; ld l, $41; ld c, (hl); ld l, $3B; ld d, (hl).
0195+  BC65             	; six and two threes of course.
0196+  BC65 CD 95 BC    	CALL K_DECODE                ; routine K_DECODE
0197+  BC68 E1          	POP HL                       ; restore map pointer
0198+  BC69 77          	LD (HL), A                   ; put decoded key in last location of map.
0199+  BC6A             	
0200+  BC6A             	;;;$0308
0201+  BC6A 32 ED BB    K_END:  LD (LASTK), A          ; update LASTK system variable.
0202+  BC6D FD CB 01 EE 	SET 5, (IY + $01)            ; update FLAGS - signal new key.
0203+  BC71 C9          	RET                          ; done
0204+  BC72             	
0205+  BC72             	; - - - - - - - - - - - - - - - - - - - 
0206+  BC72             	; Repeat key routine
0207+  BC72             	; - - - - - - - - - - - - - - - - - - - 
0208+  BC72             	; A possible repeat has been identified. HL addresses the raw (main) key.
0209+  BC72             	; The last location holds the decoded key (from the first context).
0210+  BC72             	
0211+  BC72             	;;;$0310
0212+  BC72 23          K_REPEAT:  INC HL              ; advance
0213+  BC73 36 05       	LD (HL), $05                 ; maintain interrupt counter at 5
0214+  BC75 23          	INC HL                       ; advance
0215+  BC76 35          	DEC (HL)                     ; decrease REPDEL value.
0216+  BC77 C0          	RET NZ                       ; return if not yet zero.
0217+  BC78             	
0218+  BC78 3A EF BB    	LD A, (REPPER)               ; REPPER
0219+  BC7B 77          	LD (HL), A                   ; but for subsequent repeats REPPER will be used.
0220+  BC7C 23          	INC HL                       ; advance
0221+  BC7D 7E          	LD A, (HL)                   ; pick up the key decoded possibly in another context.
0222+  BC7E 18 EA       	JR K_END                     ; back to K_END
0223+  BC80             	
0224+  BC80             	; - - - - - - - - - - - - - - - 
0225+  BC80             	; Test key value
0226+  BC80             	; - - - - - - - - - - - - - - - 
0227+  BC80             	; also called from S_INKEY
0228+  BC80             	; begin by testing for a shift with no other.
0229+  BC80             	
0230+  BC80             	;;;$031E
0231+  BC80 42          K_TEST:  LD B, D               ; load most significant key to B
0232+  BC81             	; will be $FF if not shift.
0233+  BC81 16 00       	LD D, $00                    ; and reset D to index into main table
0234+  BC83 7B          	LD A, E                      ; load least significant key from E
0235+  BC84 FE 27       	CP $27                       ; is it higher than 39d i.e. FF
0236+  BC86 D0          	RET NC                       ; return with just a shift (in B now)
0237+  BC87             	
0238+  BC87 FE 18       	CP $18                       ; is it symbol shift ?
0239+  BC89 20 03       	JR NZ, K_MAIN                ; forward to K_MAIN if not
0240+  BC8B             	
0241+  BC8B             	; but we could have just symbol shift and no other
0242+  BC8B             	
0243+  BC8B CB 78       	BIT 7, B                     ; is other key $FF (ie not shift)
0244+  BC8D C0          	RET NZ                       ; return with solitary symbol shift
0245+  BC8E             	
0246+  BC8E             	;;;$032C
0247+  BC8E 21 87 BE    K_MAIN:  LD HL, MAIN_KEYS      ; address: MAIN_KEYS
0248+  BC91 19          	ADD HL, DE                   ; add offset 0 - 38
0249+  BC92 7E          	LD A, (HL)                   ; pick up main key value
0250+  BC93 37          	SCF                          ; set carry flag
0251+  BC94 C9          	RET                          ; return (B has other key still)
0252+  BC95             	
0253+  BC95             	; - - - - - - - - - - - - - - - - - - 
0254+  BC95             	; Keyboard decoding
0255+  BC95             	; - - - - - - - - - - - - - - - - - - 
0256+  BC95             	; also called from S_INKEY
0257+  BC95             	
0258+  BC95             	;;;$0333
0259+  BC95 7B          K_DECODE:  LD A, E             ; pick up the stored main key
0260+  BC96 FE 3A       	CP $3A                       ; an arbitrary point between digits and letters
0261+  BC98 38 2F       	JR C, K_DIGIT                ; forward to K_DIGIT with digits, space, enter
0262+  BC9A             	
0263+  BC9A 0D          	DEC C                        ; decrease MODE ( 0='KLC', 1='E', 2='G')
0264+  BC9B FA B1 BC    	JP M, K_KLC_LET              ; to K_KLC_LET if was zero
0265+  BC9E             	
0266+  BC9E 28 03       	JR Z, K_E_LET                ; to K_E_LET if was 1 for extended letters.
0267+  BCA0             	
0268+  BCA0             	; proceed with graphic codes.
0269+  BCA0             	; Note. should selectively drop return address if code > 'U' ($55).
0270+  BCA0             	; i.e. abort the KEYBOARD call.
0271+  BCA0             	; e.g. cp 'V'; jr c addit; pop af; ;;addit etc. (5 bytes of instruction).
0272+  BCA0             	; (S_INKEY never gets into graphics mode.)
0273+  BCA0             	
0274+  BCA0             	;; addit
0275+  BCA0 C6 4F       	ADD A, $4F                   ; add offset to augment 'A' to graphics A say.
0276+  BCA2 C9          	RET                          ; return.
0277+  BCA3             	; Note. ( but [GRAPH] V gives RND, etc ).
0278+  BCA3             	
0279+  BCA3             	; the jump was to here with extended mode with uppercase A - Z.
0280+  BCA3             	
0281+  BCA3             	;;;$0341
0282+  BCA3 21 6D BE    K_E_LET:  LD HL, E_UNSHIFT - $41; base address of E_UNSHIFT - $41
0283+  BCA6             	; ( $01EB in standard ROM )
0284+  BCA6 04          	INC B                        ; test B is it empty i.e. not a shift
0285+  BCA7 28 03       	JR Z, K_LOOK_UP              ; forward to K_LOOK_UP if neither shift
0286+  BCA9             	
0287+  BCA9 21 87 BE    	LD HL, EXT_SHIFT - $41       ; Address: $0205 EXT_SHIFT - $41 base
0288+  BCAC             	
0289+  BCAC             	;;;$034A
0290+  BCAC 16 00       K_LOOK_UP:  LD D, $00          ; prepare to index
0291+  BCAE 19          	ADD HL, DE                   ; add the main key value
0292+  BCAF 7E          	LD A, (HL)                   ; pick up other mode value
0293+  BCB0 C9          	RET                          ; return
0294+  BCB1             	
0295+  BCB1             	; the jump was here with mode = 0
0296+  BCB1             	
0297+  BCB1             	;;;$034F
0298+  BCB1 21 AB BE    K_KLC_LET:  LD HL, SYM_CODES - $41; prepare base of SYM_CODES
0299+  BCB4 CB 40       	BIT 0, B                     ; shift=$27 sym - shift=$18
0300+  BCB6 28 F4       	JR Z, K_LOOK_UP              ; back to K_LOOK_UP with symbol - shift
0301+  BCB8             	
0302+  BCB8 CB 5A       	BIT 3, D                     ; test FLAGS is it 'K' mode (from OUT_CURS)
0303+  BCBA 28 0A       	JR Z, K_TOKENS               ; skip to K_TOKENS if so
0304+  BCBC             	
0305+  BCBC FD CB 30 5E 	BIT 3, (IY + $30)            ; test FLAGS2 - consider CAPS LOCK ?
0306+  BCC0 C0          	RET NZ                       ; return if so with main code.
0307+  BCC1             	
0308+  BCC1 04          	INC B                        ; is shift being pressed ?
0309+  BCC2             	; result zero if not
0310+  BCC2 C0          	RET NZ                       ; return if shift pressed.
0311+  BCC3             	
0312+  BCC3 C6 20       	ADD A, $20                   ; else convert the code to lower case.
0313+  BCC5 C9          	RET                          ; return.
0314+  BCC6             	
0315+  BCC6             	; the jump was here for tokens
0316+  BCC6             	
0317+  BCC6             	;;;$0364
0318+  BCC6 C6 A5       K_TOKENS:  ADD A, $A5          ; add offset to main code so that 'A'
0319+  BCC8             	; becomes 'NEW' etc.
0320+  BCC8 C9          	RET                          ; return
0321+  BCC9             	
0322+  BCC9             	; the jump was here with digits, space, enter and symbol shift (< $xx)
0323+  BCC9             	
0324+  BCC9             	;;;$0367
0325+  BCC9 FE 30       K_DIGIT:  CP $30               ; is it '0' or higher ?
0326+  BCCB D8          	RET C                        ; return with space, enter and symbol - shift
0327+  BCCC             	
0328+  BCCC 0D          	DEC C                        ; test MODE (was 0='KLC', 1='E', 2='G')
0329+  BCCD FA FF BC    	JP M, K_KLC_DGT              ; jump to K_KLC_DGT if was 0.
0330+  BCD0             	
0331+  BCD0 20 19       	JR NZ, K_GRA_DGT             ; forward to K_GRA_DGT if mode was 2.
0332+  BCD2             	
0333+  BCD2             	; continue with extended digits 0 - 9.
0334+  BCD2             	
0335+  BCD2 21 D6 BE    	LD HL, E_DIGITS - $30        ; $0254 - base of E_DIGITS
0336+  BCD5 CB 68       	BIT 5, B                     ; test - shift=$27 sym - shift=$18
0337+  BCD7 28 D3       	JR Z, K_LOOK_UP              ; to K_LOOK_UP if sym - shift
0338+  BCD9             	
0339+  BCD9 FE 38       	CP $38                       ; is character '8' ?
0340+  BCDB 30 07       	JR NC, K_8_AND_9             ; to K_8_AND_9 if greater than '7'
0341+  BCDD             	
0342+  BCDD D6 20       	SUB $20                      ; reduce to ink range $10 - $17
0343+  BCDF 04          	INC B                        ; shift ?
0344+  BCE0 C8          	RET Z                        ; return if not.
0345+  BCE1             	
0346+  BCE1 C6 08       	ADD A, $08                   ; add 8 to give paper range $18 - $1F
0347+  BCE3 C9          	RET                          ; return
0348+  BCE4             	
0349+  BCE4             	; 89
0350+  BCE4             	
0351+  BCE4             	;;;$0382
0352+  BCE4 D6 36       K_8_AND_9:  SUB $36            ; reduce to 02 and 03 bright codes
0353+  BCE6 04          	INC B                        ; test if shift pressed.
0354+  BCE7 C8          	RET Z                        ; return if not.
0355+  BCE8             	
0356+  BCE8 C6 FE       	ADD A, $FE                   ; subtract 2 setting carry
0357+  BCEA C9          	RET                          ; to give 0 and 1 flash codes.
0358+  BCEB             	
0359+  BCEB             	; graphics mode with digits
0360+  BCEB             	
0361+  BCEB             	;;;$0389
0362+  BCEB 21 B2 BE    K_GRA_DGT:  LD HL, CTL_CODES - $30; $0230 base address of CTL_CODES
0363+  BCEE             	
0364+  BCEE FE 39       	CP $39                       ; is key '9' ?
0365+  BCF0 28 BA       	JR Z, K_LOOK_UP              ; back to K_LOOK_UP - changed to $0F, GRAPHICS.
0366+  BCF2             	
0367+  BCF2 FE 30       	CP $30                       ; is key '0' ?
0368+  BCF4 28 B6       	JR Z, K_LOOK_UP              ; back to K_LOOK_UP - changed to $0C, delete.
0369+  BCF6             	
0370+  BCF6             	; for keys '0' - '7' we assign a mosaic character depending on shift.
0371+  BCF6             	
0372+  BCF6 E6 07       	AND $07                      ; convert character to number. 0 - 7.
0373+  BCF8 C6 80       	ADD A, $80                   ; add offset - they start at $80
0374+  BCFA 04          	INC B                        ; destructively test for shift
0375+  BCFB C8          	RET Z                        ; and return if not pressed.
0376+  BCFC             	
0377+  BCFC EE 0F       	XOR $0F                      ; toggle bits becomes range $88 - $8F
0378+  BCFE C9          	RET                          ; return.
0379+  BCFF             	
0380+  BCFF             	; now digits in 'KLC' mode
0381+  BCFF             	
0382+  BCFF             	;;;$039D
0383+  BCFF 04          K_KLC_DGT:  INC B              ; return with digit codes if neither
0384+  BD00 C8          	RET Z                        ; shift key pressed.
0385+  BD01             	
0386+  BD01 CB 68       	BIT 5, B                     ; test for caps shift.
0387+  BD03 21 B2 BE    	LD HL, CTL_CODES - $30       ; prepare base of table CTL_CODES.
0388+  BD06 20 A4       	JR NZ, K_LOOK_UP             ; back to K_LOOK_UP if shift pressed.
0389+  BD08             	
0390+  BD08             	; must have been symbol shift
0391+  BD08             	
0392+  BD08 D6 10       	SUB $10                      ; for ascii most will now be correct
0393+  BD0A             	; on a standard typewriter.
0394+  BD0A FE 22       	CP $22                       ; but '@' is not - see below.
0395+  BD0C 28 06       	JR Z, K_AT_CHAR              ; forward to to K_AT_CHAR if so
0396+  BD0E             	
0397+  BD0E FE 20       	CP $20                       ; '_' is the other one that fails
0398+  BD10 C0          	RET NZ                       ; return if not.
0399+  BD11             	
0400+  BD11 3E 5F       	LD A, $5F                    ; substitute ascii '_'
0401+  BD13 C9          	RET                          ; return.
0402+  BD14             	
0403+  BD14             	;;;$03B2
0404+  BD14 3E 40       K_AT_CHAR:  LD A, $40          ; substitute ascii '@'
0405+  BD16 C9          	RET                          ; return.
0406+  BD17             	
0407+  BD17             	
0408+  BD17             	; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
0409+  BD17             	; The Spectrum Input character keys. One or two are abbreviated.
0410+  BD17             	; From $00 Flash 0 to $FF COPY. The routine above has decoded all these.
0411+  BD17             	
0412+  BD17             	; | 00 Fl0| 01 Fl1| 02 Br0| 03 Br1| 04 In0| 05 In1| 06 CAP| 07 EDT|
0413+  BD17             	; | 08 LFT| 09 RIG| 0A DWN| 0B UP | 0C DEL| 0D ENT| 0E SYM| 0F GRA|
0414+  BD17             	; | 10 Ik0| 11 Ik1| 12 Ik2| 13 Ik3| 14 Ik4| 15 Ik5| 16 Ik6| 17 Ik7|
0415+  BD17             	; | 18 Pa0| 19 Pa1| 1A Pa2| 1B Pa3| 1C Pa4| 1D Pa5| 1E Pa6| 1F Pa7|
0416+  BD17             	; | 20 SP | 21 ! | 22 " | 23 # | 24 $ | 25 % | 26 & | 27 ' |
0417+  BD17             	; | 28 ( | 29 ) | 2A * | 2B + | 2C, | 2D - | 2E . | 2F / |
0418+  BD17             	; | 30 0 | 31 1 | 32 2 | 33 3 | 34 4 | 35 5 | 36 6 | 37 7 |
0419+  BD17             	; | 38 8 | 39 9 | 3A : | 3B ; | 3C < | 3D = | 3E > | 3F ? |
0420+  BD17             	; | 40 @ | 41 A | 42 B | 43 C | 44 D | 45 E | 46 F | 47 G |
0421+  BD17             	; | 48 H | 49 I | 4A J | 4B K | 4C L | 4D M | 4E N | 4F O |
0422+  BD17             	; | 50 P | 51 Q | 52 R | 53 S | 54 T | 55 U | 56 V | 57 W |
0423+  BD17             	; | 58 X | 59 Y | 5A Z | 5B [ | 5C \ | 5D ] | 5E ^ | 5F _ |
0424+  BD17             	; | 60 ukp| 61 a | 62 b | 63 c | 64 d | 65 e | 66 f | 67 g |
0425+  BD17             	; | 68 h | 69 i | 6A j | 6B k | 6C l | 6D m | 6E n | 6F o |
0426+  BD17             	; | 70 p | 71 q | 72 r | 73 s | 74 t | 75 u | 76 v | 77 w |
0427+  BD17             	; | 78 x | 79 y | 7A z | 7B { | 7C | | 7D } | 7E ~ | 7F (c)|
0428+  BD17             	; | 80 128| 81 129| 82 130| 83 131| 84 132| 85 133| 86 134| 87 135|
0429+  BD17             	; | 88 136| 89 137| 8A 138| 8B 139| 8C 140| 8D 141| 8E 142| 8F 143|
0430+  BD17             	; | 90 [A]| 91 [B]| 92 [C]| 93 [D]| 94 [E]| 95 [F]| 96 [G]| 97 [H]|
0431+  BD17             	; | 98 [I]| 99 [J]| 9A [K]| 9B [L]| 9C [M]| 9D [N]| 9E [O]| 9F [P]|
0432+  BD17             	; | A0 [Q]| A1 [R]| A2 [S]| A3 [T]| A4 [U]| A5 RND| A6 IK$| A7 PI |
0433+  BD17             	; | A8 FN | A9 PNT| AA SC$| AB ATT| AC AT | AD TAB| AE VL$| AF COD|
0434+  BD17             	; | B0 VAL| B1 LEN| B2 SIN| B3 COS| B4 TAN| B5 ASN| B6 ACS| B7 ATN|
0435+  BD17             	; | B8 LN | B9 EXP| BA INT| BB SQR| BC SGN| BD ABS| BE PEK| BF IN |
0436+  BD17             	; | C0 USR| C1 ST$| C2 CH$| C3 NOT| C4 BIN| C5 OR | C6 AND| C7 <= |
0437+  BD17             	; | C8 >= | C9 <> | CA LIN| CB THN| CC TO | CD STP| CE DEF| CF CAT|
0438+  BD17             	; | D0 FMT| D1 MOV| D2 ERS| D3 OPN| D4 CLO| D5 MRG| D6 VFY| D7 BEP|
0439+  BD17             	; | D8 CIR| D9 INK| DA PAP| DB FLA| DC BRI| DD INV| DE OVR| DF OUT|
0440+  BD17             	; | E0 LPR| E1 LLI| E2 STP| E3 REA| E4 DAT| E5 RES| E6 NEW| E7 BDR|
0441+  BD17             	; | E8 CON| E9 DIM| EA REM| EB FOR| EC GTO| ED GSB| EE INP| EF LOA|
0442+  BD17             	; | F0 LIS| F1 LET| F2 PAU| F3 NXT| F4 POK| F5 PRI| F6 PLO| F7 RUN|
0443+  BD17             	; | F8 SAV| F9 RAN| FA IF | FB CLS| FC DRW| FD CLR| FE RET| FF CPY|
0444+  BD17             	
0445+  BD17             	; Note that for simplicity, Sinclair have located all the control codes
0446+  BD17             	; below the space character.
0447+  BD17             	; ascii DEL, $7F, has been made a copyright symbol.
0448+  BD17             	; Also $60, '`', not used in Basic but used in other languages, has been
0449+  BD17             	; allocated the local currency symbol for the relevant country - 
0450+  BD17             	; ukp in most Spectrums.
0451+  BD17             	
0452+  BD17             	; - - - - - - - - - - - - - 
0453+  BD17             	; Token tables
0454+  BD17             	; - - - - - - - - - - - - - 
0455+  BD17             	; The tokenized characters 134d (RND) to 255d (COPY) are expanded using
0456+  BD17             	; this table. The last byte of a token is inverted to denote the end of
0457+  BD17             	; the word. The first is an inverted step - over byte.
0458+  BD17             	
0459+  BD17             	;;;$0095
0460+  BD17 BF          TKN_TABLE:  DEFB '?' + $80
0461+  BD18 52 4E C4    	DEFB "RN", 'D' + $80
0462+  BD1B             	DEFB "INKEY", '$' + $80
0462+  BD1B 494E4B4559A4
0463+  BD21 50 C9       	DEFB "P", 'I' + $80
0464+  BD23 46 CE       	DEFB "F", 'N' + $80
0465+  BD25 504F494ED4  	DEFB "POIN", 'T' + $80
0466+  BD2A             	DEFB "SCREEN", '$' + $80
0466+  BD2A 53435245454EA4
0467+  BD31 41 54 54 D2 	DEFB "ATT", 'R' + $80
0468+  BD35 41 D4       	DEFB "A", 'T' + $80
0469+  BD37 54 41 C2    	DEFB "TA", 'B' + $80
0470+  BD3A 56 41 4C A4 	DEFB "VAL", '$' + $80
0471+  BD3E 43 4F 44 C5 	DEFB "COD", 'E' + $80
0472+  BD42 56 41 CC    	DEFB "VA", 'L' + $80
0473+  BD45 4C 45 CE    	DEFB "LE", 'N' + $80
0474+  BD48 53 49 CE    	DEFB "SI", 'N' + $80
0475+  BD4B 43 4F D3    	DEFB "CO", 'S' + $80
0476+  BD4E 54 41 CE    	DEFB "TA", 'N' + $80
0477+  BD51 41 53 CE    	DEFB "AS", 'N' + $80
0478+  BD54 41 43 D3    	DEFB "AC", 'S' + $80
0479+  BD57 41 54 CE    	DEFB "AT", 'N' + $80
0480+  BD5A 4C CE       	DEFB "L", 'N' + $80
0481+  BD5C 45 58 D0    	DEFB "EX", 'P' + $80
0482+  BD5F 49 4E D4    	DEFB "IN", 'T' + $80
0483+  BD62 53 51 D2    	DEFB "SQ", 'R' + $80
0484+  BD65 53 47 CE    	DEFB "SG", 'N' + $80
0485+  BD68 41 42 D3    	DEFB "AB", 'S' + $80
0486+  BD6B 50 45 45 CB 	DEFB "PEE", 'K' + $80
0487+  BD6F 49 CE       	DEFB "I", 'N' + $80
0488+  BD71 55 53 D2    	DEFB "US", 'R' + $80
0489+  BD74 53 54 52 A4 	DEFB "STR", '$' + $80
0490+  BD78 43 48 52 A4 	DEFB "CHR", '$' + $80
0491+  BD7C 4E 4F D4    	DEFB "NO", 'T' + $80
0492+  BD7F 42 49 CE    	DEFB "BI", 'N' + $80
0493+  BD82             	
0494+  BD82             	; The previous 32 function - type words are printed without a leading space
0495+  BD82             	; The following have a leading space if they begin with a letter
0496+  BD82             	
0497+  BD82 4F D2       	DEFB "O", 'R' + $80
0498+  BD84 41 4E C4    	DEFB "AN", 'D' + $80
0499+  BD87 3C BD       	DEFB $3C, '=' + $80          ; <=
0500+  BD89 3E BD       	DEFB $3E, '=' + $80          ; >=
0501+  BD8B 3C BE       	DEFB $3C, $3E + $80          ; <>
0502+  BD8D 4C 49 4E C5 	DEFB "LIN", 'E' + $80
0503+  BD91 54 48 45 CE 	DEFB "THE", 'N' + $80
0504+  BD95 54 CF       	DEFB "T", 'O' + $80
0505+  BD97 53 54 45 D0 	DEFB "STE", 'P' + $80
0506+  BD9B             	DEFB "DEF F", 'N' + $80
0506+  BD9B 4445462046CE
0507+  BDA1 43 41 D4    	DEFB "CA", 'T' + $80
0508+  BDA4             	DEFB "FORMA", 'T' + $80
0508+  BDA4 464F524D41D4
0509+  BDAA 4D 4F 56 C5 	DEFB "MOV", 'E' + $80
0510+  BDAE 45524153C5  	DEFB "ERAS", 'E' + $80
0511+  BDB3             	DEFB "OPEN ", '#' + $80
0511+  BDB3 4F50454E20A3
0512+  BDB9             	DEFB "CLOSE ", '#' + $80
0512+  BDB9 434C4F534520A3
0513+  BDC0 4D455247C5  	DEFB "MERG", 'E' + $80
0514+  BDC5             	DEFB "VERIF", 'Y' + $80
0514+  BDC5 5645524946D9
0515+  BDCB 42 45 45 D0 	DEFB "BEE", 'P' + $80
0516+  BDCF             	DEFB "CIRCL", 'E' + $80
0516+  BDCF 434952434CC5
0517+  BDD5 49 4E CB    	DEFB "IN", 'K' + $80
0518+  BDD8 50415045D2  	DEFB "PAPE", 'R' + $80
0519+  BDDD 464C4153C8  	DEFB "FLAS", 'H' + $80
0520+  BDE2             	DEFB "BRIGH", 'T' + $80
0520+  BDE2 4252494748D4
0521+  BDE8             	DEFB "INVERS", 'E' + $80
0521+  BDE8 494E56455253C5
0522+  BDEF 4F 56 45 D2 	DEFB "OVE", 'R' + $80
0523+  BDF3 4F 55 D4    	DEFB "OU", 'T' + $80
0524+  BDF6             	DEFB "LPRIN", 'T' + $80
0524+  BDF6 4C5052494ED4
0525+  BDFC 4C4C4953D4  	DEFB "LLIS", 'T' + $80
0526+  BE01 53 54 4F D0 	DEFB "STO", 'P' + $80
0527+  BE05 52 45 41 C4 	DEFB "REA", 'D' + $80
0528+  BE09 44 41 54 C1 	DEFB "DAT", 'A' + $80
0529+  BE0D             	DEFB "RESTOR", 'E' + $80
0529+  BE0D 524553544F52C5
0530+  BE14 4E 45 D7    	DEFB "NE", 'W' + $80
0531+  BE17             	DEFB "BORDE", 'R' + $80
0531+  BE17 424F524445D2
0532+  BE1D             	DEFB "CONTINU", 'E' + $80
0532+  BE1D 434F4E54494E55C5
0533+  BE25 44 49 CD    	DEFB "DI", 'M' + $80
0534+  BE28 52 45 CD    	DEFB "RE", 'M' + $80
0535+  BE2B 46 4F D2    	DEFB "FO", 'R' + $80
0536+  BE2E 474F2054CF  	DEFB "GO T", 'O' + $80
0537+  BE33             	DEFB "GO SU", 'B' + $80
0537+  BE33 474F205355C2
0538+  BE39 494E5055D4  	DEFB "INPU", 'T' + $80
0539+  BE3E 4C 4F 41 C4 	DEFB "LOA", 'D' + $80
0540+  BE42 4C 49 53 D4 	DEFB "LIS", 'T' + $80
0541+  BE46 4C 45 D4    	DEFB "LE", 'T' + $80
0542+  BE49 50415553C5  	DEFB "PAUS", 'E' + $80
0543+  BE4E 4E 45 58 D4 	DEFB "NEX", 'T' + $80
0544+  BE52 50 4F 4B C5 	DEFB "POK", 'E' + $80
0545+  BE56 5052494ED4  	DEFB "PRIN", 'T' + $80
0546+  BE5B 50 4C 4F D4 	DEFB "PLO", 'T' + $80
0547+  BE5F 52 55 CE    	DEFB "RU", 'N' + $80
0548+  BE62 53 41 56 C5 	DEFB "SAV", 'E' + $80
0549+  BE66             	DEFB "RANDOMIZ", 'E' + $80
0549+  BE66 52414E444F4D495AC5
0550+  BE6F 49 C6       	DEFB "I", 'F' + $80
0551+  BE71 43 4C D3    	DEFB "CL", 'S' + $80
0552+  BE74 44 52 41 D7 	DEFB "DRA", 'W' + $80
0553+  BE78 434C4541D2  	DEFB "CLEA", 'R' + $80
0554+  BE7D             	DEFB "RETUR", 'N' + $80
0554+  BE7D 5245545552CE
0555+  BE83 43 4F 50 D9 	DEFB "COP", 'Y' + $80
0556+  BE87             	
0557+  BE87             	; - - - - - - - - - - - 
0558+  BE87             	; Key tables
0559+  BE87             	; - - - - - - - - - - - 
0560+  BE87             	; These six look - up tables are used by the keyboard reading routine
0561+  BE87             	; to decode the key values.
0562+  BE87             	
0563+  BE87             	; The first table contains the maps for the 39 keys of the standard
0564+  BE87             	; 40 - key Spectrum keyboard. The remaining key [SHIFT $27] is read directly.
0565+  BE87             	; The keys consist of the 26 upper - case alphabetic characters, the 10 digit
0566+  BE87             	; keys and the space, ENTER and symbol shift key.
0567+  BE87             	; Unshifted alphabetic keys have $20 added to the value.
0568+  BE87             	; The keywords for the main alphabetic keys are obtained by adding $A5 to
0569+  BE87             	; the values obtained from this table.
0570+  BE87             	
0571+  BE87             	;;;$0205
0572+  BE87 42          MAIN_KEYS:  DEFB $42           ; B
0573+  BE88 48          	DEFB $48                     ; H
0574+  BE89 59          	DEFB $59                     ; Y
0575+  BE8A 36          	DEFB $36                     ; 6
0576+  BE8B 35          	DEFB $35                     ; 5
0577+  BE8C 54          	DEFB $54                     ; T
0578+  BE8D 47          	DEFB $47                     ; G
0579+  BE8E 56          	DEFB $56                     ; V
0580+  BE8F 4E          	DEFB $4E                     ; N
0581+  BE90 4A          	DEFB $4A                     ; J
0582+  BE91 55          	DEFB $55                     ; U
0583+  BE92 37          	DEFB $37                     ; 7
0584+  BE93 34          	DEFB $34                     ; 4
0585+  BE94 52          	DEFB $52                     ; R
0586+  BE95 46          	DEFB $46                     ; F
0587+  BE96 43          	DEFB $43                     ; C
0588+  BE97 4D          	DEFB $4D                     ; M
0589+  BE98 4B          	DEFB $4B                     ; K
0590+  BE99 49          	DEFB $49                     ; I
0591+  BE9A 38          	DEFB $38                     ; 8
0592+  BE9B 33          	DEFB $33                     ; 3
0593+  BE9C 45          	DEFB $45                     ; E
0594+  BE9D 44          	DEFB $44                     ; D
0595+  BE9E 58          	DEFB $58                     ; X
0596+  BE9F 0E          	DEFB $0E                     ; SYMBOL SHIFT
0597+  BEA0 4C          	DEFB $4C                     ; L
0598+  BEA1 4F          	DEFB $4F                     ; O
0599+  BEA2 39          	DEFB $39                     ; 9
0600+  BEA3 32          	DEFB $32                     ; 2
0601+  BEA4 57          	DEFB $57                     ; W
0602+  BEA5 53          	DEFB $53                     ; S
0603+  BEA6 5A          	DEFB $5A                     ; Z
0604+  BEA7 20          	DEFB $20                     ; SPACE
0605+  BEA8 0D          	DEFB $0D                     ; ENTER
0606+  BEA9 50          	DEFB $50                     ; P
0607+  BEAA 30          	DEFB $30                     ; 0
0608+  BEAB 31          	DEFB $31                     ; 1
0609+  BEAC 51          	DEFB $51                     ; Q
0610+  BEAD 41          	DEFB $41                     ; A
0611+  BEAE             	
0612+  BEAE             	;;;$022C
0613+  BEAE             	; The 26 unshifted extended mode keys for the alphabetic characters.
0614+  BEAE             	; The green keywords on the original keyboard.
0615+  BEAE E3          E_UNSHIFT:  DEFB $E3           ; READ
0616+  BEAF C4          	DEFB $C4                     ; BIN
0617+  BEB0 E0          	DEFB $E0                     ; LPRINT
0618+  BEB1 E4          	DEFB $E4                     ; DATA
0619+  BEB2 B4          	DEFB $B4                     ; TAN
0620+  BEB3 BC          	DEFB $BC                     ; SGN
0621+  BEB4 BD          	DEFB $BD                     ; ABS
0622+  BEB5 BB          	DEFB $BB                     ; SQR
0623+  BEB6 AF          	DEFB $AF                     ; CODE
0624+  BEB7 B0          	DEFB $B0                     ; VAL
0625+  BEB8 B1          	DEFB $B1                     ; LEN
0626+  BEB9 C0          	DEFB $C0                     ; USR
0627+  BEBA A7          	DEFB $A7                     ; PI
0628+  BEBB A6          	DEFB $A6                     ; INKEY$
0629+  BEBC BE          	DEFB $BE                     ; PEEK
0630+  BEBD AD          	DEFB $AD                     ; TAB
0631+  BEBE B2          	DEFB $B2                     ; SIN
0632+  BEBF BA          	DEFB $BA                     ; INT
0633+  BEC0 E5          	DEFB $E5                     ; RESTORE
0634+  BEC1 A5          	DEFB $A5                     ; RND
0635+  BEC2 C2          	DEFB $C2                     ; CHR$
0636+  BEC3 E1          	DEFB $E1                     ; LLIST
0637+  BEC4 B3          	DEFB $B3                     ; COS
0638+  BEC5 B9          	DEFB $B9                     ; EXP
0639+  BEC6 C1          	DEFB $C1                     ; STR$
0640+  BEC7 B8          	DEFB $B8                     ; LN
0641+  BEC8             	
0642+  BEC8             	;;;$0246
0643+  BEC8             	; The 26 shifted extended mode keys for the alphabetic characters.
0644+  BEC8             	; The red keywords below keys on the original keyboard.
0645+  BEC8 7E          EXT_SHIFT:  DEFB $7E           ; ~
0646+  BEC9 DC          	DEFB $DC                     ; BRIGHT
0647+  BECA DA          	DEFB $DA                     ; PAPER
0648+  BECB 5C          	DEFB $5C                     ; \ ;
0649+  BECC B7          	DEFB $B7                     ; ATN
0650+  BECD 7B          	DEFB $7B                     ; {
0651+  BECE 7D          	DEFB $7D                     ; }
0652+  BECF D8          	DEFB $D8                     ; CIRCLE
0653+  BED0 BF          	DEFB $BF                     ; IN
0654+  BED1 AE          	DEFB $AE                     ; VAL$
0655+  BED2 AA          	DEFB $AA                     ; SCREEN$
0656+  BED3 AB          	DEFB $AB                     ; ATTR
0657+  BED4 DD          	DEFB $DD                     ; INVERSE
0658+  BED5 DE          	DEFB $DE                     ; OVER
0659+  BED6 DF          	DEFB $DF                     ; OUT
0660+  BED7 7F          	DEFB $7F                     ; (Copyright character)
0661+  BED8 B5          	DEFB $B5                     ; ASN
0662+  BED9 D6          	DEFB $D6                     ; VERIFY
0663+  BEDA 7C          	DEFB $7C                     ; |
0664+  BEDB D5          	DEFB $D5                     ; MERGE
0665+  BEDC 5D          	DEFB $5D                     ; ]
0666+  BEDD DB          	DEFB $DB                     ; FLASH
0667+  BEDE B6          	DEFB $B6                     ; ACS
0668+  BEDF D9          	DEFB $D9                     ; INK
0669+  BEE0 5B          	DEFB $5B                     ; [
0670+  BEE1 D7          	DEFB $D7                     ; BEEP
0671+  BEE2             	
0672+  BEE2             	;;;$0260
0673+  BEE2             	; The ten control codes assigned to the top line of digits when the shift
0674+  BEE2             	; key is pressed.
0675+  BEE2 0C          CTL_CODES:  DEFB $0C           ; DELETE
0676+  BEE3 07          	DEFB $07                     ; EDIT
0677+  BEE4 06          	DEFB $06                     ; CAPS LOCK
0678+  BEE5 04          	DEFB $04                     ; TRUE VIDEO
0679+  BEE6 05          	DEFB $05                     ; INVERSE VIDEO
0680+  BEE7 08          	DEFB $08                     ; CURSOR LEFT
0681+  BEE8 0A          	DEFB $0A                     ; CURSOR DOWN
0682+  BEE9 0B          	DEFB $0B                     ; CURSOR UP
0683+  BEEA 09          	DEFB $09                     ; CURSOR RIGHT
0684+  BEEB 0F          	DEFB $0F                     ; GRAPHICS
0685+  BEEC             	
0686+  BEEC             	;;;$026A
0687+  BEEC             	; The 26 red symbols assigned to the alphabetic characters of the keyboard.
0688+  BEEC             	; The ten single - character digit symbols are converted without the aid of
0689+  BEEC             	; a table using subtraction and minor manipulation.
0690+  BEEC E2          SYM_CODES:  DEFB $E2           ; STOP
0691+  BEED 2A          	DEFB $2A                     ; * 
0692+  BEEE 3F          	DEFB $3F                     ; ?
0693+  BEEF CD          	DEFB $CD                     ; STEP
0694+  BEF0 C8          	DEFB $C8                     ; >=
0695+  BEF1 CC          	DEFB $CC                     ; TO
0696+  BEF2 CB          	DEFB $CB                     ; THEN
0697+  BEF3 5E          	DEFB $5E                     ; ^
0698+  BEF4 AC          	DEFB $AC                     ; AT
0699+  BEF5 2D          	DEFB $2D                     ; - 
0700+  BEF6 2B          	DEFB $2B                     ; + 
0701+  BEF7 3D          	DEFB $3D                     ; =
0702+  BEF8 2E          	DEFB $2E                     ; .
0703+  BEF9 2C          	DEFB $2C                     ;, 
0704+  BEFA 3B          	DEFB $3B                     ; ;
0705+  BEFB 22          	DEFB $22                     ; "
0706+  BEFC C7          	DEFB $C7                     ; <=
0707+  BEFD 3C          	DEFB $3C                     ; <
0708+  BEFE C3          	DEFB $C3                     ; NOT
0709+  BEFF 3E          	DEFB $3E                     ; >
0710+  BF00 C5          	DEFB $C5                     ; OR
0711+  BF01 2F          	DEFB $2F                     ; / 
0712+  BF02 C9          	DEFB $C9                     ; <>
0713+  BF03 60          	DEFB $60                     ; pound
0714+  BF04 C6          	DEFB $C6                     ; AND
0715+  BF05 3A          	DEFB $3A                     ; :
0716+  BF06             	
0717+  BF06             	;;;$0284
0718+  BF06             	; The ten keywords assigned to the digits in extended mode.
0719+  BF06             	; The remaining red keywords below the keys.
0720+  BF06 D0          E_DIGITS:  DEFB $D0            ; FORMAT
0721+  BF07 CE          	DEFB $CE                     ; DEF FN
0722+  BF08 A8          	DEFB $A8                     ; FN
0723+  BF09 CA          	DEFB $CA                     ; LINE
0724+  BF0A D3          	DEFB $D3                     ; OPEN#
0725+  BF0B D4          	DEFB $D4                     ; CLOSE#
0726+  BF0C D1          	DEFB $D1                     ; MOVE
0727+  BF0D D2          	DEFB $D2                     ; ERASE
0728+  BF0E A9          	DEFB $A9                     ; POINT
0729+  BF0F CF          	DEFB $CF                     ; CAT
0730+  BF10             	
0731+  BF10             	endmodule
0732+  BF10             
0930   BF10                                                         include screen.asm
0001+  BF10             	module SCREEN
0002+  BF10             	
0003+  BF10 00          POS_Y:  db 0
0004+  BF11 00          POS_X:  db 0
0005+  BF12 00          WRAP:  db 0
0006+  BF13             	
0007+  BF13             	; clear screen with border
0008+  BF13             	; A - color
0009+  BF13 21 00 40    CLEAR:  LD HL, 16384           ; Start address of screen bitmap
0010+  BF16 11 01 40    	LD DE, 16385                 ; Address + 1
0011+  BF19 01 00 18    	LD BC, 6144                  ; Length of bitmap memory to clear
0012+  BF1C 36 00       	LD (HL), 0                   ; Set the first byte to 0
0013+  BF1E ED B0       	LDIR                         ; Copy this byte to the second, and so on
0014+  BF20 01 FF 02    	LD BC, 767                   ; Length of attribute memory, less one to clear
0015+  BF23 77          	LD (HL), A                   ; Set the first byte to A
0016+  BF24 ED B0       	LDIR                         ; Copy this byte to the second, and so on
0017+  BF26 1F          	RRA
0018+  BF27 1F          	RRA
0019+  BF28 1F          	RRA
0020+  BF29 D3 FE       	OUT (254), A
0021+  BF2B 21 10 BF    	LD HL, POS_Y
0022+  BF2E 36 00       	ld (HL), 0
0023+  BF30 23          	INC HL
0024+  BF31 36 00       	ld (HL), 0
0025+  BF33 C9          	RET
0026+  BF34             	
0027+  BF34             PRINT_TEXT_WRAP: 
0028+  BF34 AF          	XOR A
0029+  BF35 32 12 BF    	LD (WRAP),A
0030+  BF38 C5          	PUSH BC
0031+  BF39             PRINT_TEXT_WRAP_LOOP: 
0032+  BF39 E5          	PUSH HL
0033+  BF3A 06 00       	LD B, 0
0034+  BF3C 7E          SEARCH_13_LOOP:  LD A, (HL)
0035+  BF3D FE 0D       	CP '\r'
0036+  BF3F 28 0B       	JR Z, DELIM_CHAR_FOUND
0037+  BF41 FE 20       	CP ' '
0038+  BF43 28 07       	JR Z, DELIM_CHAR_FOUND
0039+  BF45 B7          	OR A
0040+  BF46 28 04       	JR Z, DELIM_CHAR_FOUND
0041+  BF48 23          	INC HL
0042+  BF49 04          	INC B
0043+  BF4A 18 F0       	JR SEARCH_13_LOOP
0044+  BF4C             DELIM_CHAR_FOUND: 
0045+  BF4C F5          	PUSH AF
0046+  BF4D 3A 11 BF    	LD A, (POS_X)
0047+  BF50 80          	ADD B
0048+  BF51 FE 21       	CP 33                        ; screen width + 1
0049+  BF53 38 0A       	JR C, PRINT_WORD_WRAP
0050+  BF55 3E 0D       	LD A, '\r'
0051+  BF57 CD E7 BF    	CALL PRINT_CHAR
0052+  BF5A 3E 01       	LD A,1
0053+  BF5C 32 12 BF    	LD (WRAP),A
0054+  BF5F F1          PRINT_WORD_WRAP:  POP AF
0055+  BF60 E1          	POP HL
0056+  BF61 4F          	LD C, A
0057+  BF62             PRINT_WORD_LOOP:  
0058+  BF62 7E          	LD A, (HL)
0059+  BF63 B9          	CP C
0060+  BF64 28 06       	JR Z, PRINT_WORD_END
0061+  BF66 CD E7 BF    	CALL PRINT_CHAR
0062+  BF69 23          	INC HL
0063+  BF6A 18 F6       	JR PRINT_WORD_LOOP
0064+  BF6C             PRINT_WORD_END: 
0065+  BF6C B7          	OR A
0066+  BF6D 28 1D       	JR Z, PRINT_ZERO_EXIT
0067+  BF6F E5          	PUSH HL
0068+  BF70 F5          	PUSH AF
0069+  BF71 3A 12 BF    	LD A,(WRAP)
0070+  BF74 B7          	OR A
0071+  BF75 28 0C       	JR Z,WRAP_NOT_COLUMN
0072+  BF77 3A 11 BF    	LD A,(POS_X)
0073+  BF7A B7          	OR A
0074+  BF7B 20 06       	JR NZ,WRAP_NOT_COLUMN
0075+  BF7D F1          	POP AF
0076+  BF7E FE 20       	CP 32
0077+  BF80 28 05       	JR Z, WRAP_SKIP_SPACE
0078+  BF82 F5          	PUSH AF
0079+  BF83 F1          WRAP_NOT_COLUMN: 	POP AF
0080+  BF84 CD E7 BF    	CALL PRINT_CHAR
0081+  BF87 E1          WRAP_SKIP_SPACE: 	POP HL
0082+  BF88 23          	INC HL
0083+  BF89 18 AE       	JR PRINT_TEXT_WRAP_LOOP
0084+  BF8B             END_CHAR_FOUND: 
0085+  BF8B E1          	POP HL
0086+  BF8C             PRINT_ZERO_EXIT: 	
0087+  BF8C C1          	POP BC
0088+  BF8D C9          	RET
0089+  BF8E             	
0090+  BF8E             	
0091+  BF8E 06 00       LENGTH255:  LD B, 0
0092+  BF90 E5          	PUSH HL
0093+  BF91 7E          LENGTH255_GET:  LD A, (HL)
0094+  BF92 B7          	OR A
0095+  BF93 28 09       	JR Z, LENGTH255_RET
0096+  BF95 23          	INC HL
0097+  BF96 04          	INC B
0098+  BF97 3E FF       	LD A, 255
0099+  BF99 B8          	CP B
0100+  BF9A 28 02       	JR Z, LENGTH255_RET
0101+  BF9C 18 F3       	JR LENGTH255_GET
0102+  BF9E E1          LENGTH255_RET:  POP HL
0103+  BF9F C9          	RET
0104+  BFA0             	
0105+  BFA0 01 00 00    LENGTH:  LD BC, 0
0106+  BFA3 E5          	PUSH HL
0107+  BFA4 7E          LENGTH_GET:  LD A, (HL)
0108+  BFA5 B7          	OR A
0109+  BFA6 28 04       	JR Z, LENGTH_RET
0110+  BFA8 23          	INC HL
0111+  BFA9 03          	INC BC
0112+  BFAA 18 F8       	JR LENGTH_GET
0113+  BFAC E1          LENGTH_RET:  POP HL
0114+  BFAD C9          	RET
0115+  BFAE             	
0116+  BFAE             	;==================================
0117+  BFAE             	; - =Процедура печати стрингов= - 
0118+  BFAE             	; HL - адрес строки текста
0119+  BFAE             	;0 - конец текста
0120+  BFAE             	
0121+  BFAE 7E          PRINT_TEXT:  LD A, (HL)        ;взять код символа
0122+  BFAF A7          	AND A                        ;проверить на ноль
0123+  BFB0 C8          	RET Z                        ;совпало - выйти
0124+  BFB1 E5          	PUSH HL
0125+  BFB2 CD E7 BF    	CALL PRINT_CHAR              ;нужная Вам процедура печати
0126+  BFB5 E1          	POP HL
0127+  BFB6 23          	INC HL
0128+  BFB7 18 F5       	JR PRINT_TEXT
0129+  BFB9             	
0130+  BFB9             	;==================================
0131+  BFB9             	; - =Процедура печати стрингов= - 
0132+  BFB9             	;вх: DE - координаты
0133+  BFB9             	; HL - адрес строки текста
0134+  BFB9             	;поддерживаются токены:
0135+  BFB9             	;0 - конец текста
0136+  BFB9             	;17, X, Y - установка координат печати
0137+  BFB9             	;==================================
0138+  BFB9 7E          PRINT_TEXT_AT:  LD A, (HL)     ;взять код символа
0139+  BFBA A7          	AND A                        ;проверить на ноль
0140+  BFBB C8          	RET Z                        ;совпало - выйти
0141+  BFBC FE 11       	CP 17                        ;проверка на токен
0142+  BFBE C2 C9 BF    	JP NZ, Pr_Cont
0143+  BFC1 23          	INC HL                       ;установка новых координат
0144+  BFC2 5E          	LD E, (HL)
0145+  BFC3 23          	INC HL
0146+  BFC4 56          	LD D, (HL)
0147+  BFC5 23          	INC HL
0148+  BFC6 C3 B9 BF    	JP PRINT_TEXT_AT
0149+  BFC9 E5          Pr_Cont:  PUSH HL
0150+  BFCA D5          	PUSH DE
0151+  BFCB CD E7 BF    	CALL PRINT_CHAR              ;нужная Вам процедура печати
0152+  BFCE D1          	POP DE
0153+  BFCF E1          	POP HL
0154+  BFD0 1C          	INC E
0155+  BFD1 23          	INC HL
0156+  BFD2 C3 B9 BF    	JP PRINT_TEXT_AT
0157+  BFD5             	
0158+  BFD5             	; print one digit
0159+  BFD5 F5          PRINT_DIGIT:  PUSH AF
0160+  BFD6 E6 0F       	AND 0xf
0161+  BFD8 C6 30       	ADD A, 0x30
0162+  BFDA CD E7 BF    	CALL PRINT_CHAR
0163+  BFDD F1          	POP AF
0164+  BFDE C9          	RET
0165+  BFDF             	
0166+  BFDF F5          PRINT_CR:  PUSH AF
0167+  BFE0 3E 0D       	LD A, '\r'
0168+  BFE2 CD E7 BF    	CALL PRINT_CHAR
0169+  BFE5 F1          	POP AF
0170+  BFE6 C9          	RET
0171+  BFE7             	;=====печать символа 8х8 (fast) =====
0172+  BFE7             	;A - код символа
0173+  BFE7             PRINT_CHAR: 
0174+  BFE7 E5          	PUSH HL
0175+  BFE8 D5          	PUSH DE
0176+  BFE9 C5          	PUSH BC
0177+  BFEA F5          	PUSH AF
0178+  BFEB FE 0D       	CP '\r'
0179+  BFED 28 06       	JR Z, PRINT_13
0180+  BFEF FE 08       	CP 8
0181+  BFF1 28 07       	JR Z, PRINT_8
0182+  BFF3 18 18       	JR PRINT_SYM
0183+  BFF5 21 11 BF    PRINT_13:  LD HL, POS_X
0184+  BFF8 18 28       	JR LINE_END
0185+  BFFA 21 11 BF    PRINT_8:  LD HL, POS_X
0186+  BFFD 7E          	LD A, (HL)
0187+  BFFE 3D          	DEC A
0188+  BFFF 77          	LD (HL), A
0189+  C000 FE FF       	CP 255
0190+  C002 20 32       	JR NZ, PRINT_RET
0191+  C004 36 00       	LD (HL), 0
0192+  C006 23          	INC HL
0193+  C007 7E          	LD A, (HL)
0194+  C008 3D          	DEC A
0195+  C009 FE FF       	CP 255
0196+  C00B 18 29       	JR PRINT_RET
0197+  C00D 21 10 BF    PRINT_SYM:  LD HL, POS_Y
0198+  C010 56          	LD D, (HL)
0199+  C011 23          	INC HL
0200+  C012 5E          	LD E, (HL)
0201+  C013 CD 3B C0    	CALL PRINT_CHAR_ADDR
0202+  C016 21 11 BF    	LD HL, POS_X
0203+  C019 7E          	LD A, (HL)
0204+  C01A 3C          	INC A
0205+  C01B FE 20       	CP ' '
0206+  C01D 30 03       	JR NC, LINE_END
0207+  C01F 77          	LD (HL), A
0208+  C020 18 14       	JR PRINT_RET
0209+  C022             LINE_END: 
0210+  C022 AF          	XOR A
0211+  C023 77          	LD (HL), A
0212+  C024 2B          	DEC HL
0213+  C025 7E          	LD A, (HL)
0214+  C026 3C          	INC A
0215+  C027 FE 18       	CP 24
0216+  C029 30 03       	JR NC, SCREEN_END
0217+  C02B 77          	LD (HL), A
0218+  C02C 18 08       	JR PRINT_RET
0219+  C02E             SCREEN_END: 
0220+  C02E 3D          	DEC A
0221+  C02F 77          	LD (HL), A
0222+  C030 CD 72 C0    	CALL SCROLL_ALL
0223+  C033 CD 96 C1    	CALL CL_LINE
0224+  C036 F1          PRINT_RET:  POP AF
0225+  C037 C1          	POP BC
0226+  C038 D1          	POP DE
0227+  C039 E1          	POP HL
0228+  C03A C9          	RET
0229+  C03B             	
0230+  C03B             	;=====печать символа 8х8 (fast) =====
0231+  C03B             	;in: DE - координаты, A - код символа
0232+  C03B             PRINT_CHAR_ADDR: 
0233+  C03B 6F          	LD L, A                      ;в HL - код симво - 
0234+  C03C 26 00       	LD H, 0                      ;ла, который мы
0235+  C03E 29          	ADD HL, HL
0236+  C03F 29          	ADD HL, HL
0237+  C040 29          	ADD HL, HL
0238+  C041 01 00 3C    	LD BC, 0x3C00                ;складываем с
0239+  C044 09          	ADD HL, BC                   ;адресом начала фонта
0240+  C045 7A          	LD A, D                      ;знакомая нам уже
0241+  C046 E6 07       	AND 7                        ;процедурка ;)
0242+  C048 0F          	RRCA
0243+  C049 0F          	RRCA
0244+  C04A 0F          	RRCA
0245+  C04B B3          	OR E
0246+  C04C 5F          	LD E, A
0247+  C04D 7A          	LD A, D
0248+  C04E E6 18       	AND 24
0249+  C050 F6 40       	OR 64
0250+  C052 57          	LD D, A
0251+  C053             	DUP 7                        ;директивы ALASM!!!
0252+  C053 7E          >	LD A, (HL)                   ;берем байт из фонта
0253+  C054 12          >	LD (DE), A                   ;и кладем в экран
0254+  C055 23          >	INC HL                       ;приращение fnt adr
0255+  C056 14          >	INC D                        ;приращение scr adr
0252+  C057 7E          >	LD A, (HL)                   ;берем байт из фонта
0253+  C058 12          >	LD (DE), A                   ;и кладем в экран
0254+  C059 23          >	INC HL                       ;приращение fnt adr
0255+  C05A 14          >	INC D                        ;приращение scr adr
0252+  C05B 7E          >	LD A, (HL)                   ;берем байт из фонта
0253+  C05C 12          >	LD (DE), A                   ;и кладем в экран
0254+  C05D 23          >	INC HL                       ;приращение fnt adr
0255+  C05E 14          >	INC D                        ;приращение scr adr
0252+  C05F 7E          >	LD A, (HL)                   ;берем байт из фонта
0253+  C060 12          >	LD (DE), A                   ;и кладем в экран
0254+  C061 23          >	INC HL                       ;приращение fnt adr
0255+  C062 14          >	INC D                        ;приращение scr adr
0252+  C063 7E          >	LD A, (HL)                   ;берем байт из фонта
0253+  C064 12          >	LD (DE), A                   ;и кладем в экран
0254+  C065 23          >	INC HL                       ;приращение fnt adr
0255+  C066 14          >	INC D                        ;приращение scr adr
0252+  C067 7E          >	LD A, (HL)                   ;берем байт из фонта
0253+  C068 12          >	LD (DE), A                   ;и кладем в экран
0254+  C069 23          >	INC HL                       ;приращение fnt adr
0255+  C06A 14          >	INC D                        ;приращение scr adr
0252+  C06B 7E          >	LD A, (HL)                   ;берем байт из фонта
0253+  C06C 12          >	LD (DE), A                   ;и кладем в экран
0254+  C06D 23          >	INC HL                       ;приращение fnt adr
0255+  C06E 14          >	INC D                        ;приращение scr adr
0257+  C06F 7E          	LD A, (HL)
0258+  C070 12          	LD (DE), A
0259+  C071 C9          	RET
0260+  C072             	
0261+  C072             	;(c) cooper / RSM / P7S ;возвращаемся...
0262+  C072             	
0263+  C072 11 00 40    SCROLL_ALL:  LD DE, #4000      ;откуда
0264+  C075 21 20 40    	LD HL, #4020                 ;куда
0265+  C078 06 17       	LD B, #17                    ;кол - во строк
0266+  C07A             	
0267+  C07A C5          MAIN:  PUSH BC
0268+  C07B CD B2 C0    	CALL SCROLL                  ;вызов проц.сдвига
0269+  C07E CD 9C C0    	CALL LL693E                  ;служебные процедуры (на стр. вверх)
0270+  C081 CD A7 C0    	CALL LL6949                  ;служебные процедуры (на стр. вниз)
0271+  C084 C1          	POP BC
0272+  C085 10 F3       	DJNZ MAIN
0273+  C087 C9          	RET
0274+  C088             	
0275+  C088             	;а это собственно и есть служебные процедуры
0276+  C088             	;где какая, разберетесь сами, ok?
0277+  C088 7D          LL692A:  LD A, L
0278+  C089 D6 20       	SUB #20
0279+  C08B 6F          	LD L, A
0280+  C08C D0          	RET NC
0281+  C08D 7C          	LD A, H
0282+  C08E D6 08       	SUB #08
0283+  C090 67          	LD H, A
0284+  C091 C9          	RET
0285+  C092             	
0286+  C092 7B          LL6934:  LD A, E
0287+  C093 D6 20       	SUB #20
0288+  C095 5F          	LD E, A
0289+  C096 D0          	RET NC
0290+  C097 7A          	LD A, D
0291+  C098 D6 08       	SUB #08
0292+  C09A 57          	LD D, A
0293+  C09B C9          	RET
0294+  C09C             	
0295+  C09C 24          LL693E:  INC H
0296+  C09D 7D          	LD A, L
0297+  C09E D6 E0       	SUB #E0
0298+  C0A0 6F          	LD L, A
0299+  C0A1 D0          	RET NC
0300+  C0A2 7C          	LD A, H
0301+  C0A3 D6 08       	SUB #08
0302+  C0A5 67          	LD H, A
0303+  C0A6 C9          	RET
0304+  C0A7             	
0305+  C0A7 14          LL6949:  INC D
0306+  C0A8 7B          	LD A, E
0307+  C0A9 D6 E0       	SUB #E0
0308+  C0AB 5F          	LD E, A
0309+  C0AC D0          	RET NC
0310+  C0AD 7A          	LD A, D
0311+  C0AE D6 08       	SUB #08
0312+  C0B0 57          	LD D, A
0313+  C0B1 C9          	RET
0314+  C0B2             	
0315+  C0B2             	;непосредственный scroll screen
0316+  C0B2 E5          SCROLL:  PUSH HL
0317+  C0B3 D5          	PUSH DE
0318+  C0B4 7A          	LD A, D
0319+  C0B5 0F          	RRCA
0320+  C0B6 0F          	RRCA
0321+  C0B7 0F          	RRCA
0322+  C0B8 E6 03       	AND #03
0323+  C0BA F6 58       	OR #58
0324+  C0BC 57          	LD D, A
0325+  C0BD 7C          	LD A, H
0326+  C0BE 0F          	RRCA
0327+  C0BF 0F          	RRCA
0328+  C0C0 0F          	RRCA
0329+  C0C1 E6 03       	AND #03
0330+  C0C3 F6 58       	OR #58
0331+  C0C5 67          	LD H, A
0332+  C0C6             	DUP 32
0333+  C0C6 ED A0       >	LDI
0333+  C0C8 ED A0       >	LDI
0333+  C0CA ED A0       >	LDI
0333+  C0CC ED A0       >	LDI
0333+  C0CE ED A0       >	LDI
0333+  C0D0 ED A0       >	LDI
0333+  C0D2 ED A0       >	LDI
0333+  C0D4 ED A0       >	LDI
0333+  C0D6 ED A0       >	LDI
0333+  C0D8 ED A0       >	LDI
0333+  C0DA ED A0       >	LDI
0333+  C0DC ED A0       >	LDI
0333+  C0DE ED A0       >	LDI
0333+  C0E0 ED A0       >	LDI
0333+  C0E2 ED A0       >	LDI
0333+  C0E4 ED A0       >	LDI
0333+  C0E6 ED A0       >	LDI
0333+  C0E8 ED A0       >	LDI
0333+  C0EA ED A0       >	LDI
0333+  C0EC ED A0       >	LDI
0333+  C0EE ED A0       >	LDI
0333+  C0F0 ED A0       >	LDI
0333+  C0F2 ED A0       >	LDI
0333+  C0F4 ED A0       >	LDI
0333+  C0F6 ED A0       >	LDI
0333+  C0F8 ED A0       >	LDI
0333+  C0FA ED A0       >	LDI
0333+  C0FC ED A0       >	LDI
0333+  C0FE ED A0       >	LDI
0333+  C100 ED A0       >	LDI
0333+  C102 ED A0       >	LDI
0333+  C104 ED A0       >	LDI
0335+  C106 D1          	POP DE
0336+  C107 E1          	POP HL
0337+  C108 01 F8 00    	LD BC, #00F8
0338+  C10B C3 10 C1    	JP LOOP2
0339+  C10E 24          LOOP1:  INC H
0340+  C10F 14          	INC D
0341+  C110             LOOP2:  DUP 31
0342+  C110 ED A0       >	LDI
0342+  C112 ED A0       >	LDI
0342+  C114 ED A0       >	LDI
0342+  C116 ED A0       >	LDI
0342+  C118 ED A0       >	LDI
0342+  C11A ED A0       >	LDI
0342+  C11C ED A0       >	LDI
0342+  C11E ED A0       >	LDI
0342+  C120 ED A0       >	LDI
0342+  C122 ED A0       >	LDI
0342+  C124 ED A0       >	LDI
0342+  C126 ED A0       >	LDI
0342+  C128 ED A0       >	LDI
0342+  C12A ED A0       >	LDI
0342+  C12C ED A0       >	LDI
0342+  C12E ED A0       >	LDI
0342+  C130 ED A0       >	LDI
0342+  C132 ED A0       >	LDI
0342+  C134 ED A0       >	LDI
0342+  C136 ED A0       >	LDI
0342+  C138 ED A0       >	LDI
0342+  C13A ED A0       >	LDI
0342+  C13C ED A0       >	LDI
0342+  C13E ED A0       >	LDI
0342+  C140 ED A0       >	LDI
0342+  C142 ED A0       >	LDI
0342+  C144 ED A0       >	LDI
0342+  C146 ED A0       >	LDI
0342+  C148 ED A0       >	LDI
0342+  C14A ED A0       >	LDI
0342+  C14C ED A0       >	LDI
0344+  C14E 7E          	LD A, (HL)
0345+  C14F 12          	LD (DE), A
0346+  C150 24          	INC H
0347+  C151 14          	INC D
0348+  C152             	DUP 31
0349+  C152 ED A8       >	LDD
0349+  C154 ED A8       >	LDD
0349+  C156 ED A8       >	LDD
0349+  C158 ED A8       >	LDD
0349+  C15A ED A8       >	LDD
0349+  C15C ED A8       >	LDD
0349+  C15E ED A8       >	LDD
0349+  C160 ED A8       >	LDD
0349+  C162 ED A8       >	LDD
0349+  C164 ED A8       >	LDD
0349+  C166 ED A8       >	LDD
0349+  C168 ED A8       >	LDD
0349+  C16A ED A8       >	LDD
0349+  C16C ED A8       >	LDD
0349+  C16E ED A8       >	LDD
0349+  C170 ED A8       >	LDD
0349+  C172 ED A8       >	LDD
0349+  C174 ED A8       >	LDD
0349+  C176 ED A8       >	LDD
0349+  C178 ED A8       >	LDD
0349+  C17A ED A8       >	LDD
0349+  C17C ED A8       >	LDD
0349+  C17E ED A8       >	LDD
0349+  C180 ED A8       >	LDD
0349+  C182 ED A8       >	LDD
0349+  C184 ED A8       >	LDD
0349+  C186 ED A8       >	LDD
0349+  C188 ED A8       >	LDD
0349+  C18A ED A8       >	LDD
0349+  C18C ED A8       >	LDD
0349+  C18E ED A8       >	LDD
0351+  C190 7E          	LD A, (HL)
0352+  C191 12          	LD (DE), A
0353+  C192 EA 0E C1    	JP PE, LOOP1
0354+  C195 C9          	RET
0355+  C196             	
0356+  C196             CL_LINE: 
0357+  C196 21 E0 50    	LD HL, 16384 + 2048 * 2 + 32 * 7 ; Start address of screen bitmap
0358+  C199 54 5D       	LD DE, HL                    ; Address + 1
0359+  C19B 13          	INC DE
0360+  C19C 06 08       	LD B, 8
0361+  C19E C5          CL_LINE_LOOP:  PUSH BC
0362+  C19F 01 1F 00    	LD BC, 31                    ; Length of bitmap memory to clear
0363+  C1A2 36 00       	LD (HL), 0                   ; Set the first byte to 0
0364+  C1A4 ED B0       	LDIR
0365+  C1A6 01 E1 00    	LD BC, 256 + 1 - 32
0366+  C1A9 09          	ADD HL, BC
0367+  C1AA 54 5D       	LD DE, HL                    ; Address + 1
0368+  C1AC 13          	INC DE
0369+  C1AD C1          	POP BC
0370+  C1AE 10 EE       	DJNZ CL_LINE_LOOP
0371+  C1B0 C9          	RET
0372+  C1B1             	
0373+  C1B1             	endmodule
0374+  C1B1             
0931   C1B1                                                         include output.asm
0001+  C1B1             	module OUTPUT
0002+  C1B1             
0003+  C1B1             ;
0004+  C1B1             ; Title:	ZX Spectrum Standard Output Routines
0005+  C1B1             ; Author:	Dean Belfield
0006+  C1B1             ; Created:	29/07/2011
0007+  C1B1             ; Last Updated:	08/02/2020
0008+  C1B1             ;
0009+  C1B1             ; Requires:
0010+  C1B1             ;
0011+  C1B1             ; Modinfo:
0012+  C1B1             ;
0013+  C1B1             ; 02/07/2012:	Added Pixel_Address_Down and Pixel_Address_Up routines
0014+  C1B1             ; 04/07/2012:	Moved Clear_Screen to Screen_Buffer
0015+  C1B1             ; 08/02/2010:	Added Print_BC
0016+  C1B1             ;		Moved Clear_Screen into here (originally in screen_buffer.z80)
0017+  C1B1             ;		All output routines refactored to use HL for screen address
0018+  C1B1             ;		Added Fill_Attr routine
0019+  C1B1             ;
0020+  C1B1             
0021+  C1B1             Set_Border: 
0022+  C1B1 D3 FE            			out (254),a
0023+  C1B3 C9          				ret
0024+  C1B4             
0025+  C1B4             ; Simple clear-screen routine
0026+  C1B4             ; Uses LDIR to block clear memory
0027+  C1B4             ; A:  Colour to clear attribute block of memory with
0028+  C1B4             ;
0029+  C1B4 21 00 40    Clear_Screen: 		LD HL,16384			; Start address of screen bitmap
0030+  C1B7 11 01 40    			LD DE,16385			; Address + 1
0031+  C1BA 01 00 18    			LD BC,6144			; Length of bitmap memory to clear
0032+  C1BD 36 00       			LD (HL),0			; Set the first byte to 0
0033+  C1BF ED B0       			LDIR				; Copy this byte to the second, and so on
0034+  C1C1 01 FF 02    			LD BC,767			; Length of attribute memory, less one to clear
0035+  C1C4 77          			LD (HL),A			; Set the first byte to A
0036+  C1C5 ED B0       			LDIR				; Copy this byte to the second, and so on
0037+  C1C7 C9          			RET
0038+  C1C8             
0039+  C1C8             ; Fill a box of the screen with a solid colour
0040+  C1C8             ;  A: The colour
0041+  C1C8             ; HL: Address in the attribute map
0042+  C1C8             ;  C: Width
0043+  C1C8             ;  B: Height
0044+  C1C8             ;
0045+  C1C8 11 20 00    Fill_Attr: 		LD DE,32
0046+  C1CB E5          1: 			PUSH HL	
0047+  C1CC C5          			PUSH BC
0048+  C1CD 77          2: 			LD (HL), A
0049+  C1CE 2C          			INC L
0050+  C1CF 0D          			DEC C
0051+  C1D0 20 FB       			JR NZ, 2B
0052+  C1D2 C1          			POP BC
0053+  C1D3 E1          			POP HL
0054+  C1D4 19          			ADD HL,DE
0055+  C1D5 10 F4       			DJNZ 1B
0056+  C1D7 C9          			RET
0057+  C1D8             
0058+  C1D8             ; Print String Data
0059+  C1D8             ; First two bytes of string contain X and Y char position, then the string
0060+  C1D8             ; Individual strings are terminated with 0xFE
0061+  C1D8             ; End of data is terminated with 0xFF
0062+  C1D8             ; IX: Address of string
0063+  C1D8             ;
0064+  C1D8 DD 6E 00    Print_String: 		LD L,(IX+0)			; Fetch the X coordinate
0065+  C1DB DD 23       			INC IX				; Increase HL to the next memory location
0066+  C1DD DD 66 00    			LD H,(IX+0)			; Fetch the Y coordinate
0067+  C1E0 DD 23       			INC IX				; Increase HL to the next memory location
0068+  C1E2 CD F6 C1    			CALL Get_Char_Address		; Calculate the screen address (in DE)
0069+  C1E5 DD 7E 00    Print_String_0: 		LD A,(IX)			; Fetch the character to print
0070+  C1E8 DD 23       			INC IX				; Increase HL to the next character
0071+  C1EA FE FE       			CP 0xFE				; Compare with 0xFE
0072+  C1EC 28 EA       			JR Z,Print_String		; If it is equal to 0xFE then loop back to print next string
0073+  C1EE D0          			RET NC				; If it is greater or equal to (carry bit set) then
0074+  C1EF CD 89 C2    			CALL Print_Char			; Print the character
0075+  C1F2 2C          			INC L				; Go to the next screen address
0076+  C1F3 18 F0       			JR Print_String_0		; Loop back to print next character
0077+  C1F5 C9          			RET
0078+  C1F6             
0079+  C1F6             ; Get screen address
0080+  C1F6             ; H = Y character position
0081+  C1F6             ; L = X character position
0082+  C1F6             ; Returns address in HL
0083+  C1F6             ;
0084+  C1F6 7C          Get_Char_Address: 	LD A,H
0085+  C1F7 E6 07       			AND %00000111
0086+  C1F9 1F          			RRA
0087+  C1FA 1F          			RRA
0088+  C1FB 1F          			RRA
0089+  C1FC 1F          			RRA
0090+  C1FD B5          			OR L
0091+  C1FE 6F          			LD L,A
0092+  C1FF 7C          			LD A,H
0093+  C200 E6 18       			AND %00011000
0094+  C202 F6 40       			OR %01000000
0095+  C204 67          			LD H,A
0096+  C205 C9          			RET				; Returns screen address in HL
0097+  C206             
0098+  C206             ; Move HL down one character line
0099+  C206             ;
0100+  C206 7D          Char_Address_Down: 	LD A, L
0101+  C207 C6 20       			ADD A, 32
0102+  C209 6F          			LD L, A
0103+  C20A D0          			RET NC 
0104+  C20B 7C          			LD A, H 
0105+  C20C C6 08       			ADD A, 8 
0106+  C20E 67          			LD H, A
0107+  C20F C9          			RET 
0108+  C210             
0109+  C210             ; Get screen address
0110+  C210             ; B = Y pixel position
0111+  C210             ; C = X pixel position
0112+  C210             ; Returns address in HL and pixel position within character in A
0113+  C210             ;
0114+  C210 78          Get_Pixel_Address: 	LD A,B				; Calculate Y2,Y1,Y0
0115+  C211 E6 07       			AND %00000111			; Mask out unwanted bits
0116+  C213 F6 40       			OR %01000000			; Set base address of screen
0117+  C215 67          			LD H,A				; Store in H
0118+  C216 78          			LD A,B				; Calculate Y7,Y6
0119+  C217 1F          			RRA				; Shift to position
0120+  C218 1F          			RRA
0121+  C219 1F          			RRA
0122+  C21A E6 18       			AND %00011000			; Mask out unwanted bits
0123+  C21C B4          			OR H				; OR with Y2,Y1,Y0
0124+  C21D 67          			LD H,A				; Store in H
0125+  C21E 78          			LD A,B				; Calculate Y5,Y4,Y3
0126+  C21F 17          			RLA				; Shift to position
0127+  C220 17          			RLA
0128+  C221 E6 E0       			AND %11100000			; Mask out unwanted bits
0129+  C223 6F          			LD L,A				; Store in L
0130+  C224 79          			LD A,C				; Calculate X4,X3,X2,X1,X0
0131+  C225 1F          			RRA				; Shift into position
0132+  C226 1F          			RRA
0133+  C227 1F          			RRA
0134+  C228 E6 1F       			AND %00011111			; Mask out unwanted bits
0135+  C22A B5          			OR L				; OR with Y5,Y4,Y3
0136+  C22B 6F          			LD L,A				; Store in L
0137+  C22C 79          			LD A,C
0138+  C22D E6 07       			AND 7
0139+  C22F C9          			RET
0140+  C230             
0141+  C230             ; Move HL down one pixel line
0142+  C230             ;
0143+  C230 24          Pixel_Address_Down: 	INC H				; Go down onto the next pixel line
0144+  C231 7C          			LD A,H				; Check if we have gone onto next character boundary
0145+  C232 E6 07       			AND 7
0146+  C234 C0          			RET NZ				; No, so skip the next bit
0147+  C235 7D          			LD A,L				; Go onto the next character line
0148+  C236 C6 20       			ADD A,32
0149+  C238 6F          			LD L,A
0150+  C239 D8          			RET C				; Check if we have gone onto next third of screen
0151+  C23A 7C          			LD A,H				; Yes, so go onto next third
0152+  C23B D6 08       			SUB 8
0153+  C23D 67          			LD H,A
0154+  C23E C9          			RET
0155+  C23F             
0156+  C23F             ; Move HL up one pixel line
0157+  C23F             ;
0158+  C23F 25          Pixel_Address_Up: 	DEC H				; Go up onto the next pixel line
0159+  C240 7C          			LD A,H				; Check if we have gone onto the next character boundary
0160+  C241 E6 07       			AND 7
0161+  C243 FE 07       			CP 7
0162+  C245 C0          			RET NZ
0163+  C246 7D          			LD A,L
0164+  C247 D6 20       			SUB 32
0165+  C249 6F          			LD L,A
0166+  C24A D8          			RET C
0167+  C24B 7C          			LD A,H
0168+  C24C C6 08       			ADD A,8
0169+  C24E 67          			LD H,A
0170+  C24F C9          			RET
0171+  C250             
0172+  C250             ; Print a single BCD value
0173+  C250             ;  A: Character to print
0174+  C250             ; HL: Screen address to print character at
0175+  C250             ;
0175+  C250 DD 7E 00    Print_BCD_8		LD A, (IX) 
0175+  C253 DD 23         INC IX
0176+  C255 CD 6D C2      CALL Print_BCD
0176+  C258 DD 7E 00    Print_BCD_6		LD A, (IX) 
0176+  C25B DD 23         INC IX
0177+  C25D CD 6D C2      CALL Print_BCD
0177+  C260 DD 7E 00    Print_BCD_4		LD A, (IX) 
0177+  C263 DD 23         INC IX
0178+  C265 CD 6D C2      CALL Print_BCD
0178+  C268 DD 7E 00    Print_BCD_2		LD A, (IX) 
0179+  C26B DD 23         INC IX
0180+  C26D F5          Print_BCD: 		PUSH AF				; Store the value
0181+  C26E E6 F0       			AND 0xF0			; Get the top nibble
0182+  C270 1F          			RRA				; Shift into bottom nibble
0183+  C271 1F          			RRA
0184+  C272 1F          			RRA
0185+  C273 1F          			RRA
0186+  C274 C6 30       			ADD A, '0'			; Add to ASCII '0'
0187+  C276 CD 89 C2    			CALL Print_Char			; Print the character
0188+  C279 2C          			INC L				; Move right one space
0189+  C27A F1          			POP AF
0190+  C27B E6 0F       			AND 0x0F			; Get the bottom nibble
0191+  C27D C6 30       			ADD A, '0'			; Add to ASCII '0'
0192+  C27F CD 89 C2    			CALL Print_Char			; Print
0193+  C282 2C          			INC L				; Move right one space
0194+  C283 C9          			RET
0195+  C284             
0196+  C284             ; Print a single character out to an X/Y position
0197+  C284             ;  A: Character to print
0198+  C284             ;  C: X Coordinate
0199+  C284             ;  B: Y Coordinate
0200+  C284             ; DE: Address of character set
0201+  C284             ;
0202+  C284 F5          Print_Char_At: 		PUSH AF
0203+  C285 CD F6 C1    			CALL Get_Char_Address
0204+  C288 F1          			POP AF				; Fall through to Print_Char
0205+  C289             ;
0206+  C289             ; Print a single character out to a screen address
0207+  C289             ;  A:  Character to print
0208+  C289             ;  HL: Screen address to print character at
0209+  C289             ;  DE: Address of character set (if entering at Print_Char_UDG)
0210+  C289             ; No SM code here - needs to be re-enterent if called on interrupt
0211+  C289             ;
0212+  C289 11 00 3C    Print_Char: 		LD DE, 0x3C00			; Address of character set in ROM
0213+  C28C E5          			PUSH HL
0214+  C28D 06 00       			LD B, 0				; Get index into character set
0215+  C28F 4F          			LD C, A
0216+  C290             			DUP 3
0217+  C290 CB 21       >			SLA C
0218+  C292 CB 10       >			RL B
0217+  C294 CB 21       >			SLA C
0218+  C296 CB 10       >			RL B
0217+  C298 CB 21       >			SLA C
0218+  C29A CB 10       >			RL B
0220+  C29C EB          			EX DE, HL
0221+  C29D 09          			ADD HL, BC 
0222+  C29E EB          			EX DE, HL	
0223+  C29F CD A4 C2    			CALL Print_UDG8
0224+  C2A2 E1          			POP HL
0225+  C2A3 C9          			RET 	
0226+  C2A4             
0227+  C2A4             ; Print a UDG (Single Height)
0228+  C2A4             ; DE - Character data
0229+  C2A4             ; HL - Screen address
0230+  C2A4             ;
0231+  C2A4 06 08       Print_UDG8: 		LD B,8				; Loop counter
0232+  C2A6 1A          2: 			LD A,(DE)			; Get the byte from the ROM into A
0233+  C2A7 77          			LD (HL),A			; Stick A onto the screen
0234+  C2A8 13          			INC DE				; Goto next byte of character
0235+  C2A9 24          			INC H				; Goto next line on screen
0236+  C2AA 10 FA       			DJNZ 2B				; Loop around whilst it is Not Zero (NZ)
0237+  C2AC C9          			RET
0238+  C2AD             
0239+  C2AD             			endmodule
0932   C2AD             
0933   C2AD                                                         SAVESNA "adventurea.sna",BASIC_RUNNER
0934   C2AD                                                         SAVEBIN "adventurea.bin",23500, 9000
